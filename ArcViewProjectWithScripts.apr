/3.2
(ODB.1
	Dependencies:	"$AVEXT/dialog.avx\n"
	FirstRootClassName:	"Project"
	Roots:	2
	Version:	32
)

(Project.2
	Name:	"57.apr"
	CreationDate:	"15 Март 2004 г. 10:09:30"
	GUIName:	"Project"
	Win:	3
	CSMgr:	4
	DocExts:	5
	VisGUIWidth:	70
	Doc:	6
	Doc:	10
	Doc:	14
	Doc:	18
	Doc:	22
	Doc:	47
	Doc:	78
	Doc:	82
	Doc:	86
	Doc:	109
	Doc:	113
	Doc:	117
	Doc:	147
	Doc:	151
	Doc:	155
	Doc:	192
	Doc:	196
	Doc:	200
	Doc:	204
	Doc:	208
	Doc:	212
	Doc:	216
	Doc:	220
	Doc:	242
	Doc:	246
	Doc:	250
	Doc:	280
	Doc:	284
	Doc:	288
	Doc:	292
	Doc:	296
	Doc:	300
	Doc:	304
	Doc:	308
	Doc:	312
	Doc:	316
	Doc:	320
	Doc:	324
	Doc:	328
	Doc:	332
	Doc:	336
	Doc:	340
	Doc:	344
	Doc:	348
	Doc:	352
	Doc:	356
	Doc:	378
	Doc:	382
	Doc:	386
	Doc:	390
	Doc:	394
	Doc:	398
	Doc:	402
	Doc:	406
	Doc:	410
	Doc:	414
	Doc:	418
	Doc:	422
	Doc:	426
	Doc:	430
	Doc:	434
	Doc:	438
	Doc:	442
	Doc:	446
	Doc:	450
	Doc:	454
	Doc:	458
	Doc:	462
	Doc:	466
	Doc:	470
	Doc:	474
	Doc:	504
	Doc:	508
	Doc:	512
	Doc:	542
	Doc:	546
	Doc:	550
	Doc:	572
	Doc:	602
	Doc:	606
	Doc:	610
	Doc:	614
	Doc:	749
	Doc:	753
	Doc:	964
	Doc:	968
	Doc:	972
	Doc:	1059
	Doc:	1063
	Doc:	1067
	Doc:	1071
	Doc:	1148
	Doc:	1152
	Doc:	1156
	Doc:	1160
	Doc:	1164
	Doc:	1168
	Doc:	1172
	Doc:	1176
	Doc:	1180
	Doc:	1184
	Doc:	1188
	Doc:	1192
	Doc:	1196
	Doc:	1200
	Doc:	1204
	Doc:	1208
	Doc:	1212
	Doc:	1216
	Doc:	1220
	Doc:	1224
	Doc:	1228
	Doc:	1232
	Doc:	1236
	Doc:	1240
	Doc:	1244
	Doc:	1248
	Doc:	1252
	Doc:	1274
	Doc:	1278
	Doc:	1282
	Doc:	1286
	Doc:	1308
	Doc:	1330
	Doc:	1334
	Doc:	1338
	Doc:	1342
	Doc:	1346
	Doc:	1350
	Doc:	1354
	Doc:	1358
	Doc:	1362
	Doc:	1366
	Doc:	1370
	Doc:	1374
	Doc:	1378
	Doc:	1382
	Doc:	1386
	Doc:	1390
	Doc:	1394
	Doc:	1398
	Doc:	1402
	Doc:	1406
	Doc:	1410
	Doc:	1414
	Doc:	1418
	Doc:	1422
	Doc:	1426
	Doc:	1430
	Doc:	1434
	Doc:	1438
	Doc:	1442
	Doc:	1446
	Doc:	1450
	Doc:	1454
	Doc:	1458
	Doc:	1462
	Doc:	1466
	Doc:	1470
	Doc:	1474
	Doc:	1478
	Doc:	1482
	Doc:	1486
	Doc:	1490
	Doc:	1494
	Doc:	1498
	Doc:	1502
	Doc:	1506
	Doc:	1510
	Doc:	1514
	Doc:	1518
	Doc:	1522
	Doc:	1526
	Doc:	1530
	Doc:	1534
	Doc:	1538
	Doc:	1542
	Doc:	1546
	Doc:	1550
	Doc:	1554
	Doc:	1558
	Doc:	1562
	Doc:	1566
	Doc:	1570
	Doc:	1574
	Doc:	1578
	Doc:	1582
	Doc:	1586
	Doc:	1590
	Doc:	1594
	Doc:	1598
	Doc:	1602
	Doc:	1606
	Doc:	1610
	Doc:	1614
	Doc:	1618
	Doc:	1622
	Doc:	1626
	Doc:	1630
	Doc:	1634
	Doc:	1638
	Doc:	1642
	Doc:	1646
	Doc:	1650
	Doc:	1654
	Doc:	1658
	Doc:	1662
	Doc:	1666
	Doc:	1670
	Doc:	1674
	Doc:	1678
	Doc:	1682
	Doc:	1686
	Doc:	1690
	Doc:	1694
	Doc:	1698
	Doc:	1702
	Doc:	1706
	Doc:	1710
	Doc:	1714
	Doc:	1718
	Doc:	1722
	Doc:	1726
	Doc:	1730
	Doc:	1734
	Doc:	1738
	Doc:	1761
	Doc:	1782
	Doc:	1786
	Doc:	1790
	Doc:	1794
	Doc:	1798
	Doc:	1802
	Doc:	1806
	Doc:	1810
	Doc:	1814
	Doc:	1818
	Doc:	1822
	Doc:	1826
	Doc:	1830
	Doc:	1834
	Doc:	1838
	Doc:	1842
	Doc:	1846
	Doc:	1850
	Doc:	1854
	Doc:	1858
	Doc:	1862
	Doc:	1866
	Doc:	1870
	Doc:	1874
	Doc:	1878
	Doc:	1882
	Doc:	1886
	Doc:	1890
	Doc:	1894
	Doc:	1898
	Doc:	1902
	Doc:	1906
	Doc:	1910
	Doc:	1914
	Doc:	1918
	Doc:	1922
	Doc:	1926
	Doc:	1930
	Doc:	1934
	Doc:	1938
	Doc:	1942
	Doc:	1946
	Doc:	1950
	Doc:	1954
	Doc:	1958
	Doc:	1962
	Doc:	1966
	Doc:	1970
	Doc:	1974
	Doc:	1978
	Doc:	1982
	Doc:	1986
	Doc:	1990
	Doc:	1994
	Doc:	1998
	Doc:	2002
	Doc:	2006
	Doc:	2010
	Doc:	2014
	Doc:	2018
	Doc:	2022
	Doc:	2026
	Doc:	2030
	Doc:	2034
	Doc:	2038
	Doc:	2042
	Doc:	2046
	Doc:	2050
	Doc:	2054
	Doc:	2058
	Doc:	2062
	Doc:	2066
	Doc:	2070
	Doc:	2074
	Doc:	2078
	Doc:	2082
	Doc:	2086
	Doc:	2090
	Doc:	2094
	Doc:	2098
	Doc:	2102
	Doc:	2106
	Doc:	2110
	Doc:	2114
	Doc:	2118
	Doc:	2122
	Doc:	2126
	Doc:	2130
	Doc:	2134
	Doc:	2138
	Buttons:	2142
	Buttons:	2143
	Buttons:	2144
	Dependencies:	2145
	Scripts:	2146
	Prefs:	2147
	GUI:	2168
	GUI:	2564
	GUI:	2749
	GUI:	2827
	GUI:	2938
	GUI:	3029
	GUI:	3268
	WorkDir:	3398
	WinX:	-4
	WinY:	-3
	WinW:	1292
	WinH:	1035
	SerialNumber:	"825861106440"
	SelColor:	3399
	GUINames:	3400
	GUINames:	3401
	GUINames:	3402
	GUINames:	3403
	GUINames:	3404
	GUINames:	3405
	GUINames:	3406
	GUINames:	3407
	GUINames:	3408
	GUINames:	3409
	LegendLineFlatness:	100
	TocWidthScale:	1.00000000000000
)

(DocWin.3
	Owner:	2
	Open:	1
	X:	-4
	Y:	-4
	W:	1294
	H:	931
)

(CSMgr.4
)

(DocAct.5
	Doc:	2
)

(SEd.6
	Name:	"Ae.FindInScript"
	CreationDate:	"4 Июль 2004 г. 9:29:34"
	GUIName:	"Script"
	Win:	7
	CSMgr:	8
	DocExts:	9
	Source:	"findString = msgbox.input( \"Enter find string\", \"Find\", \"\")\nif (findString = nil) then\n  return nil\nend\n\ntheProject = av.GetProject\naGUI = theProject.GetSelectedGUI\ntheDocs = theProject.GetDocsWithGUI(aGUI)\n\nfor each i in theDocs\n  if (i.GetWin.IsOpen) then\n    i.SetInsertPos(0)\n    found = i.Search(findString)\n  else\n    i.GetWin.Open\n    i.SetInsertPos(0)\n    found = i.Search(findString)\n    if (found.not) then\n      i.GetWin.Close\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.7
	Owner:	6
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.8
)

(DocAct.9
	Doc:	6
)

(SEd.10
	Name:	"Ae.Make"
	CreationDate:	"22 Июнь 2004 г. 20:03:06"
	GUIName:	"Script"
	Win:	11
	CSMgr:	12
	DocExts:	13
	Source:	"encrypted = av.FindScript(\"AVExtAdvEditor.EInstall\").AsEncrypted\nencrypted.SetName(\"AVExtAdvEditor.EInstall\")\nencrypted2 = av.FindScript(\"AVExtAdvEditor.EUninstall\").AsEncrypted\nencrypted2.SetName(\"AVExtAdvEditor.EUninstall\")\nencrypted3 = av.FindScript(\"AVExtAdvEditor.EUnload\").AsEncrypted\nencrypted3.SetName(\"AVExtAdvEditor.EUnload\")\nencrypted4 = av.FindScript(\"AVExtAdvEditor.ECanUnload\").AsEncrypted\nencrypted4.SetName(\"AVExtAdvEditor.ECanUnload\")\n\nMyDialogExt = Extension.Make(\"$AVEXT\\AVAEditor.avx\".AsFileN
ame,\n   \"Advanced Editor\",\n   encrypted,\n   encrypted2,\n   {\"$AVBIN/avdlog.dll\".AsFileName})\n\nMyDialogExt.SetExtVersion(11)\nMyDialogExt.SetAbout(\"Advanced Editor\" + nl + \"Copyright (C) 2004 Alexander Karandeev, Serguei Mikhailov. All right reserved.\")\nMyDialogExt.SetUnloadScript(encrypted3)\nMyDialogExt.SetCanUnloadScript(encrypted4)\n\n'Добавить документ для редактирования\nMyDialogExt.Add( av.GetProject.FindGUI(\"AVExtAdvEditView\"))\nMyDialogExt.Add( av.GetProject.FindGUI(\"AVExtAdvEditTheme\"))\n\n' Извлечь кнопку
, запускающую диалоговое окно, и добавить ее в расширение\naMenu = av.FindGUI(\"View\").GetMenuBar.GetControls.Get(2).GetControls.Get(2).Clone\nMyDialogExt.Add(aMenu)\naBut = av.FindGUI(\"View\").GetButtonBar.GetControls.Get(4).Clone\nMyDialogExt.Add(aBut)\n\n' Извлечь диалоговое окно MyDialog из проекта и добавить его в расширение\naDialogGUI = av.GetProject.FindGUI(\"DialogEditor\")\naDialogList = av.GetProject.GetDocsWithGUI(aDialogGUI)\nfor each theDialogEditor in aDialogList\n  graphicControls = theDialogEditor.GetGra
phics\n  dupNameDict = Dictionary.Make(21)\n  for each gc in theDialogEditor.GetGraphics\n    if (dupNameDict.Add(gc.GetName, gc).Not) then\n      MsgBox.Error(\"'\"+gc.GetName+\"' используется более одного раза в качестве имени элемента управления.\",\n                   \"Повторно используемое имя элемента управления\")\n      return nil\n    end\n    if (gc.GetControl.Is(TextLine) or gc.GetControl.Is(TextBox) or\n        gc.GetControl.Is(Slider)   or gc.GetControl.Is(ListBox) or\n        gc.GetControl.Is(ComboBox)      
                           )then\n      if ((gc.GetControl.GetNextControl <> nil) and \n          (graphicControls.FindByName(gc.GetControl.GetNextControl.GetName) = nil)) then\n        MsgBox.Error(\"Следующий элемент управления\"+gc.GetControl.GetNextControl.GetName+\" не существует\",\n                     \"Элемент управления не существует\")\n        gc.GetControl.SetNextControl(nil)\n        return nil\n      elseif (gc.GetControl.GetNextControl <> nil) then\n        nextControlName = gc.GetControl.GetNextControl.G
etName\n        gc.GetControl.SetNextControl(graphicControls.FindByName(nextControlName).GetControl)\n      end\n    end\n  end\n  dupNameDict.Empty\n  theDialogEditor.GetDialog.SetServer(nil)\n  theDialogEditor.Compile\nend\n\n\n\naUSer = \"\"\n\naOrg = \"\"\n\naComp = \"\"\n\naSer = \"\"\n\nMyDialogExt.Add(av.FindDialog(\"AVExtAdvEditor.About\"))\nMyDialogExt.Add(av.FindDialog(\"AVExtAdvEditor.Absolut\"))\nMyDialogExt.Add(av.FindDialog(\"AVExtAdvEditor.Angle\"))\nMyDialogExt.Add(av.FindDialog(\"AVExtAdvEditor.AnLen\"))\nMyDialogExt.Add(av.FindD
ialog(\"AVExtAdvEditor.Attrib\"))\nMyDialogExt.Add(aUSer)\nMyDialogExt.Add(av.FindDialog(\"AVExtAdvEditor.Deflection\"))\nMyDialogExt.Add(av.FindDialog(\"AVExtAdvEditor.Delta\"))\nMyDialogExt.Add(av.FindDialog(\"AVExtAdvEditor.Length\"))\nMyDialogExt.Add(av.FindDialog(\"AVExtAdvEditor.Options\"))\nMyDialogExt.Add(aOrg)\nMyDialogExt.Add(av.FindDialog(\"AVExtAdvEditor.OptionsGen\"))\nMyDialogExt.Add(av.FindDialog(\"AVExtAdvEditor.OptionsDr\"))\nMyDialogExt.Add(av.FindDialog(\"AVExtAdvEditor.OptionsPan\"))\nMyDialogExt.Add(aComp)\nMyDia
logExt.Add(av.FindDialog(\"AVExtAdvEditor.Selectable\"))\nMyDialogExt.Add(av.FindDialog(\"AVExtAdvEditor.Snap\"))\nMyDialogExt.Add(av.FindDialog(\"AVExtAdvEditor.SnapOff\"))\nMyDialogExt.Add(aSer)\nMyDialogExt.Add(av.FindDialog(\"AVExtAdvEditor.Target\"))\nMyDialogExt.Add(av.FindDialog(\"AVExtAdvEditor.Task\"))\nMyDialogExt.Add(av.FindDialog(\"AVExtAdvEditor.NRotate\"))\nMyDialogExt.Add(av.FindDialog(\"AVExtAdvEditor.NScale\"))\nMyDialogExt.Add(av.FindDialog(\"AVExtAdvEditor.NMove\"))\nMyDialogExt.Add(av.FindDialog(\"AVExtAdvEditor.
NMoveTo\"))\n\n' Извлечь все скрипты, связанные с диалоговым окном, убедиться, что они \n' скомпилированы, и затем добавить их в расширение. Предполагается, что\n' скрипты имеют префикс \"MyDialog\"\naDocList = List.Make\nfor each aDoc in av.GetProject.GetDocs\n  if (aDoc.Is(SEd)) then\n    if (aDoc.GetName.Contains(\"AVExtAdvEditor.\")) then\n      if (aDocList.FindByValue(aDoc.GetName.Clone) = -1) then\n        if (aDoc.IsCompiled.Not) then\n          aDoc.Compile\n        end\n        aName = aDoc.GetName.Clone\n        aD
ocList.Add(aName.Clone)\n        encrypted = av.FindScript(aName).AsEncrypted\n        encrypted.SetName(aName)\n        MyDialogExt.Add(encrypted)\n      end\n    end\n  end\nend\n\n' Сохранить расширение в файле\nMyDialogExt.Commit"
	SearchStr:	"NotEditNumV"
)

(DocWin.11
	Owner:	10
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.12
)

(DocAct.13
	Doc:	10
)

(SEd.14
	Name:	"Ae.NAmeTool"
	CreationDate:	"7 Июль 2004 г. 0:26:08"
	GUIName:	"Script"
	Win:	15
	CSMgr:	16
	DocExts:	17
	Source:	"aProject = av.GetProject\naLIst = aProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.GetControls\ny = 0\nfor each i in aList\n  if (Y = 10) then\n    z = i '.getControls.Get(0)\n    msgbox.info (z.GetHelp++z.GetName++y.AsString + nl +\n                 i.GetName,\"\")\n  end\n  if (Y = 12) then\n    'i.getControls.Get(2).SetNAme(\"AERotate\")\n  end\n  y = y+1\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.15
	Owner:	14
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.16
)

(DocAct.17
	Doc:	14
)

(SEd.18
	Name:	"Ae.RunProverka"
	CreationDate:	"4 Июль 2004 г. 9:21:15"
	GUIName:	"Script"
	Win:	19
	CSMgr:	20
	DocExts:	21
	Source:	"system.execute(\"Explorer\"++(\"D:\\MyWork\\AdvancedEditor\\proverka.apr\".AsFileName.GetFullName))"
	SearchStr:	"NotEditNumV"
)

(DocWin.19
	Owner:	18
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.20
)

(DocAct.21
	Doc:	18
)

(DEd.22
	Name:	"AVExtAdvEditor.About"
	CreationDate:	"3 Июль 2004 г. 6:23:56"
	GUIName:	"DialogEditor"
	Win:	23
	CSMgr:	24
	DocExts:	26
	DocExts:	27
	Graphics:	28
	Dpy:	36
	Dialog:	39
	DialogExtent:	46
	Compiled:	1
)

(DocWin.23
	Owner:	22
	X:	77
	Y:	-2
	W:	1166
	H:	771
)

(CSMgr.24
	Client:	25
)

(CSClient.25
	Client:	26
	ReqName:	"ClientNfy"
)

(PanMgr.26
	Doc:	22
)

(DocAct.27
	Doc:	22
)

(GList.28
	Child:	29
	Child:	33
	Dpy:	36
	FormatNumb:	38
)

(GCtrl.29
	Name:	"aTextBox1"
	Bounds:	30
	ControlConstraints:	0x55
	Control:	31
	Editable:	1
)

(RectD.30
	Left:	2.25000000000000
	Top:	6.26041666666667
	Right:	3.73958333333333
	Bottom:	5.93750000000000
)

(TextBox.31
	InternalName:	"aTextBox1"
	UseGraphicNfy:	1
	Listening:	1
	ReadOnly:	1
	Text:	"E-mail: av3ext@gmail.com"
	Constraints:	0x55
	NextControl:	32
)

(Nil.32
)

(GCtrl.33
	Name:	"aTextLabel2"
	Bounds:	34
	ControlConstraints:	0x55
	Control:	35
	Editable:	1
)

(RectD.34
	Left:	1.48958333333333
	Top:	6.53125000000000
	Right:	4.85416666666667
	Bottom:	6.26041666666667
)

(TextLabel.35
	InternalName:	"aTextLabel2"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"Advanced Editor (C) 2004 Alexander Karandeev, Serguei Mikhailov"
	Listening:	1
)

(PageDpy.36
	Top:	7.77083333333333
	Right:	12.07291666666667
	ReportUnits:	1
	Units:	1
	Scale:	37
	ZoomRight:	12.07291666666667
	ZoomTop:	7.77083333333333
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.37
	N:	0.08283002588438
)

(Numb.38
)

(AVDLog.39
	Name:	"AVExtAdvEditor.About"
	X:	97
	Y:	124
	W:	393
	H:	91
	Server:	32
	ControlPanel:	40
	Title:	"About"
	EscapeEnabled:	1
	Resizable:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	DefaultButton:	45
)

(CPanel.40
	Child:	41
	Child:	42
	ResBox:	43
	ResBox:	44
	Listening:	1
)

(TextBox.41
	InternalName:	"aTextBox1"
	Listening:	1
	ReadOnly:	1
	Text:	"E-mail: av3ext@gmail.com"
	Constraints:	0x55
	NextControl:	32
)

(TextLabel.42
	InternalName:	"aTextLabel2"
	Constraints:	0x55
	Label:	"Advanced Editor (C) 2004 Alexander Karandeev, Serguei Mikhailov"
	Listening:	1
)

(RectD.43
	Left:	122.00000000000000
	Top:	74.00000000000000
	Right:	265.00000000000000
	Bottom:	43.00000000000000
)

(RectD.44
	Left:	49.00000000000000
	Top:	43.00000000000000
	Right:	372.00000000000000
	Bottom:	17.00000000000000
)

(Nil.45
)

(RectD.46
	Left:	0.97916666666667
	Top:	6.70833333333333
	Right:	5.07291666666667
	Bottom:	5.76041666666667
)

(DEd.47
	Name:	"AVExtAdvEditor.Absolut"
	CreationDate:	"6 Май 2004 г. 1:23:14"
	GUIName:	"DialogEditor"
	Win:	48
	CSMgr:	49
	DocExts:	51
	DocExts:	52
	Graphics:	53
	Dpy:	64
	Dialog:	67
	DialogExtent:	77
	Compiled:	1
)

(DocWin.48
	Owner:	47
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.49
	Client:	50
)

(CSClient.50
	Client:	51
	ReqName:	"ClientNfy"
)

(PanMgr.51
	Doc:	47
)

(DocAct.52
	Doc:	47
)

(GList.53
	Child:	54
	Child:	59
	Dpy:	64
	FormatNumb:	66
)

(GCtrl.54
	Name:	"aTL1"
	Bounds:	55
	Control:	56
	Editable:	1
)

(RectD.55
	Left:	4.02083333333333
	Top:	6.65625000000000
	Right:	5.01041666666667
	Bottom:	6.44791666666667
)

(TextLine.56
	InternalName:	"aTL1"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
	TextType:	57
	Apply:	"AVExtAdvEditor.AbsolutAp"
	NextControl:	58
)

(AVEnum.57
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.58
)

(GCtrl.59
	Name:	"aTL2"
	Bounds:	60
	Control:	61
	Editable:	1
)

(RectD.60
	Left:	5.06250000000000
	Top:	6.65625000000000
	Right:	6.05208333333333
	Bottom:	6.44791666666667
)

(TextLine.61
	InternalName:	"aTL2"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
	TextType:	62
	Apply:	"AVExtAdvEditor.AbsolutAp"
	NextControl:	63
)

(AVEnum.62
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.63
)

(PageDpy.64
	Top:	7.43750000000000
	Right:	12.03125000000000
	ReportUnits:	1
	Units:	1
	Scale:	65
	ZoomRight:	12.03125000000000
	ZoomTop:	7.43750000000000
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.65
	N:	0.08311688311688
)

(Numb.66
)

(AVDLog.67
	Name:	"AVExtAdvEditor.Absolut"
	X:	392
	Y:	88
	W:	198
	H:	40
	Server:	32
	ControlPanel:	68
	Title:	"Absolute X, Y"
	EscapeEnabled:	1
	Resizable:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	Close:	"AVExtAdvEditor.DialogClose"
	DefaultButton:	76
)

(CPanel.68
	Child:	69
	Child:	72
	ResBox:	74
	ResBox:	75
	Listening:	1
)

(TextLine.69
	InternalName:	"aTL1"
	Listening:	1
	TextType:	70
	Apply:	"AVExtAdvEditor.AbsolutAp"
	NextControl:	71
)

(AVEnum.70
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.71
)

(TextLine.72
	InternalName:	"aTL2"
	Listening:	1
	TextType:	73
	Apply:	"AVExtAdvEditor.AbsolutAp"
	NextControl:	71
)

(AVEnum.73
	Name:	"TEXTLINE_TYPE_REAL"
)

(RectD.74
	Left:	-3.00000000000000
	Top:	29.00000000000000
	Right:	92.00000000000000
	Bottom:	9.00000000000000
)

(RectD.75
	Left:	97.00000000000000
	Top:	29.00000000000000
	Right:	192.00000000000000
	Bottom:	9.00000000000000
)

(Nil.76
)

(RectD.77
	Left:	4.05208333333333
	Top:	6.75000000000000
	Right:	6.11458333333333
	Bottom:	6.36458333333333
)

(SEd.78
	Name:	"AVExtAdvEditor.AbsolutAp"
	CreationDate:	"17 Май 2004 г. 1:48:47"
	GUIName:	"Script"
	Win:	79
	CSMgr:	80
	DocExts:	81
	Source:	"aText1 = self.GetDialog.FindByName(\"aTL1\").GetText\nif (aText1.IsNumber) then\n  aX = aText1.AsNumber\nelse\n  return nil\nend\naText2 = self.GetDialog.FindByName(\"aTL2\").GetText\nif (aText2.IsNumber) then\n  aY = aText2.AsNumber\nelse\n  return nil\nend\nif (_AVExtAdvEditorDrawClass = \"point\") then\n  aNewPt = aX@aY\n  av.Run(\"AVExtAdvEditor.ToolDrawingStop\",aNewPt)\nelse\n  agrlist = _AVExtAdvEditorView.getgraphics\n  if (_AVExtAdvEditorScratchList <> nil) then\n    aNum = _AVExtAdvEditorScratchList.Count - 1\n    if (_AVEx
tAdvEditorScratchList.Get(aNum).Get(0) = nil) then\n      _AVExtAdvEditorScratchList.Remove(aNum)\n    end\n    aNewPt = aX@aY\n    _AVExtAdvEditorScratchList.add({aNewPt.clone,\"line\"})\n    av.Run(\"AVExtAdvEditor.ToolDrawing\",nil)\n    if (_AVExtAdvEditorShowVer) then\n      aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n      if (aVertexEnd <> nil) then\n        if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n          aVertexEnd.SetName(\"AVExtAdvEditorV
ertexCurve\")\n        else\n          aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n        end\n        aVertexEnd.invalidate\n        aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n        aVertexEnd.invalidate\n        aVertex = GraphicShape.Make(aNewPt.Clone)\n        aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n        aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n        aVertex.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n        agrlist.Add(aVertex)\n      end        \n    end\n  else\n    _AVExtAdvEditorScratchL
istPart = false\n    _AVExtAdvEditorScratchList = List.Make\n    aNewPt = aX@aY\n    _AVExtAdvEditorScratchList.add({aNewPt.clone,\"line\"})\n    if (_AVExtAdvEditorShowVer) then\n      aVertex = GraphicShape.Make(aNewPt.Clone)\n      aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n      aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n      aVertex.SetObjectTag(0)\n      agrlist.Add(aVertex)\n    end\n    _AVExtAdvEditoraptS = nil\n  end\nend\nif (_AVExtAdvEditorAutoClose) then\n  self.GetDialog.Close\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.79
	Owner:	78
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.80
)

(DocAct.81
	Doc:	78
)

(SEd.82
	Name:	"AVExtAdvEditor.AbsolutOpen"
	CreationDate:	"17 Май 2004 г. 1:48:14"
	GUIName:	"Script"
	Win:	83
	CSMgr:	84
	DocExts:	85
	Source:	"aDil = av.FindDialog(\"AVExtAdvEditor.Absolut\")\naDil.FindByName(\"aTL1\").SetText(\"0\")\naDil.FindByName(\"aTL2\").SetText(\"0\")\naDil.Open"
	SearchStr:	"NotEditNumV"
)

(DocWin.83
	Owner:	82
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.84
)

(DocAct.85
	Doc:	82
)

(DEd.86
	Name:	"AVExtAdvEditor.Angle"
	CreationDate:	"6 Май 2004 г. 1:23:14"
	GUIName:	"DialogEditor"
	Win:	87
	CSMgr:	88
	DocExts:	90
	DocExts:	91
	Graphics:	92
	Dpy:	98
	Dialog:	101
	DialogExtent:	108
	Compiled:	1
)

(DocWin.87
	Owner:	86
	Y:	-1
	W:	1290
	H:	899
)

(CSMgr.88
	Client:	89
)

(CSClient.89
	Client:	90
	ReqName:	"ClientNfy"
)

(PanMgr.90
	Doc:	86
)

(DocAct.91
	Doc:	86
)

(GList.92
	Child:	93
	Dpy:	98
	FormatNumb:	100
)

(GCtrl.93
	Name:	"aTL"
	Bounds:	94
	Control:	95
	Editable:	1
)

(RectD.94
	Left:	3.42708333333333
	Top:	7.80208333333333
	Right:	4.66666666666667
	Bottom:	7.59375000000000
)

(TextLine.95
	InternalName:	"aTL"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
	TextType:	96
	Apply:	"AVExtAdvEditor.AngleAp"
	NextControl:	97
)

(AVEnum.96
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.97
)

(PageDpy.98
	Top:	9.10416666666667
	Right:	13.36458333333333
	ReportUnits:	1
	Units:	1
	Scale:	99
	ZoomRight:	13.36458333333333
	ZoomTop:	9.10416666666667
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.99
	N:	0.07482462977397
)

(Numb.100
)

(AVDLog.101
	Name:	"AVExtAdvEditor.Angle"
	X:	335
	Y:	138
	W:	121
	H:	40
	Server:	32
	ControlPanel:	102
	Title:	"Angle"
	EscapeEnabled:	1
	Resizable:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	Close:	"AVExtAdvEditor.DialogClose"
	DefaultButton:	107
)

(CPanel.102
	Child:	103
	ResBox:	106
	Listening:	1
)

(TextLine.103
	InternalName:	"aTL"
	Listening:	1
	TextType:	104
	Apply:	"AVExtAdvEditor.AngleAp"
	NextControl:	105
)

(AVEnum.104
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.105
	InternalName:	"AVExtAdvEditor.DialogCloseEmpty"
)

(RectD.106
	Left:	-3.00000000000000
	Top:	29.00000000000000
	Right:	116.00000000000000
	Bottom:	9.00000000000000
)

(Nil.107
)

(RectD.108
	Left:	3.45833333333333
	Top:	7.89583333333333
	Right:	4.71875000000000
	Bottom:	7.51041666666667
)

(SEd.109
	Name:	"AVExtAdvEditor.AngleAp"
	CreationDate:	"16 Май 2004 г. 3:47:38"
	GUIName:	"Script"
	Win:	110
	CSMgr:	111
	DocExts:	112
	Source:	"aText = self.GetText\nif (aText.IsNumber) then\n  aAng = aText.AsNumber\n  _AVExtAdvEditorAngleEnb = true\n  _AVExtAdvEditorAngleCos = aAng.AsRadians.Cos\n  _AVExtAdvEditorAngleSin = aAng.asRadians.Sin\n  _AVExtAdvEditorDeflectionEnb = false\n  _AVExtAdvEditorDeflectionCos = nil\n  _AVExtAdvEditorDeflectionSin = nil\n  _AVExtAdvEditorLengthEnb = false\n  _AVExtAdvEditorLengthSet = nil\n  if (_AVExtAdvEditorAutoClose) then\n  self.GetDialog.Close\n  end\nelse\n  _AVExtAdvEditorAngleEnb = false\n  _AVExtAdvEditorAngleCos = n
il\n  _AVExtAdvEditorAngleSin = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.110
	Owner:	109
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.111
)

(DocAct.112
	Doc:	109
)

(SEd.113
	Name:	"AVExtAdvEditor.AngleOpen"
	CreationDate:	"16 Май 2004 г. 3:58:09"
	GUIName:	"Script"
	Win:	114
	CSMgr:	115
	DocExts:	116
	Source:	"aDil = av.FindDialog(\"AVExtAdvEditor.Angle\")\naDil.FindByName(\"aTL\").SetText(\"0\")\naDil.Open"
	SearchStr:	"NotEditNumV"
)

(DocWin.114
	Owner:	113
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.115
)

(DocAct.116
	Doc:	113
)

(DEd.117
	Name:	"AVExtAdvEditor.AnLen"
	CreationDate:	"6 Май 2004 г. 1:23:14"
	GUIName:	"DialogEditor"
	Win:	118
	CSMgr:	119
	DocExts:	121
	DocExts:	122
	Graphics:	123
	Dpy:	134
	Dialog:	137
	DialogExtent:	146
	Compiled:	1
)

(DocWin.118
	Owner:	117
	X:	-4
	Y:	-4
	W:	1290
	H:	899
)

(CSMgr.119
	Client:	120
)

(CSClient.120
	Client:	121
	ReqName:	"ClientNfy"
)

(PanMgr.121
	Doc:	117
)

(DocAct.122
	Doc:	117
)

(GList.123
	Child:	124
	Child:	129
	Dpy:	134
	FormatNumb:	136
)

(GCtrl.124
	Name:	"aTL1"
	Bounds:	125
	Control:	126
	Editable:	1
)

(RectD.125
	Left:	3.84375000000000
	Top:	7.54166666666667
	Right:	4.83333333333333
	Bottom:	7.33333333333333
)

(TextLine.126
	InternalName:	"aTL1"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
	TextType:	127
	Apply:	"AVExtAdvEditor.AnLenAp"
	NextControl:	128
)

(AVEnum.127
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.128
)

(GCtrl.129
	Name:	"aTL2"
	Bounds:	130
	Control:	131
	Editable:	1
)

(RectD.130
	Left:	4.88541666666667
	Top:	7.54166666666667
	Right:	5.87500000000000
	Bottom:	7.33333333333333
)

(TextLine.131
	InternalName:	"aTL2"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
	TextType:	132
	Apply:	"AVExtAdvEditor.AnLenAp"
	NextControl:	133
)

(AVEnum.132
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.133
)

(PageDpy.134
	Top:	9.10416666666667
	Right:	13.36458333333333
	ReportUnits:	1
	Units:	1
	Scale:	135
	ZoomRight:	13.36458333333333
	ZoomTop:	9.10416666666667
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.135
	N:	0.07482462977397
)

(Numb.136
)

(AVDLog.137
	Name:	"AVExtAdvEditor.AnLen"
	X:	375
	Y:	162
	W:	197
	H:	40
	Server:	32
	ControlPanel:	138
	Title:	"Angle/Length"
	EscapeEnabled:	1
	Resizable:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	Close:	"AVExtAdvEditor.DialogClose"
	DefaultButton:	145
)

(CPanel.138
	Child:	139
	Child:	141
	ResBox:	143
	ResBox:	144
	Listening:	1
)

(TextLine.139
	InternalName:	"aTL1"
	Listening:	1
	TextType:	140
	Apply:	"AVExtAdvEditor.AnLenAp"
	NextControl:	105
)

(AVEnum.140
	Name:	"TEXTLINE_TYPE_REAL"
)

(TextLine.141
	InternalName:	"aTL2"
	Listening:	1
	TextType:	142
	Apply:	"AVExtAdvEditor.AnLenAp"
	NextControl:	105
)

(AVEnum.142
	Name:	"TEXTLINE_TYPE_REAL"
)

(RectD.143
	Left:	-3.00000000000000
	Top:	30.00000000000000
	Right:	92.00000000000000
	Bottom:	10.00000000000000
)

(RectD.144
	Left:	97.00000000000000
	Top:	30.00000000000000
	Right:	192.00000000000000
	Bottom:	10.00000000000000
)

(Nil.145
)

(RectD.146
	Left:	3.87500000000000
	Top:	7.64583333333333
	Right:	5.92708333333333
	Bottom:	7.26041666666667
)

(SEd.147
	Name:	"AVExtAdvEditor.AnLenAp"
	CreationDate:	"16 Май 2004 г. 19:25:44"
	GUIName:	"Script"
	Win:	148
	CSMgr:	149
	DocExts:	150
	Source:	"aDis1T = self.GetDialog.FindByName(\"aTL2\").GetText\nif (aDis1T.IsNumber) then\n  aDis1 = aDis1T.AsNumber\nelse\n  return nil\nend\naText = self.GetDialog.FindByName(\"aTL1\").GetText\nif (aText.IsNumber) then\n  aAng = aText.AsNumber\n  AngleCos = aAng.AsRadians.Cos\n  AngleSin = aAng.asRadians.Sin\nelse\n  return nil\nend\nif (_AVExtAdvEditorScratchList <> nil) then\n  aNum = _AVExtAdvEditorScratchList.Count - 1\n  if (_AVExtAdvEditorScratchList.Get(aNum).Get(0) = nil) then\n    _AVExtAdvEditorScratchList.Remove(aNum)\n  end\n
  aLastPoint = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0)\n  if (aLastPoint = \"Part\") then\n    aLastPoint = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(0)\n  end  \n  aNewPtX = (aDis1 * AngleSin) + aLastPoint.GetX\n  aNewPtY = (aDis1 * AngleCos) + aLastPoint.GetY\n  aNewPt = aNewPtX@aNewPtY\n  _AVExtAdvEditorScratchList.add({aNewPt.clone,\"line\"})\n  av.Run(\"AVExtAdvEditor.ToolDrawing\",nil)\n  if (_AVExtAdvEditorShowVer) then\n    agrlist = _AVExtAdvEditor
View.getgraphics\n    aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n    if (aVertexEnd <> nil) then\n      if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n        aVertexEnd.SetName(\"AVExtAdvEditorVertexCurve\")\n      else\n        aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n      end\n      aVertexEnd.invalidate\n      aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n      aVertexEnd.invalidate\n      aVertex = GraphicShape.Make(aNewPt.Clone)\n      aVertex.Se
tName(\"AVExtAdvEditorVertexEnd\")\n      aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n      aVertex.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n      agrlist.Add(aVertex)\n    end        \n  end\nend\nif (_AVExtAdvEditorAutoClose) then\nself.GetDialog.Close\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.148
	Owner:	147
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.149
)

(DocAct.150
	Doc:	147
)

(SEd.151
	Name:	"AVExtAdvEditor.AnLenOpen"
	CreationDate:	"16 Май 2004 г. 19:23:16"
	GUIName:	"Script"
	Win:	152
	CSMgr:	153
	DocExts:	154
	Source:	"aDil = av.FindDialog(\"AVExtAdvEditor.AnLen\")\naDil.FindByName(\"aTL1\").SetText(\"0\")\naDil.FindByName(\"aTL2\").SetText(\"0\")\naDil.Open"
	SearchStr:	"NotEditNumV"
)

(DocWin.152
	Owner:	151
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.153
)

(DocAct.154
	Doc:	151
)

(DEd.155
	Name:	"AVExtAdvEditor.Attrib"
	CreationDate:	"27 Апрель 2004 г. 0:24:48"
	GUIName:	"DialogEditor"
	Win:	156
	CSMgr:	157
	DocExts:	159
	DocExts:	160
	Graphics:	161
	Dpy:	176
	Dialog:	179
	DialogExtent:	191
	Compiled:	1
)

(DocWin.156
	Owner:	155
	X:	-4
	Y:	-4
	W:	1290
	H:	899
)

(CSMgr.157
	Client:	158
)

(CSClient.158
	Client:	159
	ReqName:	"ClientNfy"
)

(PanMgr.159
	Doc:	155
)

(DocAct.160
	Doc:	155
)

(GList.161
	Child:	162
	Child:	167
	Child:	171
	Dpy:	176
	FormatNumb:	178
)

(GCtrl.162
	Name:	"aLBA"
	Bounds:	163
	Control:	164
	Editable:	1
)

(RectD.163
	Left:	4.27083333333333
	Top:	7.76041666666667
	Right:	6.39583333333333
	Bottom:	5.78125000000000
)

(AVLBox.164
	InternalName:	"aLBA"
	UseGraphicNfy:	1
	NextControl:	165
	ContentKind:	4
	Constraints:	0x55
	ColumnCount:	1
	Listening:	1
	VerticalScroll:	1
	Select:	"AVExtAdvEditor.AttributRight"
	SelectionStyle:	166
	Apply:	"AVExtAdvEditor.AttributRightApply"
)

(Nil.165
)

(AVEnum.166
	Name:	"LISTBOX_SELECTION_SINGLEROW"
)

(GCtrl.167
	Name:	"aTLE"
	Bounds:	168
	Control:	169
	Editable:	1
)

(RectD.168
	Left:	2.91666666666667
	Top:	5.71875000000000
	Right:	6.38541666666667
	Bottom:	5.51041666666667
)

(TextLine.169
	InternalName:	"aTLE"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
	TextType:	170
	Apply:	"AVExtAdvEditor.AttributEdit"
	NextControl:	165
)

(AVEnum.170
	Name:	"TEXTLINE_TYPE_ALL"
)

(GCtrl.171
	Name:	"aLBS"
	Bounds:	172
	Control:	173
	Editable:	1
)

(RectD.172
	Left:	2.98958333333333
	Top:	7.76041666666667
	Right:	4.22916666666667
	Bottom:	5.78125000000000
)

(AVLBox.173
	InternalName:	"aLBS"
	UseGraphicNfy:	1
	NextControl:	174
	ContentKind:	4
	Constraints:	0x55
	ColumnCount:	1
	Listening:	1
	VerticalScroll:	1
	Select:	"AVExtAdvEditor.AttributLeft"
	SelectionStyle:	175
)

(Nil.174
)

(AVEnum.175
	Name:	"LISTBOX_SELECTION_SINGLEROW"
)

(PageDpy.176
	Top:	9.10416666666667
	Right:	13.36458333333333
	ReportUnits:	1
	Units:	1
	Scale:	177
	ZoomRight:	13.36458333333333
	ZoomTop:	9.10416666666667
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.177
	N:	0.07482462977397
)

(Numb.178
)

(AVDLog.179
	Name:	"AVExtAdvEditor.Attrib"
	X:	282
	Y:	142
	W:	339
	H:	230
	Server:	32
	ControlPanel:	180
	Title:	"Attributes"
	EscapeEnabled:	1
	Resizable:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	Close:	"AVExtAdvEditor.DialogClose"
	DefaultButton:	190
)

(CPanel.180
	Child:	181
	Child:	183
	Child:	185
	ResBox:	187
	ResBox:	188
	ResBox:	189
	Listening:	1
)

(AVLBox.181
	InternalName:	"aLBA"
	NextControl:	105
	ContentKind:	4
	Listening:	1
	VerticalScroll:	1
	Select:	"AVExtAdvEditor.AttributRight"
	SelectionStyle:	182
	Apply:	"AVExtAdvEditor.AttributRightApply"
)

(AVEnum.182
	Name:	"LISTBOX_SELECTION_SINGLEROW"
)

(TextLine.183
	InternalName:	"aTLE"
	Listening:	1
	TextType:	184
	Apply:	"AVExtAdvEditor.AttributEdit"
	NextControl:	105
)

(AVEnum.184
	Name:	"TEXTLINE_TYPE_ALL"
)

(AVLBox.185
	InternalName:	"aLBS"
	NextControl:	105
	ContentKind:	4
	Listening:	1
	VerticalScroll:	1
	Select:	"AVExtAdvEditor.AttributLeft"
	SelectionStyle:	186
)

(AVEnum.186
	Name:	"LISTBOX_SELECTION_SINGLEROW"
)

(RectD.187
	Left:	131.00000000000000
	Top:	199.00000000000000
	Right:	335.00000000000000
	Bottom:	9.00000000000000
)

(RectD.188
	Left:	1.00000000000000
	Top:	225.00000000000000
	Right:	334.00000000000000
	Bottom:	205.00000000000000
)

(RectD.189
	Left:	8.00000000000000
	Top:	199.00000000000000
	Right:	127.00000000000000
	Bottom:	9.00000000000000
)

(Nil.190
)

(RectD.191
	Left:	2.90625000000000
	Top:	7.85416666666667
	Right:	6.43750000000000
	Bottom:	5.45833333333333
)

(SEd.192
	Name:	"AVExtAdvEditor.AttributEdit"
	CreationDate:	"28 Июнь 2004 г. 4:26:35"
	GUIName:	"Script"
	Win:	193
	CSMgr:	194
	DocExts:	195
	Source:	"aLBA = self.GetDialog.FindByName(\"aLBA\")\naLBS = self.GetDialog.FindByName(\"aLBS\")\nif (aLBS.GetSelection.Count = 0) then\n  return nil\nend\nif ((aLBS.GetSelection.Get(0) = _AVExtAdvEditorAtrIconPg) or (aLBS.GetSelection.Get(0) = _AVExtAdvEditorAtrIconPl) or (aLBS.GetSelection.Get(0) = _AVExtAdvEditorAtrIconP)) then\n  return nil\nend\nif (aLBA.GetSelection.Count = 0) then\n  return nil\nend\nif (aLBA.GetSelection.Get(1) = \"Value\") then\n  return nil\nend\naFtab = aLBS.GetSelection.Get(2).GEtFtab\naRec = aLBS.GetSelectio
n.Get(0)\naField = aLBA.GetSelection.Get(0)\naFtab.SetValue(aField,aRec,self.gettext.clone)\naRow = aLBA.GetCurrentRow\naLBS.Select\naLBA.GoRow(aRow)\naLBA.SelectCurrent(false)\naLBA.ShowCurrent\naLBA.Select\naLBA.Focus"
	SearchStr:	"NotEditNumV"
)

(DocWin.193
	Owner:	192
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.194
)

(DocAct.195
	Doc:	192
)

(SEd.196
	Name:	"AVExtAdvEditor.AttributLeft"
	CreationDate:	"28 Июнь 2004 г. 4:07:36"
	GUIName:	"Script"
	Win:	197
	CSMgr:	198
	DocExts:	199
	Source:	"aLBA = self.GetDialog.FindByName(\"aLBA\")\naTLE = self.GetDialog.FindByName(\"aTLE\")\naTLE.SetText(\"\")\nif ((self.GetSelection.Get(0) = _AVExtAdvEditorAtrIconPg) or (self.GetSelection.Get(0) = _AVExtAdvEditorAtrIconPl) or (self.GetSelection.Get(0) = _AVExtAdvEditorAtrIconP)) then\n  self.SetSelection(Rect.MakeEmpty,false)\n  return nil\n  aLBA.DefineFromList({})\nend\naList = {{\"Field\",\"Value\"}}\naFtab = self.GetSelection.Get(2).GetFTab\naVal = self.GetSelection.Get(0)\nself.GetSelection.Get(2).BlinkRecord(aVal)\naLIstFi
eld  = aFtab.GetFields\nfor each iFields in aLIstField\n  if (iFields.GetNAme <> \"Shape\") then\n    aValue = aFtab.ReturnValue(iFields,self.GetSelection.Get(0))\n    aList.Add({iFields,aValue})\n  end\nend\naLBA.DefineFromList(aList)\naLBA.GoColumn(0)\naLBA.SetColumnWidth(25)\naLBA.GoColumn(1)\naLBA.SetColumnWidth(75)"
	SearchStr:	"NotEditNumV"
)

(DocWin.197
	Owner:	196
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.198
)

(DocAct.199
	Doc:	196
)

(SEd.200
	Name:	"AVExtAdvEditor.AttributRight"
	CreationDate:	"28 Июнь 2004 г. 4:19:19"
	GUIName:	"Script"
	Win:	201
	CSMgr:	202
	DocExts:	203
	Source:	"aTLE = self.GetDialog.FindByName(\"aTLE\")\nif (self.GetSelection.Get(1) = \"Value\") then\n  self.SetSelection(Rect.MakeEmpty,false)\n  return nil\n  aTLE.SetText(\"\")\nend\naTLE.SetText(self.GetSelection.Get(1).AsString)"
	SearchStr:	"NotEditNumV"
)

(DocWin.201
	Owner:	200
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.202
)

(DocAct.203
	Doc:	200
)

(SEd.204
	Name:	"AVExtAdvEditor.AttributRightApply"
	CreationDate:	"28 Июнь 2004 г. 5:06:09"
	GUIName:	"Script"
	Win:	205
	CSMgr:	206
	DocExts:	207
	Source:	"aTLE = self.GetDialog.FindByName(\"aTLE\")\naTLE.Focus"
	SearchStr:	"NotEditNumV"
)

(DocWin.205
	Owner:	204
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.206
)

(DocAct.207
	Doc:	204
)

(SEd.208
	Name:	"AVExtAdvEditor.AttributShow"
	CreationDate:	"28 Июнь 2004 г. 3:53:35"
	GUIName:	"Script"
	Win:	209
	CSMgr:	210
	DocExts:	211
	Source:	"aDil = av.FindDialog(\"AVExtAdvEditor.Attrib\")\nif (aDil.IsOpen) then\n  aDil.Close\nelse\n  aLBS = aDil.FindByName(\"aLBS\")\n  aLBA = aDil.FindByName(\"aLBA\")\n  aTLE = aDil.FindByName(\"aTLE\")\n  aTLE.SetText(\"\")\n  aLBA.DefineFromList({})\n  aThemesList = _AVExtAdvEditorSelectableBitmap.ReturnKeys\n  aList = {}\n  for each ithemes in aThemesList\n    if (ithemes.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorSelectable.GEt(ithemes) = 1) then\n        aFtab = ithemes.GetFTab\n        aFTabSel = aFTab.GetSelection\n      
  if (aFTabSel.Count > 0) then\n          if (aFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n            aList.Add({_AVExtAdvEditorAtrIconPg,ithemes.GetName,\"\"})\n          elseif (aFTab.FindField(\"Shape\").GetType = #FIELD_SHAPELINE) then\n            aList.Add({_AVExtAdvEditorAtrIconPl,ithemes.GetName,\"\"})\n          else\n            aList.Add({_AVExtAdvEditorAtrIconP,ithemes.GetName,\"\"})\n          end\n          aIdFd = aFTab.FindField(\"name\")\n          if (aIdFd = nil) then\n            aListFd = aF
Tab.GetFields\n            for each aListFdI in aListFd\n              if (aListFdI.GetName = \"*name*\".AsPattern) then\n                aIdFd = aListFdI\n                break\n              end\n            end\n            if (aIdFd = nil) then\n              aIdFd = aFTab.FindField(\"Id\")\n              if (aIdFd = nil) then\n                if (aListFd.Count > 1) then\n                  aIdFd = aListFd.Get(0)\n                  if (aIdFd.GetName = \"Snape\") then                  \n                    aIdFd = aFTab.Get
Fields.Get(1)\n                  end\n                else\n                  aIdFd = nil\n                end\n              end\n            end\n          end\n          if (aIdFd = nil) then\n            for each ibit in aFTabSel\n              aLIst.Add({ibit.clone,\"\",ithemes})\n            end\n          else\n            for each ibit in aFTabSel\n              aLIst.Add({ibit.clone,aFTab.ReturnValueString(aIdFd,ibit),ithemes})\n            end\n          end\n        end\n      end\n    end\n  end\n  aLBS.DefineFromList
(aList)\n  aLBS.GoColumn(0)\n  aLBS.SetColumnWidth(40)\n  aLBS.GoColumn(1)\n  aLBS.SetColumnWidth(60)\n  aLBS.GoColumn(2)\n  aLBS.SetColumnWidth(0)\n  aDil.Open\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.209
	Owner:	208
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.210
)

(DocAct.211
	Doc:	208
)

(SEd.212
	Name:	"AVExtAdvEditor.AttributUpd"
	CreationDate:	"28 Июнь 2004 г. 3:45:20"
	GUIName:	"Script"
	Win:	213
	CSMgr:	214
	DocExts:	215
	Source:	"aDil = av.FindDialog(\"AVExtAdvEditor.Attrib\")\naLBS = aDil.FindByName(\"aLBS\")\naLBA = aDil.FindByName(\"aLBA\")\naTLE = aDil.FindByName(\"aTLE\")\naTLE.SetText(\"\")\naLBA.DefineFromList({})\nif (aDil.IsOpen) then\n  aThemesList = _AVExtAdvEditorSelectableBitmap.ReturnKeys\n  alISt = {}\n  for each ithemes in aThemesList\n    if (ithemes.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorSelectable.GEt(ithemes) = 1) then\n        aFtab = ithemes.GetFTab\n        aFTabSel = aFTab.GetSelection\n        if (aFTabSel.Count > 0) th
en\n          if (aFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n            aList.Add({_AVExtAdvEditorAtrIconPg,ithemes.GetName,\"\"})\n          elseif (aFTab.FindField(\"Shape\").GetType = #FIELD_SHAPELINE) then\n            aList.Add({_AVExtAdvEditorAtrIconPl,ithemes.GetName,\"\"})\n          else\n            aList.Add({_AVExtAdvEditorAtrIconP,ithemes.GetName,\"\"})\n          end\n          aIdFd = aFTab.FindField(\"name\")\n          if (aIdFd = nil) then\n            aListFd = aFTab.GetFields\n            fo
r each aListFdI in aListFd\n              if (aListFdI.GetName = \"*name*\".AsPattern) then\n                aIdFd = aListFdI\n                break\n              end\n            end\n            if (aIdFd = nil) then\n              aIdFd = aFTab.FindField(\"Id\")\n              if (aIdFd = nil) then\n                if (aListFd.Count > 1) then\n                  aIdFd = aListFd.Get(0)\n                  if (aIdFd.GetName = \"Snape\") then                  \n                    aIdFd = aFTab.GetFields.Get(1)\n              
    end\n                else\n                  aIdFd = nil\n                end\n              end\n            end\n          end\n          if (aIdFd = nil) then\n            for each ibit in aFTabSel\n              aLIst.Add({ibit.clone,\"\",ithemes})\n            end\n          else\n            for each ibit in aFTabSel\n              aLIst.Add({ibit.clone,aFTab.ReturnValueString(aIdFd,ibit),ithemes})\n            end\n          end\n        end\n      end\n    end\n  end\n  aLBS.DefineFromList(aList)\n  aLBS.GoColumn(0)\n 
 aLBS.SetColumnWidth(40)\n  aLBS.GoColumn(1)\n  aLBS.SetColumnWidth(60)\n  aLBS.GoColumn(2)\n  aLBS.SetColumnWidth(0)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.213
	Owner:	212
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.214
)

(DocAct.215
	Doc:	212
)

(SEd.216
	Name:	"AVExtAdvEditor.ColorSet"
	CreationDate:	"3 Май 2004 г. 1:20:27"
	GUIName:	"Script"
	Win:	217
	CSMgr:	218
	DocExts:	219
	Source:	"if (self = \"Black\") then\n  aC = Color.GetBlack\nelseif (self = \"Blue\") then  \n  aC = Color.GetBlue\nelseif (self = \"Cyan\") then\n  aC = Color.GetCyan\nelseif (self = \"Gray\") then\n  aC = Color.GetGray\nelseif (self = \"Green\") then\n  aC = Color.GetGreen\nelseif (self = \"Magenta\") then\n  aC = Color.GetMagenta\nelseif (self = \"Yellow\") then\n  aC = Color.GetYellow\nelseif (self = \"White\") then\n  aC = Color.GetWhite\nelse\n  aC = Color.GetRed\nend\nreturn aC"
	SearchStr:	"NotEditNumV"
)

(DocWin.217
	Owner:	216
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.218
)

(DocAct.219
	Doc:	216
)

(DEd.220
	Name:	"AVExtAdvEditor.Deflection"
	CreationDate:	"6 Май 2004 г. 1:23:14"
	GUIName:	"DialogEditor"
	Win:	221
	CSMgr:	222
	DocExts:	224
	DocExts:	225
	Graphics:	226
	Dpy:	232
	Dialog:	235
	DialogExtent:	241
	Compiled:	1
)

(DocWin.221
	Owner:	220
	X:	-2
	Y:	209
	W:	1290
	H:	899
)

(CSMgr.222
	Client:	223
)

(CSClient.223
	Client:	224
	ReqName:	"ClientNfy"
)

(PanMgr.224
	Doc:	220
)

(DocAct.225
	Doc:	220
)

(GList.226
	Child:	227
	Dpy:	232
	FormatNumb:	234
)

(GCtrl.227
	Name:	"aTL"
	Bounds:	228
	Control:	229
	Editable:	1
)

(RectD.228
	Left:	3.54166666666667
	Top:	6.97916666666667
	Right:	4.78125000000000
	Bottom:	6.77083333333333
)

(TextLine.229
	InternalName:	"aTL"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
	TextType:	230
	Apply:	"AVExtAdvEditor.DeflectionAp"
	NextControl:	231
)

(AVEnum.230
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.231
)

(PageDpy.232
	Top:	9.10416666666667
	Right:	13.36458333333333
	ReportUnits:	1
	Units:	1
	Scale:	233
	ZoomRight:	13.36458333333333
	ZoomTop:	9.10416666666667
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.233
	N:	0.07482462977397
)

(Numb.234
)

(AVDLog.235
	Name:	"AVExtAdvEditor.Deflection"
	X:	345
	Y:	217
	W:	121
	H:	40
	Server:	32
	ControlPanel:	236
	Title:	"Deflection"
	EscapeEnabled:	1
	Resizable:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	Close:	"AVExtAdvEditor.DialogClose"
	DefaultButton:	240
)

(CPanel.236
	Child:	237
	ResBox:	239
	Listening:	1
)

(TextLine.237
	InternalName:	"aTL"
	Listening:	1
	TextType:	238
	Apply:	"AVExtAdvEditor.DeflectionAp"
	NextControl:	105
)

(AVEnum.238
	Name:	"TEXTLINE_TYPE_REAL"
)

(RectD.239
	Left:	-2.00000000000000
	Top:	29.00000000000000
	Right:	117.00000000000000
	Bottom:	9.00000000000000
)

(Nil.240
)

(RectD.241
	Left:	3.56250000000000
	Top:	7.07291666666667
	Right:	4.82291666666667
	Bottom:	6.68750000000000
)

(SEd.242
	Name:	"AVExtAdvEditor.DeflectionAp"
	CreationDate:	"17 Май 2004 г. 1:10:47"
	GUIName:	"Script"
	Win:	243
	CSMgr:	244
	DocExts:	245
	Source:	"aText = self.GetText\nif (aText.IsNumber) then\n  aAng = aText.AsNumber\n  _AVExtAdvEditorDeflectionEnb = true\n  _AVExtAdvEditorDeflectionCos = aAng.AsRadians.Cos\n  _AVExtAdvEditorDeflectionSin = aAng.asRadians.Sin\n  _AVExtAdvEditorAngleEnb = false\n  _AVExtAdvEditorAngleCos = nil\n  _AVExtAdvEditorAngleSin = nil\n  _AVExtAdvEditorLengthEnb = false\n  _AVExtAdvEditorLengthSet = nil\n  if (_AVExtAdvEditorAutoClose) then\n  self.GetDialog.Close\n  end\nelse\n  _AVExtAdvEditorDeflectionEnb = false\n  _AVExtAdvEditorDeflect
ionCos = nil\n  _AVExtAdvEditorDeflectionSin = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.243
	Owner:	242
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.244
)

(DocAct.245
	Doc:	242
)

(SEd.246
	Name:	"AVExtAdvEditor.DeflectionOpen"
	CreationDate:	"17 Май 2004 г. 1:09:59"
	GUIName:	"Script"
	Win:	247
	CSMgr:	248
	DocExts:	249
	Source:	"aDil = av.FindDialog(\"AVExtAdvEditor.Deflection\")\naDil.FindByName(\"aTL\").SetText(\"0\")\naDil.Open"
	SearchStr:	"NotEditNumV"
)

(DocWin.247
	Owner:	246
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.248
)

(DocAct.249
	Doc:	246
)

(DEd.250
	Name:	"AVExtAdvEditor.Delta"
	CreationDate:	"6 Май 2004 г. 1:23:14"
	GUIName:	"DialogEditor"
	Win:	251
	CSMgr:	252
	DocExts:	254
	DocExts:	255
	Graphics:	256
	Dpy:	267
	Dialog:	270
	DialogExtent:	279
	Compiled:	1
)

(DocWin.251
	Owner:	250
	X:	-4
	Y:	-4
	W:	1290
	H:	899
)

(CSMgr.252
	Client:	253
)

(CSClient.253
	Client:	254
	ReqName:	"ClientNfy"
)

(PanMgr.254
	Doc:	250
)

(DocAct.255
	Doc:	250
)

(GList.256
	Child:	257
	Child:	262
	Dpy:	267
	FormatNumb:	269
)

(GCtrl.257
	Name:	"aTL1"
	Bounds:	258
	Control:	259
	Editable:	1
)

(RectD.258
	Left:	4.17708333333333
	Top:	5.94791666666667
	Right:	5.16666666666667
	Bottom:	5.73958333333333
)

(TextLine.259
	InternalName:	"aTL1"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
	TextType:	260
	Apply:	"AVExtAdvEditor.DeltaAp"
	NextControl:	261
)

(AVEnum.260
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.261
)

(GCtrl.262
	Name:	"aTL2"
	Bounds:	263
	Control:	264
	Editable:	1
)

(RectD.263
	Left:	5.21875000000000
	Top:	5.94791666666667
	Right:	6.20833333333333
	Bottom:	5.73958333333333
)

(TextLine.264
	InternalName:	"aTL2"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
	TextType:	265
	Apply:	"AVExtAdvEditor.DeltaAp"
	NextControl:	266
)

(AVEnum.265
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.266
)

(PageDpy.267
	Top:	9.10416666666667
	Right:	13.36458333333333
	ReportUnits:	1
	Units:	1
	Scale:	268
	ZoomRight:	13.36458333333333
	ZoomTop:	9.10416666666667
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.268
	N:	0.07482462977397
)

(Numb.269
)

(AVDLog.270
	Name:	"AVExtAdvEditor.Delta"
	X:	407
	Y:	316
	W:	198
	H:	40
	Server:	32
	ControlPanel:	271
	Title:	"Delta X, Y"
	EscapeEnabled:	1
	Resizable:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	Close:	"AVExtAdvEditor.DialogClose"
	DefaultButton:	278
)

(CPanel.271
	Child:	272
	Child:	274
	ResBox:	276
	ResBox:	277
	Listening:	1
)

(TextLine.272
	InternalName:	"aTL1"
	Listening:	1
	TextType:	273
	Apply:	"AVExtAdvEditor.DeltaAp"
	NextControl:	105
)

(AVEnum.273
	Name:	"TEXTLINE_TYPE_REAL"
)

(TextLine.274
	InternalName:	"aTL2"
	Listening:	1
	TextType:	275
	Apply:	"AVExtAdvEditor.DeltaAp"
	NextControl:	105
)

(AVEnum.275
	Name:	"TEXTLINE_TYPE_REAL"
)

(RectD.276
	Left:	-3.00000000000000
	Top:	29.00000000000000
	Right:	92.00000000000000
	Bottom:	9.00000000000000
)

(RectD.277
	Left:	97.00000000000000
	Top:	29.00000000000000
	Right:	192.00000000000000
	Bottom:	9.00000000000000
)

(Nil.278
)

(RectD.279
	Left:	4.20833333333333
	Top:	6.04166666666667
	Right:	6.27083333333333
	Bottom:	5.65625000000000
)

(SEd.280
	Name:	"AVExtAdvEditor.DeltaAp"
	CreationDate:	"17 Май 2004 г. 2:07:34"
	GUIName:	"Script"
	Win:	281
	CSMgr:	282
	DocExts:	283
	Source:	"aText1 = self.GetDialog.FindByName(\"aTL1\").GetText\nif (aText1.IsNumber) then\n  adX = aText1.AsNumber\nelse\n  return nil\nend\naText2 = self.GetDialog.FindByName(\"aTL2\").GetText\nif (aText2.IsNumber) then\n  adY = aText2.AsNumber\nelse\n  return nil\nend\nagrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScratchList <> nil) then\n  aNum = _AVExtAdvEditorScratchList.Count - 1\n  if (_AVExtAdvEditorScratchList.Get(aNum).Get(0) = nil) then\n    _AVExtAdvEditorScratchList.Remove(aNum)\n  end\n  aLastPoint = _AVExtA
dvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0)\n  if (aLastPoint = \"Part\") then\n    aLastPoint = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(0)\n  end\n  aNewPt = (aLastPoint.GetX + aDX)@(aLastPoint.GetY + adY)\n  _AVExtAdvEditorScratchList.add({aNewPt.clone,\"line\"})\n  av.Run(\"AVExtAdvEditor.ToolDrawing\",nil)\n  if (_AVExtAdvEditorShowVer) then\n    aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n    if (aVertexEnd <> nil) then\n      if (_AVExtAdvEdito
rScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n        aVertexEnd.SetName(\"AVExtAdvEditorVertexCurve\")\n      else\n        aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n      end\n      aVertexEnd.invalidate\n      aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n      aVertexEnd.invalidate\n      aVertex = GraphicShape.Make(aNewPt.Clone)\n      aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n      aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n      aVertex.SetObjectTag(_AVExtAdvEditorScratchList
.Count - 1)\n      agrlist.Add(aVertex)\n    end        \n  end\nend\nif (_AVExtAdvEditorAutoClose) then\nself.GetDialog.Close\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.281
	Owner:	280
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.282
)

(DocAct.283
	Doc:	280
)

(SEd.284
	Name:	"AVExtAdvEditor.DeltaOpen"
	CreationDate:	"17 Май 2004 г. 2:09:17"
	GUIName:	"Script"
	Win:	285
	CSMgr:	286
	DocExts:	287
	Source:	"aDil = av.FindDialog(\"AVExtAdvEditor.Delta\")\naDil.FindByName(\"aTL1\").SetText(\"0\")\naDil.FindByName(\"aTL2\").SetText(\"0\")\naDil.Open"
	SearchStr:	"NotEditNumV"
)

(DocWin.285
	Owner:	284
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.286
)

(DocAct.287
	Doc:	284
)

(SEd.288
	Name:	"AVExtAdvEditor.DialogClose"
	CreationDate:	"28 Июнь 2004 г. 09:42:38"
	GUIName:	"Script"
	Win:	289
	CSMgr:	290
	DocExts:	291
	Source:	"aCL = self.GetControlPanel.GetControls\nfor each i in aCL\n  if (i.GetClass.GetClassName = \"ListBox\") then\n    i.Empty\n  elseif (i.GetClass.GetClassName = \"ComboBox\") then\n    i.Empty\n  elseif (i.GetClass.GetClassName = \"TextLine\") then\n    i.Empty\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.289
	Owner:	288
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.290
)

(DocAct.291
	Doc:	288
)

(SEd.292
	Name:	"AVExtAdvEditor.DialogCloseEmpty"
	CreationDate:	"28 Июнь 2004 г. 10:04:42"
	GUIName:	"Script"
	Win:	293
	CSMgr:	294
	DocExts:	295
	Source:	"return nil"
	SearchStr:	"NotEditNumV"
)

(DocWin.293
	Owner:	292
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.294
)

(DocAct.295
	Doc:	292
)

(SEd.296
	Name:	"AVExtAdvEditor.DSelectableOpen"
	CreationDate:	"17 Май 2004 г. 20:11:10"
	GUIName:	"Script"
	Win:	297
	CSMgr:	298
	DocExts:	299
	Source:	"aDT = av.FindDialog(\"AVExtAdvEditor.Selectable\")\nif (aDT.IsOpen) then\n  aDT.Close\nelse\n  aDT.Open\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.297
	Owner:	296
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.298
)

(DocAct.299
	Doc:	296
)

(SEd.300
	Name:	"AVExtAdvEditor.DSnapOpen"
	CreationDate:	"17 Май 2004 г. 20:14:20"
	GUIName:	"Script"
	Win:	301
	CSMgr:	302
	DocExts:	303
	Source:	"aDT = av.FindDialog(\"AVExtAdvEditor.Snap\")\nif (aDT.IsOpen) then\n  aDT.Close\nelse\n  aDT.Open\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.301
	Owner:	300
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.302
)

(DocAct.303
	Doc:	300
)

(SEd.304
	Name:	"AVExtAdvEditor.DTaskOpen"
	CreationDate:	"28 Апрель 2004 г. 0:55:16"
	GUIName:	"Script"
	Win:	305
	CSMgr:	306
	DocExts:	307
	Source:	"aDT = av.FindDialog(\"AVExtAdvEditor.Task\")\nif (aDT.IsOpen) then\n  aDT.Close\nelse\n  aDT.Open\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.305
	Owner:	304
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.306
)

(DocAct.307
	Doc:	304
)

(SEd.308
	Name:	"AVExtAdvEditor.DTOCOpen"
	CreationDate:	"26 Апрель 2004 г. 20:23:34"
	GUIName:	"Script"
	Win:	309
	CSMgr:	310
	DocExts:	311
	Source:	"if (av.FindDialog(\"AVExtAdvEditor.Target\").IsOpen) then\n  av.FindDialog(\"AVExtAdvEditor.Target\").Close\nelse\n  av.FindDialog(\"AVExtAdvEditor.Target\").Open\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.309
	Owner:	308
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.310
)

(DocAct.311
	Doc:	308
)

(SEd.312
	Name:	"AVExtAdvEditor.DTOCUpd"
	CreationDate:	"18 Май 2004 г. 1:51:05"
	GUIName:	"Script"
	Win:	313
	CSMgr:	314
	DocExts:	315
	Source:	"aActive = _AVExtAdvEditorView.GetActiveThemes\nif (aActive.Count = 0) then\n  if (_AVExtAdvEditorTheme <> nil) then\n    _AVExtAdvEditorTheme = nil\n    if (av.FindDialog(\"AVExtAdvEditor.Target\").IsOpen) then\n      av.FindDialog(\"AVExtAdvEditor.Target\").FindByName(\"aLBT\").Select\n    end\n  end\nelse\n  aFind = 0\n  for each i in aActive\n    if (i = _AVExtAdvEditorTheme) then\n      aFind = 1\n      break\n    end\n  end\n  if (aFind = 0) then\n    for each i in aActive\n      if (_AVExtAdvEditorList.Get(i) <> nil) then\n  
      _AVExtAdvEditorTheme = i\n        aFind = 1\n        if (av.FindDialog(\"AVExtAdvEditor.Target\").IsOpen) then\n          av.FindDialog(\"AVExtAdvEditor.Target\").FindByName(\"aLBT\").Select\n        end\n        break\n      end\n    end\n  end\n  if (aFind = 0) then\n    if (_AVExtAdvEditorTheme <> nil) then\n      _AVExtAdvEditorTheme = nil\n      if (av.FindDialog(\"AVExtAdvEditor.Target\").IsOpen) then\n        av.FindDialog(\"AVExtAdvEditor.Target\").FindByName(\"aLBT\").Select\n      end\n    end\n  end\nend\naThemesList = 
_AVExtAdvEditorVisible.ReturnKeys\nfor each ithemes in aThemesList\n  if (ithemes.IsVisible) then\n    ithemesrealvis = 1\n  else\n    ithemesrealvis = 0\n  end\n  if (ithemesrealvis <> _AVExtAdvEditorVisible.GEt(ithemes)) then\n    if (av.FindDialog(\"AVExtAdvEditor.Target\").IsOpen) then\n      av.FindDialog(\"AVExtAdvEditor.Target\").FindByName(\"aLBT\").Select\n      break\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.313
	Owner:	312
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.314
)

(DocAct.315
	Doc:	312
)

(SEd.316
	Name:	"AVExtAdvEditor.ECanUnload"
	CreationDate:	"22 Июнь 2004 г. 19:46:17"
	GUIName:	"Script"
	Win:	317
	CSMgr:	318
	DocExts:	319
	Source:	"return((System.CanUnloadLibrary(self.GetDependencies.Get(0))) and (_AVExtAdvEditorList = nil))"
	SearchStr:	"NotEditNumV"
)

(DocWin.317
	Owner:	316
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.318
)

(DocAct.319
	Doc:	316
)

(SEd.320
	Name:	"AVExtAdvEditor.EditEnd"
	CreationDate:	"16 Март 2004 г. 0:29:27"
	GUIName:	"Script"
	Win:	321
	CSMgr:	322
	DocExts:	323
	Source:	"av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.GetControls.Get(0).Select\nav.DelayedRun(\"AVExtAdvEditor.EditEndPart2\",nil,0)"
	SearchStr:	"NotEditNumV"
)

(DocWin.321
	Owner:	320
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.322
)

(DocAct.323
	Doc:	320
)

(SEd.324
	Name:	"AVExtAdvEditor.EditEndPart2"
	CreationDate:	"28 Июнь 2004 г. 6:42:12"
	GUIName:	"Script"
	Win:	325
	CSMgr:	326
	DocExts:	327
	Source:	"aProject = av.GetProject\naGUI2 = aProject.FindGUI(\"AVExtAdvEditTheme\")\naList2 = aProject.GetDocsWithGUI(aGUI2)\nfor each i in aList2\n  aEdit = i.GetEditableTheme\n  if (aEdit <> nil) then\n    if (_AVExtAdvEditorConfir) then\n      doSave = MsgBox.YesNo(\"Save Edits to \"+aEdit.GetName+\n                                  \"?\", \"Stop Editing\", true)\n      if (aEdit.StopEditing(doSave).Not) then\n        MsgBox.Info (\"Unable to Save Edits to \"\n                      + aEdit.GetName  +\n                      \", please us
e the Save Edits As option\", \"\")\n      end\n      i.SetEditableTheme(nil)\n    else\n      if (aEdit.StopEditing(true).Not) then\n        MsgBox.Info (\"Unable to Save Edits to \"\n                      + aEdit.GetName  +\n                      \", please use the Save Edits As option\", \"\")\n      end\n      i.SetEditableTheme(NIL)\n    end\n  end\nend\nav.FindDialog(\"AVExtAdvEditor.Target\").Close\nav.FindDialog(\"AVExtAdvEditor.Task\").Close\nav.FindDialog(\"AVExtAdvEditor.Task\").FindByName(\"aCBTask\").Empty\nav.FindDialog(\"AVEx
tAdvEditor.Snap\").Close\nav.FindDialog(\"AVExtAdvEditor.Selectable\").Close\nav.FindDialog(\"AVExtAdvEditor.Angle\").Close\nav.FindDialog(\"AVExtAdvEditor.Deflection\").Close\nav.FindDialog(\"AVExtAdvEditor.Length\").Close\nav.FindDialog(\"AVExtAdvEditor.Absolut\").Close\nav.FindDialog(\"AVExtAdvEditor.AnLen\").Close\nav.FindDialog(\"AVExtAdvEditor.Delta\").Close\nav.FindDialog(\"AVExtAdvEditor.Attrib\").Close\nav.FindDialog(\"AVExtAdvEditor.Options\").Close\nav.FindDialog(\"AVExtAdvEditor.OptionsDr\").Close\nav.FindDialog(\"AVExtAdvEdito
r.OptionsPan\").Close\nav.FindDialog(\"AVExtAdvEditor.SnapOff\").Close\nav.FindDialog(\"AVExtAdvEditor.NRotate\").Close\nav.FindDialog(\"AVExtAdvEditor.NScale\").Close\nav.FindDialog(\"AVExtAdvEditor.NMoveTo\").Close\nav.FindDialog(\"AVExtAdvEditor.NMove\").Close\n_AVExtAdvEditorStartSnapRun = nil\n_AVExtAdvEditoraptMoveSLM = nil\n_AVExtAdvEditorRotateMoveClick = nil\n_AVExtAdvEditoraptMoveSM = nil\n_AVExtAdvEditorMoveCenterRun = nil\n_AVExtAdvEditoraptMoving = nil\n_AVExtAdvEditorSelectableBitmap = nil\n_AVExtAdvEditorMeasureRun 
= nil\n_AVExtAdvEditorMeasurePoint = nil\n_AVExtAdvEditorRotateClick = nil\n_AVExtAdvEditorRotateStartPt = nil\n_AVExtAdvEditorConfir = nil\n_AVExtAdvEditoraptSM = nil\n_AVExtAdvEditorAtrIconP = nil\n_AVExtAdvEditorAtrIconPg = nil\n_AVExtAdvEditorAtrIconPl = nil\n_AVExtAdvEditorSelectionCenter = nil\n_AVExtAdvEditoraptSLM = nil\n_AVExtAdvEditorMeasureShape = nil\n_AVExtAdvEditorThemeQueryWin = nil\n_AVExtAdvEditorSemiArcT = nil\n_AVExtAdvEditorStartSnapPan = nil\n_AVExtAdvEditorListDocTh = nil\n_AVExtAdvEditorStartMovePan 
= nil\n_AVExtAdvEditorVisible = nil\n_AVExtAdvEditorScratchRestore = nil\n_AVExtAdvEditorDrawClass = nil\n_AVExtAdvEditorSelectionPointS = nil\n_AVExtAdvEditorSelectionPoint = nil\n_AVExtAdvEditorScratchListPart = nil\n_AVExtAdvEditorScratchListPartPoint = nil\n_AVExtAdvEditorScratchListPartVertexEdit = nil\n_AVExtAdvEditorIcvis = nil\n_AVExtAdvEditorIcvisf = nil\n_AVExtAdvEditorScratchListPartNumber = nil\n_AVExtAdvEditorPanSh = nil\n_AVExtAdvEditorAngleEnb = nil\n_AVExtAdvEditorAutoClose = nil\n_AVExtAdvEditorResetParam
 = nil\n_AVExtAdvEditorAngleCos = nil\n_AVExtAdvEditorAngleSin = nil\n_AVExtAdvEditorLengthEnb = nil\n_AVExtAdvEditorLengthSet = nil\n_AVExtAdvEditorSelectable = nil\n_AVExtAdvEditorDeflectionEnb = nil\n_AVExtAdvEditorDeflectionCos = nil\n_AVExtAdvEditorDeflectionSin = nil\n_AVExtAdvEditoraptSR = nil\n_AVExtAdvEditorPanAlt = nil\n_AVExtAdvEditorPan = nil\n_AVExtAdvEditorPanClick = nil\n_AVExtAdvEditorStartMoveRun\n_AVExtAdvEditorVertexArc = nil\n_AVExtAdvEditorList = nil\n_AVExtAdvEditoraptSL = nil\n_AVExtAdvEditorClickVert
ex = nil\n_AVExtAdvEditoraptL = nil\n_AVExtAdvEditorListSnap = nil\n_AVExtAdvEditorScratchPC = nil\n_AVExtAdvEditorVertexNum = nil\n_AVExtAdvEditorScratchPS = nil\n_AVExtAdvEditorScratchP2 = nil\n_AVExtAdvEditorVertexSb = nil\n_AVExtAdvEditorVertexEnd = nil\n_AVExtAdvEditorVertex = nil\n_AVExtAdvEditorSelectionSketch = nil\n_AVExtAdvEditorCurGr = nil\n_AVExtAdvEditorShowVer = nil\n_AVExtAdvEditorVertexC = nil\n_AVExtAdvEditorVertexS = nil\n_AVExtAdvEditorVertexEndC = nil\n_AVExtAdvEditorVertexEndS = nil\n_AVExtAdvEditorSele
ctionLC = nil\n_AVExtAdvEditorSelectionLS = nil\n_AVExtAdvEditorShowCurP = nil\n_AVExtAdvEditorScratchLC = nil\n_AVExtAdvEditorScratchLS = nil\n_AVExtAdvEditorScratchLD = nil\n_AVExtAdvEditorScratchLED = nil\n_AVExtAdvEditorScratchLE = nil\n_AVExtAdvEditorScratchLEC = nil\n_AVExtAdvEditorScratchLES = nil\n_AVExtAdvEditorTheme = nil\n_AVExtAdvEditorIcedf = nil\n_AVExtAdvEditorIcebf = nil\n_AVExtAdvEditorIced = nil\n_AVExtAdvEditorIceb = nil\n_AVExtAdvEditorScratchL = nil\n_AVExtAdvEditorScratchList = nil\n_AVExtAdvEditorClic
k = nil\n_AVExtAdvEditorapt = nil\n_AVExtAdvEditorScrathGr = nil\n_AVExtAdvEditorScrathGrMouse = nil\n_AVExtAdvEditorBono = nil\n_AVExtAdvEditorIcebn = nil\n_AVExtAdvEditorView = nil\n_AVExtAdvEditorSnapb = nil\n_AVExtAdvEditorSnapOff = nil\n_AVExtAdvEditorSnapi = nil\n_AVExtAdvEditorSnape = nil\n_AVExtAdvEditorSnapv = nil\n_AVExtAdvEditorSnapdis = nil\n_AVExtAdvEditorSnapen = nil\n_AVExtAdvEditorView = nil\n_AVExtAdvEditorArcT = nil\n_AVExtAdvEditorCurveT = nil\n_AVExtAdvEditorStreamT = nil\n_AVExtAdvEditorStreamTU = nil\n_A
VExtAdvEditorStreamG = nil\n_AVExtAdvEditorSnapT = nil\n_AVExtAdvEditorSnapTU = nil\n_AVExtAdvEditorSnapEnb = nil\n_AVExtAdvEditorScratchP = nil\n_AVExtAdvEditorScrathGrMouseSnapP = nil\n_AVExtAdvEditoraptS = nil\naProject = av.GetProject\naGUI2 = aProject.FindGUI(\"AVExtAdvEditTheme\")\naList2 = aProject.GetDocsWithGUI(aGUI2)\nfor each i in aList2\n  aProject.RemoveDoc(i)\nend\naGUI1 = aProject.FindGUI(\"AVExtAdvEditView\")\naList1 = aProject.GetDocsWithGUI(aGUI1)\nfor each i in aList1\n  aProject.RemoveDoc(i)\nend\nav.PurgeObj
ects\nav.DelayedRun(\"AVExtAdvEditor.EditEndPart3\",nil,0)"
	SearchStr:	"NotEditNumV"
)

(DocWin.325
	Owner:	324
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.326
)

(DocAct.327
	Doc:	324
)

(SEd.328
	Name:	"AVExtAdvEditor.EditEndPart3"
	CreationDate:	"14 Июль 2004 г. 1:57:32"
	GUIName:	"Script"
	Win:	329
	CSMgr:	330
	DocExts:	331
	Source:	"aGui = av.GetProject.FindGui(av.GetActiveDoc.GetGui)\nif (aGui <> nil )then\n  aGui.GetToolBar.SelectDefault\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.329
	Owner:	328
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.330
)

(DocAct.331
	Doc:	328
)

(SEd.332
	Name:	"AVExtAdvEditor.EditorViewClose"
	CreationDate:	"16 Март 2004 г. 0:28:46"
	GUIName:	"Script"
	Win:	333
	CSMgr:	334
	DocExts:	335
	Source:	"av.DelayedRun(\"AVExtAdvEditor.EditEnd\",nil,0)"
	SearchStr:	"NotEditNumV"
)

(DocWin.333
	Owner:	332
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.334
)

(DocAct.335
	Doc:	332
)

(SEd.336
	Name:	"AVExtAdvEditor.EditorViewOpen"
	CreationDate:	"28 Июнь 2004 г. 11:01:40"
	GUIName:	"Script"
	Win:	337
	CSMgr:	338
	DocExts:	339
	Source:	"if (_AVExtAdvEditorList = nil) then\n  av.Run(\"AVExtAdvEditor.EditEndPart2\",nil)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.337
	Owner:	336
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.338
)

(DocAct.339
	Doc:	336
)

(SEd.340
	Name:	"AVExtAdvEditor.EInstall"
	CreationDate:	"22 Июнь 2004 г. 19:47:10"
	GUIName:	"Script"
	Win:	341
	CSMgr:	342
	DocExts:	343
	Source:	"av.GetProject.AddGUI(self.Get(0))\nav.GetProject.AddGUI(self.Get(1))\nlayGUI = av.GetProject.FindGUI(\"View\")\naControl = layGUI.GetMenuBar.FindByName(\"View\")\nif (aControl <> nil) then\n  if (aControl.FindByName(\"AVExtAdvEditorMenu\") = nil) then\n    myMenul = Self.Get(2).Clone\n    myMenul.SetName(\"AVExtAdvEditorMenu\")\n    aControl.Add(myMenul,1)\n  end\nend\naControl2 = layGUI.GetButtonBar\nif (aControl2.FindByName(\"AVExtAdvEditorButton\") = nil) then\n  myMenul2 = Self.Get(3).Clone\n  myMenul2.SetName(\"AVExtAdvEditorB
utton\")\n  aControl2.Add(myMenul2,2)\nend\nif (aControl2.FindByName(\"AVExtAdvEditorSpace\") = nil) then\n  aSpace = Space.Make\n  aSpace.SetName(\"AVExtAdvEditorSpace\")\n  aControl2.Add(aSpace,2)\nend\nav.GetProject.SetModified(true)"
	SearchStr:	"NotEditNumV"
)

(DocWin.341
	Owner:	340
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.342
)

(DocAct.343
	Doc:	340
)

(SEd.344
	Name:	"AVExtAdvEditor.ELoad"
	CreationDate:	"22 Июнь 2004 г. 19:45:03"
	GUIName:	"Script"
	Win:	345
	CSMgr:	346
	DocExts:	347
	Source:	"av.GetProject.SetModified(true)"
	SearchStr:	"NotEditNumV"
)

(DocWin.345
	Owner:	344
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.346
)

(DocAct.347
	Doc:	344
)

(SEd.348
	Name:	"AVExtAdvEditor.EUninstall"
	CreationDate:	"22 Июнь 2004 г. 19:57:58"
	GUIName:	"Script"
	Win:	349
	CSMgr:	350
	DocExts:	351
	Source:	"if (av.GetProject = nil) then\n  return nil\nend\nav.GetProject.SetModified(true)\naProject = av.GetProject\naGUI1 = aProject.FindGUI(\"AVExtAdvEditView\")\naList1 = aProject.GetDocsWithGUI(aGUI1)\nfor each i in aList1\n  aProject.RemoveDoc(i)\nend\nav.PurgeObjects\nav.GetProject.SetModified(true)\naGUI2 = aProject.FindGUI(\"AVExtAdvEditTheme\")\naList2 = aProject.GetDocsWithGUI(aGUI2)\nfor each i in aList2\n  aEdit = i.GetEditableTheme\n  if (aEdit <> nil) then\n    doSave = MsgBox.YesNo(\"Save Edits to \"+aEdit.GetName+\n       
                         \"?\", \"Stop Editing\", true)\n    if (aEdit.StopEditing(doSave).Not) then\n      MsgBox.Info (\"Unable to Save Edits to \"\n                    + aEdit.GetName  +\n                    \", please use the Save Edits As option\", \"\")\n    end\n    i.SetEditableTheme(nil)\n  end\nend\nav.GetProject.SetModified(true)\naProject = av.GetProject\naGUI2 = aProject.FindGUI(\"AVExtAdvEditTheme\")\naList2 = aProject.GetDocsWithGUI(aGUI2)\nfor each i in aList2\n  aEdit = i.GetEditableTheme\n  if (aEdit <> nil) then\n  
  aEdit.StopEditing(true)\n    i.SetEditableTheme(NIL)\n  end\n  aProject.RemoveDoc(i)\nend\nav.PurgeObjects\nav.GetProject.SetModified(true)\nav.GetProject.RemoveGUI(self.Get(0).GetName)\nav.GetProject.RemoveGUI(self.Get(1).GetName)\ntheMenu = av.GetProject.FindGUI(\"View\").GetMenuBar.FindByName(\"View\")\naButt = theMenu.FindByName(\"AVExtAdvEditorMenu\")\ntheMenu.Remove(aButt)\ntheMenu2 = av.GetProject.FindGUI(\"View\").GetButtonBar\naButt2 = theMenu2.FindByName(\"AVExtAdvEditorButton\")\ntheMenu2.Remove(aButt2)\naButt3 = theMe
nu2.FindByName(\"AVExtAdvEditorSpace\")\ntheMenu2.Remove(aButt3)\nav.GetProject.SetModified(true)"
	SearchStr:	"NotEditNumV"
)

(DocWin.349
	Owner:	348
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.350
)

(DocAct.351
	Doc:	348
)

(SEd.352
	Name:	"AVExtAdvEditor.EUnload"
	CreationDate:	"22 Июнь 2004 г. 5:08:47"
	GUIName:	"Script"
	Win:	353
	CSMgr:	354
	DocExts:	355
	Source:	"Dialog.DetachFromExtension(self)"
	SearchStr:	"NotEditNumV"
)

(DocWin.353
	Owner:	352
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.354
)

(DocAct.355
	Doc:	352
)

(DEd.356
	Name:	"AVExtAdvEditor.Length"
	CreationDate:	"6 Май 2004 г. 1:23:14"
	GUIName:	"DialogEditor"
	Win:	357
	CSMgr:	358
	DocExts:	360
	DocExts:	361
	Graphics:	362
	Dpy:	368
	Dialog:	371
	DialogExtent:	377
	Compiled:	1
)

(DocWin.357
	Owner:	356
	X:	-138
	Y:	346
	W:	1290
	H:	899
)

(CSMgr.358
	Client:	359
)

(CSClient.359
	Client:	360
	ReqName:	"ClientNfy"
)

(PanMgr.360
	Doc:	356
)

(DocAct.361
	Doc:	356
)

(GList.362
	Child:	363
	Dpy:	368
	FormatNumb:	370
)

(GCtrl.363
	Name:	"aTL"
	Bounds:	364
	Control:	365
	Editable:	1
)

(RectD.364
	Left:	3.59375000000000
	Top:	6.03125000000000
	Right:	4.83333333333333
	Bottom:	5.82291666666667
)

(TextLine.365
	InternalName:	"aTL"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
	TextType:	366
	Apply:	"AVExtAdvEditor.LengthAp"
	NextControl:	367
)

(AVEnum.366
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.367
)

(PageDpy.368
	Top:	9.10416666666667
	Right:	13.36458333333333
	ReportUnits:	1
	Units:	1
	Scale:	369
	ZoomRight:	13.36458333333333
	ZoomTop:	9.10416666666667
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.369
	N:	0.07482462977397
)

(Numb.370
)

(AVDLog.371
	Name:	"AVExtAdvEditor.Length"
	X:	351
	Y:	308
	W:	121
	H:	40
	Server:	32
	ControlPanel:	372
	Title:	"Length"
	EscapeEnabled:	1
	Resizable:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	Close:	"AVExtAdvEditor.DialogClose"
	DefaultButton:	376
)

(CPanel.372
	Child:	373
	ResBox:	375
	Listening:	1
)

(TextLine.373
	InternalName:	"aTL"
	Listening:	1
	TextType:	374
	Apply:	"AVExtAdvEditor.LengthAp"
	NextControl:	105
)

(AVEnum.374
	Name:	"TEXTLINE_TYPE_REAL"
)

(RectD.375
	Left:	-3.00000000000000
	Top:	29.00000000000000
	Right:	116.00000000000000
	Bottom:	9.00000000000000
)

(Nil.376
)

(RectD.377
	Left:	3.62500000000000
	Top:	6.12500000000000
	Right:	4.88541666666667
	Bottom:	5.73958333333333
)

(SEd.378
	Name:	"AVExtAdvEditor.LengthAp"
	CreationDate:	"17 Май 2004 г. 1:16:18"
	GUIName:	"Script"
	Win:	379
	CSMgr:	380
	DocExts:	381
	Source:	"aText = self.GetText\nif (aText.IsNumber) then\n  aAng = aText.AsNumber.Abs\n  if (aAng <> 0) then\n    _AVExtAdvEditorLengthEnb = true\n    _AVExtAdvEditorLengthSet = aAng\n    _AVExtAdvEditorAngleEnb = false\n    _AVExtAdvEditorAngleCos = nil\n    _AVExtAdvEditorAngleSin = nil\n    _AVExtAdvEditorDeflectionEnb = false\n    _AVExtAdvEditorDeflectionCos = nil\n    _AVExtAdvEditorDeflectionSin = nil\n    if (_AVExtAdvEditorAutoClose) then\n    self.GetDialog.Close\n    end\n  else\n    _AVExtAdvEditorLengthEnb = false\n    _
AVExtAdvEditorLengthSet = nil\n  end\nelse\n  _AVExtAdvEditorLengthEnb = false\n  _AVExtAdvEditorLengthSet = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.379
	Owner:	378
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.380
)

(DocAct.381
	Doc:	378
)

(SEd.382
	Name:	"AVExtAdvEditor.LengthOpen"
	CreationDate:	"17 Май 2004 г. 1:14:47"
	GUIName:	"Script"
	Win:	383
	CSMgr:	384
	DocExts:	385
	Source:	"aDil = av.FindDialog(\"AVExtAdvEditor.Length\")\naDil.FindByName(\"aTL\").SetText(\"0\")\naDil.Open"
	SearchStr:	"NotEditNumV"
)

(DocWin.383
	Owner:	382
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.384
)

(DocAct.385
	Doc:	382
)

(SEd.386
	Name:	"AVExtAdvEditor.MenuToolArc"
	CreationDate:	"23 Июнь 2004 г. 0:48:04"
	GUIName:	"Script"
	Win:	387
	CSMgr:	388
	DocExts:	389
	Source:	"aGUI = av.GetProject.FindGUI(\"AVExtAdvEditView\")\nif (aGUI.GetToolBar.FindByName(\"AEArc\").IsEnabled) then\n  if (aGUI.GetToolBar.FindByName(\"AEArc\").IsSelected.Not) then\n    aGUI.GetToolBar.FindByName(\"AEArc\").Select\n    aGUI.GetToolBar.FindByName(\"AEArc\").Click\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.387
	Owner:	386
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.388
)

(DocAct.389
	Doc:	386
)

(SEd.390
	Name:	"AVExtAdvEditor.MenuToolArcUpd"
	CreationDate:	"23 Июнь 2004 г. 0:49:02"
	GUIName:	"Script"
	Win:	391
	CSMgr:	392
	DocExts:	393
	Source:	"self.setenabled(false)\naGUI = av.GetProject.FindGUI(\"AVExtAdvEditView\")\nif (aGUI.GetToolBar.FindByName(\"AEArc\").IsEnabled) then\n  if (aGUI.GetToolBar.FindByName(\"AEArc\").IsSelected.Not) then\n    self.setenabled(true)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.391
	Owner:	390
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.392
)

(DocAct.393
	Doc:	390
)

(SEd.394
	Name:	"AVExtAdvEditor.MenuToolCurve"
	CreationDate:	"23 Июнь 2004 г. 0:54:29"
	GUIName:	"Script"
	Win:	395
	CSMgr:	396
	DocExts:	397
	Source:	"aGUI = av.GetProject.FindGUI(\"AVExtAdvEditView\")\nif (aGUI.GetToolBar.FindByName(\"AECurve\").IsEnabled) then\n  if (aGUI.GetToolBar.FindByName(\"AECurve\").IsSelected.Not) then\n  aGUI.GetToolBar.FindByName(\"AECurve\").Select\n  aGUI.GetToolBar.FindByName(\"AECurve\").Click\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.395
	Owner:	394
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.396
)

(DocAct.397
	Doc:	394
)

(SEd.398
	Name:	"AVExtAdvEditor.MenuToolCurveUpd"
	CreationDate:	"23 Июнь 2004 г. 0:56:15"
	GUIName:	"Script"
	Win:	399
	CSMgr:	400
	DocExts:	401
	Source:	"self.setenabled(false)\naGUI = av.GetProject.FindGUI(\"AVExtAdvEditView\")\nif (aGUI.GetToolBar.FindByName(\"AECurve\").IsEnabled) then\n  if (aGUI.GetToolBar.FindByName(\"AECurve\").IsSelected.Not) then\n  self.setenabled(true)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.399
	Owner:	398
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.400
)

(DocAct.401
	Doc:	398
)

(SEd.402
	Name:	"AVExtAdvEditor.MenuToolIn"
	CreationDate:	"23 Июнь 2004 г. 1:30:34"
	GUIName:	"Script"
	Win:	403
	CSMgr:	404
	DocExts:	405
	Source:	"aGUI = av.GetProject.FindGUI(\"AVExtAdvEditView\")\nif (aGUI.GetToolBar.FindByName(\"AEIn\").IsEnabled) then\n  if (aGUI.GetToolBar.FindByName(\"AEIn\").IsSelected.Not) then\n  aGUI.GetToolBar.FindByName(\"AEIn\").Select\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.403
	Owner:	402
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.404
)

(DocAct.405
	Doc:	402
)

(SEd.406
	Name:	"AVExtAdvEditor.MenuToolInUpd"
	CreationDate:	"23 Июнь 2004 г. 1:31:35"
	GUIName:	"Script"
	Win:	407
	CSMgr:	408
	DocExts:	409
	Source:	"self.setenabled(false)\naGUI = av.GetProject.FindGUI(\"AVExtAdvEditView\")\nif (aGUI.GetToolBar.FindByName(\"AEIn\").IsEnabled) then\n  if (aGUI.GetToolBar.FindByName(\"AEIn\").IsSelected.Not) then\n  self.setenabled(true)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.407
	Owner:	406
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.408
)

(DocAct.409
	Doc:	406
)

(SEd.410
	Name:	"AVExtAdvEditor.MenuToolOut"
	CreationDate:	"23 Июнь 2004 г. 1:32:04"
	GUIName:	"Script"
	Win:	411
	CSMgr:	412
	DocExts:	413
	Source:	"aGUI = av.GetProject.FindGUI(\"AVExtAdvEditView\")\nif (aGUI.GetToolBar.FindByName(\"AEOut\").IsEnabled) then\n  if (aGUI.GetToolBar.FindByName(\"AEOut\").IsSelected.Not) then\n  aGUI.GetToolBar.FindByName(\"AEOut\").Select\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.411
	Owner:	410
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.412
)

(DocAct.413
	Doc:	410
)

(SEd.414
	Name:	"AVExtAdvEditor.MenuToolOutUpd"
	CreationDate:	"23 Июнь 2004 г. 1:32:32"
	GUIName:	"Script"
	Win:	415
	CSMgr:	416
	DocExts:	417
	Source:	"self.setenabled(false)\naGUI = av.GetProject.FindGUI(\"AVExtAdvEditView\")\nif (aGUI.GetToolBar.FindByName(\"AEOut\").IsEnabled) then\n  if (aGUI.GetToolBar.FindByName(\"AEOut\").IsSelected.Not) then\n  self.setenabled(true)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.415
	Owner:	414
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.416
)

(DocAct.417
	Doc:	414
)

(SEd.418
	Name:	"AVExtAdvEditor.MenuToolPan"
	CreationDate:	"23 Июнь 2004 г. 1:25:49"
	GUIName:	"Script"
	Win:	419
	CSMgr:	420
	DocExts:	421
	Source:	"aGUI = av.GetProject.FindGUI(\"AVExtAdvEditView\")\nif (aGUI.GetToolBar.FindByName(\"AEPan\").IsEnabled) then\n  if (aGUI.GetToolBar.FindByName(\"AEPan\").IsSelected.Not) then\n    aGUI.GetToolBar.FindByName(\"AEPan\").Select\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.419
	Owner:	418
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.420
)

(DocAct.421
	Doc:	418
)

(SEd.422
	Name:	"AVExtAdvEditor.MenuToolPanUpd"
	CreationDate:	"23 Июнь 2004 г. 1:27:02"
	GUIName:	"Script"
	Win:	423
	CSMgr:	424
	DocExts:	425
	Source:	"self.setenabled(false)\naGUI = av.GetProject.FindGUI(\"AVExtAdvEditView\")\nif (aGUI.GetToolBar.FindByName(\"AEPan\").IsEnabled) then\n  if (aGUI.GetToolBar.FindByName(\"AEPan\").IsSelected.Not) then\n  self.setenabled(true)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.423
	Owner:	422
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.424
)

(DocAct.425
	Doc:	422
)

(SEd.426
	Name:	"AVExtAdvEditor.MenuToolPen"
	CreationDate:	"23 Июнь 2004 г. 0:46:35"
	GUIName:	"Script"
	Win:	427
	CSMgr:	428
	DocExts:	429
	Source:	"aGUI = av.GetProject.FindGUI(\"AVExtAdvEditView\")\nif (aGUI.GetToolBar.FindByName(\"AEPen\").IsEnabled) then\n  if (aGUI.GetToolBar.FindByName(\"AEPen\").IsSelected.Not) then\n  aGUI.GetToolBar.FindByName(\"AEPen\").Select\n  aGUI.GetToolBar.FindByName(\"AEPen\").Click\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.427
	Owner:	426
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.428
)

(DocAct.429
	Doc:	426
)

(SEd.430
	Name:	"AVExtAdvEditor.MenuToolPenUpd"
	CreationDate:	"23 Июнь 2004 г. 0:43:54"
	GUIName:	"Script"
	Win:	431
	CSMgr:	432
	DocExts:	433
	Source:	"self.setenabled(false)\naGUI = av.GetProject.FindGUI(\"AVExtAdvEditView\")\nif (aGUI.GetToolBar.FindByName(\"AEPen\").IsEnabled) then\n  if (aGUI.GetToolBar.FindByName(\"AEPen\").IsSelected.Not) then\n  self.setenabled(true)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.431
	Owner:	430
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.432
)

(DocAct.433
	Doc:	430
)

(SEd.434
	Name:	"AVExtAdvEditor.MenuToolPointer"
	CreationDate:	"23 Июнь 2004 г. 1:03:00"
	GUIName:	"Script"
	Win:	435
	CSMgr:	436
	DocExts:	437
	Source:	"aGUI = av.GetProject.FindGUI(\"AVExtAdvEditView\")\nif (aGUI.GetToolBar.FindByName(\"AEpointer\").IsEnabled) then\n  if (aGUI.GetToolBar.FindByName(\"AEPointer\").IsSelected.Not) then\n  aGUI.GetToolBar.FindByName(\"AEpointer\").Select\n  aGUI.GetToolBar.FindByName(\"AEpointer\").Click\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.435
	Owner:	434
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.436
)

(DocAct.437
	Doc:	434
)

(SEd.438
	Name:	"AVExtAdvEditor.MenuToolPointerUpd"
	CreationDate:	"23 Июнь 2004 г. 1:03:44"
	GUIName:	"Script"
	Win:	439
	CSMgr:	440
	DocExts:	441
	Source:	"self.setenabled(false)\naGUI = av.GetProject.FindGUI(\"AVExtAdvEditView\")\nif (aGUI.GetToolBar.FindByName(\"AEPointer\").IsEnabled) then\n  if (aGUI.GetToolBar.FindByName(\"AEPointer\").IsSelected.Not) then\n  self.setenabled(true)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.439
	Owner:	438
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.440
)

(DocAct.441
	Doc:	438
)

(SEd.442
	Name:	"AVExtAdvEditor.MenuToolStream"
	CreationDate:	"23 Июнь 2004 г. 0:56:55"
	GUIName:	"Script"
	Win:	443
	CSMgr:	444
	DocExts:	445
	Source:	"aGUI = av.GetProject.FindGUI(\"AVExtAdvEditView\")\nif (aGUI.GetToolBar.FindByName(\"AEStream\").IsEnabled) then\n  if (aGUI.GetToolBar.FindByName(\"AEStream\").IsSelected.Not) then\n  aGUI.GetToolBar.FindByName(\"AEStream\").Select\n  aGUI.GetToolBar.FindByName(\"AEStream\").Click\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.443
	Owner:	442
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.444
)

(DocAct.445
	Doc:	442
)

(SEd.446
	Name:	"AVExtAdvEditor.MenuToolStreamUpd"
	CreationDate:	"23 Июнь 2004 г. 0:57:41"
	GUIName:	"Script"
	Win:	447
	CSMgr:	448
	DocExts:	449
	Source:	"self.setenabled(false)\naGUI = av.GetProject.FindGUI(\"AVExtAdvEditView\")\nif (aGUI.GetToolBar.FindByName(\"AEStream\").IsEnabled) then\n  if (aGUI.GetToolBar.FindByName(\"AEStream\").IsSelected.Not) then\n  self.setenabled(true)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.447
	Owner:	446
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.448
)

(DocAct.449
	Doc:	446
)

(SEd.450
	Name:	"AVExtAdvEditor.MenuToolTrace"
	CreationDate:	"23 Июнь 2004 г. 0:58:29"
	GUIName:	"Script"
	Win:	451
	CSMgr:	452
	DocExts:	453
	Source:	"aGUI = av.GetProject.FindGUI(\"AVExtAdvEditView\")\nif (aGUI.GetToolBar.FindByName(\"AETraceMenu\").GetControls.Get(0).IsEnabled) then\n  if (aGUI.GetToolBar.FindByName(\"AETraceMenu\").GetControls.Get(0).IsSelected.Not) then\n  aGUI.GetToolBar.FindByName(\"AETraceMenu\").GetControls.Get(0).Select\n  aGUI.GetToolBar.FindByName(\"AETraceMenu\").GetControls.Get(0).Click\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.451
	Owner:	450
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.452
)

(DocAct.453
	Doc:	450
)

(SEd.454
	Name:	"AVExtAdvEditor.MenuToolTraceUpd"
	CreationDate:	"23 Июнь 2004 г. 0:59:52"
	GUIName:	"Script"
	Win:	455
	CSMgr:	456
	DocExts:	457
	Source:	"self.setenabled(false)\naGUI = av.GetProject.FindGUI(\"AVExtAdvEditView\")\nif (aGUI.GetToolBar.FindByName(\"AETraceMenu\").GetControls.Get(0).IsEnabled) then\n  if (aGUI.GetToolBar.FindByName(\"AETraceMenu\").GetControls.Get(0).IsSelected.Not) then\n  self.setenabled(true)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.455
	Owner:	454
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.456
)

(DocAct.457
	Doc:	454
)

(SEd.458
	Name:	"AVExtAdvEditor.MenuToolVertex"
	CreationDate:	"23 Июнь 2004 г. 1:00:55"
	GUIName:	"Script"
	Win:	459
	CSMgr:	460
	DocExts:	461
	Source:	"aGUI = av.GetProject.FindGUI(\"AVExtAdvEditView\")\nif (aGUI.GetToolBar.FindByName(\"AEVertex\").IsEnabled) then\n  if (aGUI.GetToolBar.FindByName(\"AEVertex\").IsSelected.Not) then\n  aGUI.GetToolBar.FindByName(\"AEVertex\").Select\n  aGUI.GetToolBar.FindByName(\"AEVertex\").Click\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.459
	Owner:	458
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.460
)

(DocAct.461
	Doc:	458
)

(SEd.462
	Name:	"AVExtAdvEditor.MenuToolVertexUpd"
	CreationDate:	"23 Июнь 2004 г. 1:02:17"
	GUIName:	"Script"
	Win:	463
	CSMgr:	464
	DocExts:	465
	Source:	"self.setenabled(false)\naGUI = av.GetProject.FindGUI(\"AVExtAdvEditView\")\nif (aGUI.GetToolBar.FindByName(\"AEVertex\").IsEnabled) then\n  if (aGUI.GetToolBar.FindByName(\"AEVertex\").IsSelected.Not) then\n  self.setenabled(true)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.463
	Owner:	462
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.464
)

(DocAct.465
	Doc:	462
)

(SEd.466
	Name:	"AVExtAdvEditor.NFlipH"
	CreationDate:	"14 Июль 2004 г. 0:16:23"
	GUIName:	"Script"
	Win:	467
	CSMgr:	468
	DocExts:	469
	Source:	"thePrjView = _AVExtAdvEditorView.GetProjection\nagrlist = _AVExtAdvEditorView.getgraphics\naListVertex = agrlist.FindByName(\"AVExtAdvEditorSelectingCenter\")\nif (aListVertex <> nil) then\n  agrlist.SetNumberFormat(\"dd.dddddddddddddddddddddddddddd\")\n  Script.The.SetNumberFormat(\"dd.dddddddddddddddddddddddddddd\")\n  centerPt = aListVertex.GetShape\n  cX = centerPt.GetX\n  cY = centerPt.GetY\n  aThList = _AVExtAdvEditorList.ReturnKeys\n  for each iThemes in aThList\n    if (_AVExtAdvEditorList.Get(iThemes) = 1) then\n   
   aFTab = iThemes.GetFTab\n      if (aFTab.IsEditable) then\n        aSF = aFTab.FindField(\"Shape\")\n        if (aSF <> nil) then\n          aSel = aFTAb.GetSelection\n          if (aSel.Count > 0) then\n            aFTab.BeginTransaction\n            for each i in aSel\n              aShape = aFtab.ReturnValue(aSf,i)\n              if (thePrjView.IsNull.Not) then\n                aShape = aShape.Returnprojected(thePrjView)\n              end\n              moveX = 0 - cX\n              moveY = 0 - cY\n              aTr
ans = Transform2D.Make\n              aTrans.Move(moveX@moveY)\n              aTrans.Reflect(true,false)\n              aTrans.Move(cX@cY)\n              aShape.Transform (aTrans)\n              if (thePrjView.IsNull.Not) then\n                aShape = aShape.ReturnUnprojected(thePrjView)\n              end\n              aFtab.SetValue(aSf,i,aShape)\n            end \n            aFTab.EndTransaction   \n            iThemes.Invalidate(true)  \n          end\n        end\n      end\n    end\n  end\n  av.DelayedRun(\"AVExtAdv
Editor.StopEditSelUpd\",nil,0)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.467
	Owner:	466
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.468
)

(DocAct.469
	Doc:	466
)

(SEd.470
	Name:	"AVExtAdvEditor.NFlipV"
	CreationDate:	"14 Июль 2004 г. 0:20:57"
	GUIName:	"Script"
	Win:	471
	CSMgr:	472
	DocExts:	473
	Source:	"thePrjView = _AVExtAdvEditorView.GetProjection\nagrlist = _AVExtAdvEditorView.getgraphics\naListVertex = agrlist.FindByName(\"AVExtAdvEditorSelectingCenter\")\nif (aListVertex <> nil) then\n  agrlist.SetNumberFormat(\"dd.dddddddddddddddddddddddddddd\")\n  Script.The.SetNumberFormat(\"dd.dddddddddddddddddddddddddddd\")\n  centerPt = aListVertex.GetShape\n  cX = centerPt.GetX\n  cY = centerPt.GetY\n  aThList = _AVExtAdvEditorList.ReturnKeys\n  for each iThemes in aThList\n    if (_AVExtAdvEditorList.Get(iThemes) = 1) then\n   
   aFTab = iThemes.GetFTab\n      if (aFTab.IsEditable) then\n        aSF = aFTab.FindField(\"Shape\")\n        if (aSF <> nil) then\n          aSel = aFTAb.GetSelection\n          if (aSel.Count > 0) then\n            aFTab.BeginTransaction\n            for each i in aSel\n              aShape = aFtab.ReturnValue(aSf,i)\n              if (thePrjView.IsNull.Not) then\n                aShape = aShape.Returnprojected(thePrjView)\n              end\n              moveX = 0 - cX\n              moveY = 0 - cY\n              aTr
ans = Transform2D.Make\n              aTrans.Move(moveX@moveY)\n              aTrans.Reflect(false,true)\n              aTrans.Move(cX@cY)\n              aShape.Transform (aTrans)\n              if (thePrjView.IsNull.Not) then\n                aShape = aShape.ReturnUnprojected(thePrjView)\n              end\n              aFtab.SetValue(aSf,i,aShape)\n            end \n            aFTab.EndTransaction   \n            iThemes.Invalidate(true)  \n          end\n        end\n      end\n    end\n  end\n  av.DelayedRun(\"AVExtAdv
Editor.StopEditSelUpd\",nil,0)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.471
	Owner:	470
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.472
)

(DocAct.473
	Doc:	470
)

(DEd.474
	Name:	"AVExtAdvEditor.NMove"
	CreationDate:	"6 Май 2004 г. 1:23:14"
	GUIName:	"DialogEditor"
	Win:	475
	CSMgr:	476
	DocExts:	478
	DocExts:	479
	Graphics:	480
	Dpy:	491
	Dialog:	494
	DialogExtent:	503
	Compiled:	1
)

(DocWin.475
	Owner:	474
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.476
	Client:	477
)

(CSClient.477
	Client:	478
	ReqName:	"ClientNfy"
)

(PanMgr.478
	Doc:	474
)

(DocAct.479
	Doc:	474
)

(GList.480
	Child:	481
	Child:	486
	Dpy:	491
	FormatNumb:	493
)

(GCtrl.481
	Name:	"aTL1"
	Bounds:	482
	Control:	483
	Editable:	1
)

(RectD.482
	Left:	1.87500000000000
	Top:	5.11458333333333
	Right:	2.86458333333333
	Bottom:	4.90625000000000
)

(TextLine.483
	InternalName:	"aTL1"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
	TextType:	484
	Apply:	"AVExtAdvEditor.NMoveAp"
	NextControl:	485
)

(AVEnum.484
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.485
)

(GCtrl.486
	Name:	"aTL2"
	Bounds:	487
	Control:	488
	Editable:	1
)

(RectD.487
	Left:	2.91666666666667
	Top:	5.11458333333333
	Right:	3.90625000000000
	Bottom:	4.90625000000000
)

(TextLine.488
	InternalName:	"aTL2"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
	TextType:	489
	Apply:	"AVExtAdvEditor.NMoveAp"
	NextControl:	490
)

(AVEnum.489
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.490
)

(PageDpy.491
	Top:	7.43750000000000
	Right:	12.03125000000000
	ReportUnits:	1
	Units:	1
	Scale:	492
	ZoomRight:	12.03125000000000
	ZoomTop:	7.43750000000000
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.492
	N:	0.08311688311688
)

(Numb.493
)

(AVDLog.494
	Name:	"AVExtAdvEditor.NMove"
	X:	186
	Y:	236
	W:	198
	H:	40
	Server:	32
	ControlPanel:	495
	Title:	"Delta X, Y"
	EscapeEnabled:	1
	Resizable:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	Close:	"AVExtAdvEditor.DialogClose"
	DefaultButton:	502
)

(CPanel.495
	Child:	496
	Child:	498
	ResBox:	500
	ResBox:	501
	Listening:	1
)

(TextLine.496
	InternalName:	"aTL1"
	Listening:	1
	TextType:	497
	Apply:	"AVExtAdvEditor.NMoveAp"
	NextControl:	71
)

(AVEnum.497
	Name:	"TEXTLINE_TYPE_REAL"
)

(TextLine.498
	InternalName:	"aTL2"
	Listening:	1
	TextType:	499
	Apply:	"AVExtAdvEditor.NMoveAp"
	NextControl:	71
)

(AVEnum.499
	Name:	"TEXTLINE_TYPE_REAL"
)

(RectD.500
	Left:	-3.00000000000000
	Top:	29.00000000000000
	Right:	92.00000000000000
	Bottom:	9.00000000000000
)

(RectD.501
	Left:	97.00000000000000
	Top:	29.00000000000000
	Right:	192.00000000000000
	Bottom:	9.00000000000000
)

(Nil.502
)

(RectD.503
	Left:	1.90625000000000
	Top:	5.20833333333333
	Right:	3.96875000000000
	Bottom:	4.82291666666667
)

(SEd.504
	Name:	"AVExtAdvEditor.NMoveAp"
	CreationDate:	"14 Июль 2004 г. 0:43:59"
	GUIName:	"Script"
	Win:	505
	CSMgr:	506
	DocExts:	507
	Source:	"aScStrX = self.GetDialog.FindByName(\"aTL1\").GEtText\naScStrY = self.GetDialog.FindByName(\"aTL2\").GEtText\nif (aScStrX.IsNumber) then\n  if (aScStrY.IsNumber) then\n    thePrjView = _AVExtAdvEditorView.GetProjection\n    Script.The.SetNumberFormat(\"dd.dddddddddddddddddddddddddddd\")\n    aScX = aScStrX.AsNumber\n    aScY = aScStrY.AsNumber\n    aThList = _AVExtAdvEditorList.ReturnKeys\n    for each iThemes in aThList\n      if (_AVExtAdvEditorList.Get(iThemes) = 1) then\n        aFTab = iThemes.GetFTab\n        if (aFTab
.IsEditable) then\n          aSF = aFTab.FindField(\"Shape\")\n          if (aSF <> nil) then\n            aSel = aFTAb.GetSelection\n            if (aSel.Count > 0) then\n              aFTab.BeginTransaction\n              for each i in aSel\n                aShape = aFtab.ReturnValue(aSf,i)\n                if (thePrjView.IsNull.Not) then\n                  aShape = aShape.Returnprojected(thePrjView)\n                end\n                aShape.Move(aScX,aScY)\n                if (thePrjView.IsNull.Not) then\n          
        aShape = aShape.ReturnUnprojected(thePrjView)\n                end\n                aFtab.SetValue(aSf,i,aShape)\n              end \n              aFTab.EndTransaction   \n              iThemes.Invalidate(true)  \n            end\n          end\n        end\n      end\n    end\n    av.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.505
	Owner:	504
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.506
)

(DocAct.507
	Doc:	504
)

(SEd.508
	Name:	"AVExtAdvEditor.NMoveOpen"
	CreationDate:	"14 Июль 2004 г. 0:43:14"
	GUIName:	"Script"
	Win:	509
	CSMgr:	510
	DocExts:	511
	Source:	"aDil = av.FindDialog(\"AVExtAdvEditor.NMove\")\naDil.FindByName(\"aTL1\").SetText(\"0\")\naDil.FindByName(\"aTL2\").SetText(\"0\")\naDil.Open"
	SearchStr:	"NotEditNumV"
)

(DocWin.509
	Owner:	508
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.510
)

(DocAct.511
	Doc:	508
)

(DEd.512
	Name:	"AVExtAdvEditor.NMoveTo"
	CreationDate:	"6 Май 2004 г. 1:23:14"
	GUIName:	"DialogEditor"
	Win:	513
	CSMgr:	514
	DocExts:	516
	DocExts:	517
	Graphics:	518
	Dpy:	529
	Dialog:	532
	DialogExtent:	541
	Compiled:	1
)

(DocWin.513
	Owner:	512
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.514
	Client:	515
)

(CSClient.515
	Client:	516
	ReqName:	"ClientNfy"
)

(PanMgr.516
	Doc:	512
)

(DocAct.517
	Doc:	512
)

(GList.518
	Child:	519
	Child:	524
	Dpy:	529
	FormatNumb:	531
)

(GCtrl.519
	Name:	"aTL1"
	Bounds:	520
	Control:	521
	Editable:	1
)

(RectD.520
	Left:	1.86458333333333
	Top:	5.88541666666667
	Right:	2.85416666666667
	Bottom:	5.67708333333333
)

(TextLine.521
	InternalName:	"aTL1"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
	TextType:	522
	Apply:	"AVExtAdvEditor.NMoveToAp"
	NextControl:	523
)

(AVEnum.522
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.523
)

(GCtrl.524
	Name:	"aTL2"
	Bounds:	525
	Control:	526
	Editable:	1
)

(RectD.525
	Left:	2.90625000000000
	Top:	5.88541666666667
	Right:	3.89583333333333
	Bottom:	5.67708333333333
)

(TextLine.526
	InternalName:	"aTL2"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
	TextType:	527
	Apply:	"AVExtAdvEditor.NMoveToAp"
	NextControl:	528
)

(AVEnum.527
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.528
)

(PageDpy.529
	Top:	7.43750000000000
	Right:	12.03125000000000
	ReportUnits:	1
	Units:	1
	Scale:	530
	ZoomRight:	12.03125000000000
	ZoomTop:	7.43750000000000
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.530
	N:	0.08311688311688
)

(Numb.531
)

(AVDLog.532
	Name:	"AVExtAdvEditor.NMoveTo"
	X:	185
	Y:	162
	W:	198
	H:	40
	Server:	32
	ControlPanel:	533
	Title:	"Absolute X, Y"
	EscapeEnabled:	1
	Resizable:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	Close:	"AVExtAdvEditor.DialogClose"
	DefaultButton:	540
)

(CPanel.533
	Child:	534
	Child:	536
	ResBox:	538
	ResBox:	539
	Listening:	1
)

(TextLine.534
	InternalName:	"aTL1"
	Listening:	1
	TextType:	535
	Apply:	"AVExtAdvEditor.NMoveToAp"
	NextControl:	71
)

(AVEnum.535
	Name:	"TEXTLINE_TYPE_REAL"
)

(TextLine.536
	InternalName:	"aTL2"
	Listening:	1
	TextType:	537
	Apply:	"AVExtAdvEditor.NMoveToAp"
	NextControl:	71
)

(AVEnum.537
	Name:	"TEXTLINE_TYPE_REAL"
)

(RectD.538
	Left:	-3.00000000000000
	Top:	29.00000000000000
	Right:	92.00000000000000
	Bottom:	9.00000000000000
)

(RectD.539
	Left:	97.00000000000000
	Top:	29.00000000000000
	Right:	192.00000000000000
	Bottom:	9.00000000000000
)

(Nil.540
)

(RectD.541
	Left:	1.89583333333333
	Top:	5.97916666666667
	Right:	3.95833333333333
	Bottom:	5.59375000000000
)

(SEd.542
	Name:	"AVExtAdvEditor.NMoveToAp"
	CreationDate:	"14 Июль 2004 г. 0:48:29"
	GUIName:	"Script"
	Win:	543
	CSMgr:	544
	DocExts:	545
	Source:	"aScStrX = self.GetDialog.FindByName(\"aTL1\").GEtText\naScStrY = self.GetDialog.FindByName(\"aTL2\").GEtText\nif (aScStrX.IsNumber) then\n  if (aScStrY.IsNumber) then\n    agrlist = _AVExtAdvEditorView.getgraphics\n    thePrjView = _AVExtAdvEditorView.GetProjection\n    agrlist.SetNumberFormat(\"dd.dddddddddddddddddddddddddddd\")\n    Script.The.SetNumberFormat(\"dd.dddddddddddddddddddddddddddd\")\n    aScX = aScStrX.AsNumber\n    aScY = aScStrY.AsNumber\n    aListVertex = agrlist.FindByName(\"AVExtAdvEditorSelectingCenter\")\n
    if (aListVertex <> nil) then\n      centerPt = aListVertex.GetShape\n      cX = centerPt.GetX\n      cY = centerPt.GetY\n      aThList = _AVExtAdvEditorList.ReturnKeys\n      for each iThemes in aThList\n        if (_AVExtAdvEditorList.Get(iThemes) = 1) then\n          aFTab = iThemes.GetFTab\n          if (aFTab.IsEditable) then\n            aSF = aFTab.FindField(\"Shape\")\n            if (aSF <> nil) then\n              aSel = aFTAb.GetSelection\n              if (aSel.Count > 0) then\n                aFTab.BeginTr
ansaction\n                for each i in aSel\n                  aShape = aFtab.ReturnValue(aSf,i)\n                  if (thePrjView.IsNull.Not) then\n                    aShape = aShape.Returnprojected(thePrjView)\n                  end\n                  moveX = aScX - cX\n                  moveY = aScY - cY\n                  aShape.Move(moveX,moveY)\n                  if (thePrjView.IsNull.Not) then\n                    aShape = aShape.ReturnUnprojected(thePrjView)\n                  end\n                  aFtab.Se
tValue(aSf,i,aShape)\n                end \n                aFTab.EndTransaction   \n                iThemes.Invalidate(true)  \n              end\n            end\n          end\n        end\n      end\n      av.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.543
	Owner:	542
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.544
)

(DocAct.545
	Doc:	542
)

(SEd.546
	Name:	"AVExtAdvEditor.NMoveToOpen"
	CreationDate:	"14 Июль 2004 г. 0:47:33"
	GUIName:	"Script"
	Win:	547
	CSMgr:	548
	DocExts:	549
	Source:	"aDil = av.FindDialog(\"AVExtAdvEditor.NMoveTo\")\nagrlist = _AVExtAdvEditorView.getgraphics\ncX = 0\ncY = 0\naListVertex = agrlist.FindByName(\"AVExtAdvEditorSelectingCenter\")\nif (aListVertex <> nil) then\n  centerPt = aListVertex.GetShape\n  cX = centerPt.GetX\n  cY = centerPt.GetY\n  cX.SetFormat(\"dd.dddd\")\n  cY.SetFormat(\"dd.dddd\")\nend\naDil.FindByName(\"aTL1\").SetText(cX.AsString)\naDil.FindByName(\"aTL2\").SetText(cY.AsString)\naDil.Open"
	SearchStr:	"NotEditNumV"
)

(DocWin.547
	Owner:	546
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.548
)

(DocAct.549
	Doc:	546
)

(DEd.550
	Name:	"AVExtAdvEditor.NRotate"
	CreationDate:	"6 Май 2004 г. 1:23:14"
	GUIName:	"DialogEditor"
	Win:	551
	CSMgr:	552
	DocExts:	554
	DocExts:	555
	Graphics:	556
	Dpy:	562
	Dialog:	565
	DialogExtent:	571
	Compiled:	1
)

(DocWin.551
	Owner:	550
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.552
	Client:	553
)

(CSClient.553
	Client:	554
	ReqName:	"ClientNfy"
)

(PanMgr.554
	Doc:	550
)

(DocAct.555
	Doc:	550
)

(GList.556
	Child:	557
	Dpy:	562
	FormatNumb:	564
)

(GCtrl.557
	Name:	"aTL"
	Bounds:	558
	Control:	559
	Editable:	1
)

(RectD.558
	Left:	1.22916666666667
	Top:	6.36458333333333
	Right:	2.46875000000000
	Bottom:	6.15625000000000
)

(TextLine.559
	InternalName:	"aTL"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
	TextType:	560
	Apply:	"AVExtAdvEditor.RotateAp"
	NextControl:	561
)

(AVEnum.560
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.561
)

(PageDpy.562
	Top:	7.43750000000000
	Right:	12.03125000000000
	ReportUnits:	1
	Units:	1
	Scale:	563
	ZoomRight:	12.03125000000000
	ZoomTop:	7.43750000000000
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.563
	N:	0.08311688311688
)

(Numb.564
)

(AVDLog.565
	Name:	"AVExtAdvEditor.NRotate"
	X:	124
	Y:	116
	W:	121
	H:	40
	Server:	32
	ControlPanel:	566
	Title:	"Angle"
	EscapeEnabled:	1
	Resizable:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	Close:	"AVExtAdvEditor.DialogClose"
	DefaultButton:	570
)

(CPanel.566
	Child:	567
	ResBox:	569
	Listening:	1
)

(TextLine.567
	InternalName:	"aTL"
	Listening:	1
	TextType:	568
	Apply:	"AVExtAdvEditor.RotateAp"
	NextControl:	71
)

(AVEnum.568
	Name:	"TEXTLINE_TYPE_REAL"
)

(RectD.569
	Left:	-3.00000000000000
	Top:	29.00000000000000
	Right:	116.00000000000000
	Bottom:	9.00000000000000
)

(Nil.570
)

(RectD.571
	Left:	1.26041666666667
	Top:	6.45833333333333
	Right:	2.52083333333333
	Bottom:	6.07291666666667
)

(DEd.572
	Name:	"AVExtAdvEditor.NScale"
	CreationDate:	"6 Май 2004 г. 1:23:14"
	GUIName:	"DialogEditor"
	Win:	573
	CSMgr:	574
	DocExts:	576
	DocExts:	577
	Graphics:	578
	Dpy:	589
	Dialog:	592
	DialogExtent:	601
	Compiled:	1
)

(DocWin.573
	Owner:	572
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.574
	Client:	575
)

(CSClient.575
	Client:	576
	ReqName:	"ClientNfy"
)

(PanMgr.576
	Doc:	572
)

(DocAct.577
	Doc:	572
)

(GList.578
	Child:	579
	Child:	584
	Dpy:	589
	FormatNumb:	591
)

(GCtrl.579
	Name:	"aTL1"
	Bounds:	580
	Control:	581
	Editable:	1
)

(RectD.580
	Left:	2.01041666666667
	Top:	6.64583333333333
	Right:	3.00000000000000
	Bottom:	6.43750000000000
)

(TextLine.581
	InternalName:	"aTL1"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
	TextType:	582
	Apply:	"AVExtAdvEditor.NScaleAp"
	NextControl:	583
)

(AVEnum.582
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.583
)

(GCtrl.584
	Name:	"aTL2"
	Bounds:	585
	Control:	586
	Editable:	1
)

(RectD.585
	Left:	3.05208333333333
	Top:	6.64583333333333
	Right:	4.04166666666667
	Bottom:	6.43750000000000
)

(TextLine.586
	InternalName:	"aTL2"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
	TextType:	587
	Apply:	"AVExtAdvEditor.NScaleAp"
	NextControl:	588
)

(AVEnum.587
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.588
)

(PageDpy.589
	Top:	7.43750000000000
	Right:	12.03125000000000
	ReportUnits:	1
	Units:	1
	Scale:	590
	ZoomRight:	12.03125000000000
	ZoomTop:	7.43750000000000
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.590
	N:	0.08311688311688
)

(Numb.591
)

(AVDLog.592
	Name:	"AVExtAdvEditor.NScale"
	X:	199
	Y:	89
	W:	198
	H:	40
	Server:	32
	ControlPanel:	593
	Title:	"Scale X, Y (%)"
	EscapeEnabled:	1
	Resizable:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	Close:	"AVExtAdvEditor.DialogClose"
	DefaultButton:	600
)

(CPanel.593
	Child:	594
	Child:	596
	ResBox:	598
	ResBox:	599
	Listening:	1
)

(TextLine.594
	InternalName:	"aTL1"
	Listening:	1
	TextType:	595
	Apply:	"AVExtAdvEditor.NScaleAp"
	NextControl:	71
)

(AVEnum.595
	Name:	"TEXTLINE_TYPE_REAL"
)

(TextLine.596
	InternalName:	"aTL2"
	Listening:	1
	TextType:	597
	Apply:	"AVExtAdvEditor.NScaleAp"
	NextControl:	71
)

(AVEnum.597
	Name:	"TEXTLINE_TYPE_REAL"
)

(RectD.598
	Left:	-3.00000000000000
	Top:	29.00000000000000
	Right:	92.00000000000000
	Bottom:	9.00000000000000
)

(RectD.599
	Left:	97.00000000000000
	Top:	29.00000000000000
	Right:	192.00000000000000
	Bottom:	9.00000000000000
)

(Nil.600
)

(RectD.601
	Left:	2.04166666666667
	Top:	6.73958333333333
	Right:	4.10416666666667
	Bottom:	6.35416666666667
)

(SEd.602
	Name:	"AVExtAdvEditor.NScaleAp"
	CreationDate:	"13 Июль 2004 г. 23:38:02"
	GUIName:	"Script"
	Win:	603
	CSMgr:	604
	DocExts:	605
	Source:	"aScStrX = self.GetDialog.FindByName(\"aTL1\").GEtText\naScStrY = self.GetDialog.FindByName(\"aTL2\").GEtText\nif (aScStrX.IsNumber) then\n  if (aScStrY.IsNumber) then\n    thePrjView = _AVExtAdvEditorView.GetProjection\n    agrlist = _AVExtAdvEditorView.getgraphics\n    agrlist.SetNumberFormat(\"dd.dddddddddddddddddddddddddddd\")\n    Script.The.SetNumberFormat(\"dd.dddddddddddddddddddddddddddd\")\n    aScX = aScStrX.AsNumber / 100\n    aScY = aScStrY.AsNumber / 100\n    aListVertex = agrlist.FindByName(\"AVExtAdvEditorSelect
ingCenter\")\n    if (aListVertex <> nil) then\n      centerPt = aListVertex.GetShape\n      cX = centerPt.GetX\n      cY = centerPt.GetY\n      aThList = _AVExtAdvEditorList.ReturnKeys\n      for each iThemes in aThList\n        if (_AVExtAdvEditorList.Get(iThemes) = 1) then\n          aFTab = iThemes.GetFTab\n          if (aFTab.IsEditable) then\n            aSF = aFTab.FindField(\"Shape\")\n            if (aSF <> nil) then\n              aSel = aFTAb.GetSelection\n              if (aSel.Count > 0) then\n                a
FTab.BeginTransaction\n                for each i in aSel\n                  aShape = aFtab.ReturnValue(aSf,i)\n                  if (thePrjView.IsNull.Not) then\n                    aShape = aShape.Returnprojected(thePrjView)\n                  end\n                  moveX = 0 - cX\n                  moveY = 0 - cY\n                  aTrans = Transform2D.Make\n                  aTrans.Move(moveX@moveY)\n                  aTrans.Scale(aScX@aScY)\n                  aTrans.Move(cX@cY)\n                  aShape.Transform 
(aTrans)\n                  if (thePrjView.IsNull.Not) then\n                    aShape = aShape.ReturnUnprojected(thePrjView)\n                  end\n                  aFtab.SetValue(aSf,i,aShape)\n                end \n                aFTab.EndTransaction   \n                iThemes.Invalidate(true)  \n              end\n            end\n          end\n        end\n      end\n      av.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.603
	Owner:	602
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.604
)

(DocAct.605
	Doc:	602
)

(SEd.606
	Name:	"AVExtAdvEditor.NScaleOpen"
	CreationDate:	"13 Июль 2004 г. 23:59:44"
	GUIName:	"Script"
	Win:	607
	CSMgr:	608
	DocExts:	609
	Source:	"aDil = av.FindDialog(\"AVExtAdvEditor.NScale\")\naDil.FindByName(\"aTL1\").SetText(\"100\")\naDil.FindByName(\"aTL2\").SetText(\"100\")\naDil.Open"
	SearchStr:	"NotEditNumV"
)

(DocWin.607
	Owner:	606
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.608
)

(DocAct.609
	Doc:	606
)

(SEd.610
	Name:	"AVExtAdvEditor.NUpd"
	CreationDate:	"14 Июль 2004 г. 1:12:05"
	GUIName:	"Script"
	Win:	611
	CSMgr:	612
	DocExts:	613
	Source:	"aValid = false\naTL = _AVExtAdvEditorList.ReturnKeys\nfor each i in aTL\n  if (_AVExtAdvEditorList.Get(i) = 1) then\n    if (i.GetFTab.IsEditable) then\n      if (i.GetFTab.GetSelection.Count > 0) then\n        aValid = true\n        break\n      end\n    end\n  end\nend\nself.setenabled(aValid)"
	SearchStr:	"NotEditNumV"
)

(DocWin.611
	Owner:	610
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.612
)

(DocAct.613
	Doc:	610
)

(DEd.614
	Name:	"AVExtAdvEditor.Options"
	CreationDate:	"2 Май 2004 г. 0:07:19"
	GUIName:	"DialogEditor"
	Win:	615
	CSMgr:	616
	DocExts:	618
	DocExts:	619
	Graphics:	620
	Dpy:	690
	Dialog:	693
	DialogExtent:	748
	Compiled:	1
)

(DocWin.615
	Owner:	614
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.616
	Client:	617
)

(CSClient.617
	Client:	618
	ReqName:	"ClientNfy"
)

(PanMgr.618
	Doc:	614
)

(DocAct.619
	Doc:	614
)

(GList.620
	Child:	621
	Child:	624
	Child:	629
	Child:	633
	Child:	636
	Child:	639
	Child:	643
	Child:	646
	Child:	649
	Child:	652
	Child:	655
	Child:	658
	Child:	661
	Child:	664
	Child:	667
	Child:	670
	Child:	673
	Child:	677
	Child:	681
	Child:	684
	Child:	687
	Dpy:	690
	FormatNumb:	692
)

(GCtrl.621
	Name:	"aCP"
	Bounds:	622
	Control:	623
	Editable:	1
)

(RectD.622
	Left:	0.91666666666667
	Top:	6.98958333333333
	Right:	4.44791666666667
	Bottom:	4.13541666666667
)

(CPanel.623
	InternalName:	"aCP"
	UseGraphicNfy:	1
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(GCtrl.624
	Name:	"aTLSt"
	Bounds:	625
	Control:	626
	Editable:	1
)

(RectD.625
	Left:	0.98958333333333
	Top:	6.54166666666667
	Right:	2.83333333333333
	Bottom:	6.33333333333333
)

(TextLine.626
	InternalName:	"aTLSt"
	UseGraphicNfy:	1
	Label:	"Stream tolerance:"
	Constraints:	0x55
	Listening:	1
	TextType:	627
	NextControl:	628
)

(AVEnum.627
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.628
)

(GCtrl.629
	Name:	"aTLSn"
	Bounds:	630
	Control:	631
	Editable:	1
)

(RectD.630
	Left:	0.98958333333333
	Top:	6.89583333333333
	Right:	2.83333333333333
	Bottom:	6.68750000000000
)

(TextLine.631
	InternalName:	"aTLSn"
	UseGraphicNfy:	1
	Label:	"Snapping tolerance:"
	Constraints:	0x55
	Listening:	1
	TextType:	632
	NextControl:	628
)

(AVEnum.632
	Name:	"TEXTLINE_TYPE_REAL"
)

(GCtrl.633
	Name:	"aCBSn"
	Bounds:	634
	Control:	635
	Editable:	1
)

(RectD.634
	Left:	2.93750000000000
	Top:	6.88541666666667
	Right:	3.95833333333333
	Bottom:	6.18750000000000
)

(AVCBBox.635
	InternalName:	"aCBSn"
	UseGraphicNfy:	1
	NextControl:	628
	ContentKind:	4
	Constraints:	0x55
	Listening:	1
)

(GCtrl.636
	Name:	"aCBSt"
	Bounds:	637
	Control:	638
	Editable:	1
)

(RectD.637
	Left:	2.93750000000000
	Top:	6.53125000000000
	Right:	3.95833333333333
	Bottom:	5.84375000000000
)

(AVCBBox.638
	InternalName:	"aCBSt"
	UseGraphicNfy:	1
	NextControl:	628
	ContentKind:	4
	Constraints:	0x55
	Listening:	1
)

(GCtrl.639
	Name:	"aTLG"
	Bounds:	640
	Control:	641
	Editable:	1
)

(RectD.640
	Left:	0.98958333333333
	Top:	6.26041666666667
	Right:	3.94791666666667
	Bottom:	6.05208333333333
)

(TextLine.641
	InternalName:	"aTLG"
	UseGraphicNfy:	1
	Label:	"Group points together when streaming:"
	Constraints:	0x55
	Listening:	1
	TextType:	642
	NextControl:	628
)

(AVEnum.642
	Name:	"TEXTLINE_TYPE_INTEGER"
)

(GCtrl.643
	Name:	"aTL1"
	Bounds:	644
	Control:	645
	Editable:	1
)

(RectD.644
	Left:	1.00000000000000
	Top:	5.87500000000000
	Right:	2.57291666666667
	Bottom:	5.69791666666667
)

(TextLabel.645
	InternalName:	"aTL1"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"Curve Bezier vertexs frequency:"
	Listening:	1
)

(GCtrl.646
	Name:	"aTL2"
	Bounds:	647
	Control:	648
	Editable:	1
)

(RectD.647
	Left:	1.00000000000000
	Top:	5.50000000000000
	Right:	2.25000000000000
	Bottom:	5.32291666666667
)

(TextLabel.648
	InternalName:	"aTL2"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"Arc vertexs frequency:"
	Listening:	1
)

(GCtrl.649
	Name:	"aCBC"
	Bounds:	650
	Control:	651
	Editable:	1
)

(RectD.650
	Left:	2.63541666666667
	Top:	5.87500000000000
	Right:	3.66666666666667
	Bottom:	4.96875000000000
)

(AVCBBox.651
	InternalName:	"aCBC"
	UseGraphicNfy:	1
	NextControl:	628
	ContentKind:	4
	Constraints:	0x55
	Listening:	1
)

(GCtrl.652
	Name:	"aCP1"
	Bounds:	653
	Control:	654
	Editable:	1
)

(RectD.653
	Left:	0.98958333333333
	Top:	6.66666666666667
	Right:	4.40625000000000
	Bottom:	6.59375000000000
)

(CPanel.654
	InternalName:	"aCP1"
	UseGraphicNfy:	1
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(GCtrl.655
	Name:	"aCP2"
	Bounds:	656
	Control:	657
	Editable:	1
)

(RectD.656
	Left:	0.98958333333333
	Top:	6.02083333333333
	Right:	4.40625000000000
	Bottom:	5.95833333333333
)

(CPanel.657
	InternalName:	"aCP2"
	UseGraphicNfy:	1
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(GCtrl.658
	Name:	"aCP3"
	Bounds:	659
	Control:	660
	Editable:	1
)

(RectD.659
	Left:	0.98958333333333
	Top:	5.62500000000000
	Right:	4.40625000000000
	Bottom:	5.56250000000000
)

(CPanel.660
	InternalName:	"aCP3"
	UseGraphicNfy:	1
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(GCtrl.661
	Name:	"aCBA"
	Bounds:	662
	Control:	663
	Editable:	1
)

(RectD.662
	Left:	2.62500000000000
	Top:	5.50000000000000
	Right:	3.66666666666667
	Bottom:	4.59375000000000
)

(AVCBBox.663
	InternalName:	"aCBA"
	UseGraphicNfy:	1
	NextControl:	628
	ContentKind:	4
	Constraints:	0x55
	Listening:	1
)

(GCtrl.664
	Name:	"aCP4"
	Bounds:	665
	Control:	666
	Editable:	1
)

(RectD.665
	Left:	0.98958333333333
	Top:	5.25000000000000
	Right:	4.40625000000000
	Bottom:	5.18750000000000
)

(CPanel.666
	InternalName:	"aCP4"
	UseGraphicNfy:	1
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(GCtrl.667
	Name:	"aTL7"
	Bounds:	668
	Control:	669
	Editable:	1
)

(RectD.668
	Left:	3.76041666666667
	Top:	5.87500000000000
	Right:	4.16666666666667
	Bottom:	5.69791666666667
)

(TextLabel.669
	InternalName:	"aTL7"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"points"
	Listening:	1
)

(GCtrl.670
	Name:	"aTL8"
	Bounds:	671
	Control:	672
	Editable:	1
)

(RectD.671
	Left:	3.76041666666667
	Top:	5.50000000000000
	Right:	4.16666666666667
	Bottom:	5.32291666666667
)

(TextLabel.672
	InternalName:	"aTL8"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"points"
	Listening:	1
)

(GCtrl.673
	Name:	"aBC"
	Bounds:	674
	Control:	675
	Editable:	1
)

(RectD.674
	Left:	3.86458333333333
	Top:	4.48958333333333
	Right:	4.38541666666667
	Bottom:	4.20833333333333
)

(Butn.675
	InternalName:	"aBC"
	UseGraphicNfy:	1
	Icon:	676
	Click:	"AVExtAdvEditor.OptionsClose"
)

(AVIcon.676
	Name:	"adveditcan.gif"
	Data:	4e442049 6d616765 00010024 000d0000 
	Data:	01d40202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 01020202 02020201 
	Data:	02020201 02010202 02010201 02020202 
	Data:	02010202 02020201 02020202 01020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020201 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02010101 01020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020201 02020202 01020202 02020202 
	Data:	02020201 02010102 02010201 02020201 
	Data:	02010202 02010201 02020202 02010101 
	Data:	01020202 01010101 02010202 02010202 
	Data:	01010102 02020101 01020201 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 01020202 02010202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020201 02020202 01020202 02020202 
	Data:	01010102 02010201 01020202 01010102 
	Data:	02020101 01020201 02020202 01020202 
	Data:	02020202 01010101 02010202 02010201 
	Data:	02020202 02010101 01010201 02020202 
	Data:	01020202 02010201 02020201 02010202 
	Data:	02010201 02020201 02010202 02010201 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020000 001000ff ffff0000 
	Data:	000002c0 c0c00000 00000002 0008000a 
	Data:	00200002 00000000 00000000 0000
)

(GCtrl.677
	Name:	"aBOk"
	Bounds:	678
	Control:	679
	Editable:	1
)

(RectD.678
	Left:	3.26041666666667
	Top:	4.48958333333333
	Right:	3.78125000000000
	Bottom:	4.20833333333333
)

(Butn.679
	InternalName:	"aBOk"
	UseGraphicNfy:	1
	Icon:	680
	Click:	"AVExtAdvEditor.OptionsSet"
)

(AVIcon.680
	Name:	"adveditok.gif"
	Data:	4e442049 6d616765 00010011 000d0000 
	Data:	00dd0202 02020202 02020202 02020202 
	Data:	02020202 02010202 02020102 02010201 
	Data:	02020202 02020102 02020201 02020102 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02010101 01020202 
	Data:	01020202 02020202 02010202 02020102 
	Data:	02010201 02020202 02020201 01010102 
	Data:	02020102 02020102 02020202 02020202 
	Data:	02020202 02020202 02020202 01020202 
	Data:	02010202 01020202 02020202 02010202 
	Data:	02020102 02010202 01020202 02020102 
	Data:	02020201 02020101 02020202 02020201 
	Data:	02020202 01020201 02020102 02020202 
	Data:	02020202 02020202 02020202 02020200 
	Data:	00001000 ffffff00 00000002 c0c0c000 
	Data:	00000000 02000800 0a002000 02000000 
	Data:	00000000 000000
)

(GCtrl.681
	Name:	"aCP5"
	Bounds:	682
	Control:	683
	Editable:	1
)

(RectD.682
	Left:	0.98958333333333
	Top:	4.63541666666667
	Right:	4.40625000000000
	Bottom:	4.57291666666667
)

(CPanel.683
	InternalName:	"aCP5"
	UseGraphicNfy:	1
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(GCtrl.684
	Name:	"aChBP"
	Bounds:	685
	Control:	686
	Editable:	1
)

(RectD.685
	Left:	0.97916666666667
	Top:	5.14583333333333
	Right:	3.27083333333333
	Bottom:	4.88541666666667
)

(AVCBox.686
	InternalName:	"aChBP"
	UseGraphicNfy:	1
	Listening:	1
	Label:	"Reset parameters of drawing after a click"
	Constraints:	0x55
)

(GCtrl.687
	Name:	"aChBA"
	Bounds:	688
	Control:	689
	Editable:	1
)

(RectD.688
	Left:	0.97916666666667
	Top:	4.91666666666667
	Right:	2.69791666666667
	Bottom:	4.65625000000000
)

(AVCBox.689
	InternalName:	"aChBA"
	UseGraphicNfy:	1
	Listening:	1
	Label:	"Automatically to close dialogs"
	Constraints:	0x55
)

(PageDpy.690
	Top:	7.43750000000000
	Right:	12.03125000000000
	ReportUnits:	1
	Units:	1
	Scale:	691
	ZoomRight:	12.03125000000000
	ZoomTop:	7.43750000000000
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.691
	N:	0.08311688311688
)

(Numb.692
)

(AVDLog.693
	Name:	"AVExtAdvEditor.Options"
	X:	85
	Y:	61
	W:	347
	H:	280
	ConstrainedControlNames:	694
	ConstrainedControlNames:	695
	Constraints:	696
	Constraints:	697
	Server:	32
	ControlPanel:	698
	Title:	"Tools"
	EscapeEnabled:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	Close:	"AVExtAdvEditor.DialogClose"
	DefaultButton:	747
)

(AVStr.694
	S:	"aBC"
)

(AVStr.695
	S:	"aBOk"
)

(Numb.696
)

(Numb.697
)

(CPanel.698
	Child:	699
	ResBox:	746
	Listening:	1
)

(CPanel.699
	InternalName:	"aCP"
	Child:	700
	Child:	703
	Child:	705
	Child:	706
	Child:	707
	Child:	709
	Child:	710
	Child:	711
	Child:	712
	Child:	713
	Child:	714
	Child:	715
	Child:	716
	Child:	717
	Child:	718
	Child:	719
	Child:	721
	Child:	723
	Child:	724
	Child:	725
	ResBox:	726
	ResBox:	727
	ResBox:	728
	ResBox:	729
	ResBox:	730
	ResBox:	731
	ResBox:	732
	ResBox:	733
	ResBox:	734
	ResBox:	735
	ResBox:	736
	ResBox:	737
	ResBox:	738
	ResBox:	739
	ResBox:	740
	ResBox:	741
	ResBox:	742
	ResBox:	743
	ResBox:	744
	ResBox:	745
	VisibleBorder:	1
	Listening:	1
)

(TextLine.700
	InternalName:	"aTLSt"
	Label:	"Stream tolerance:"
	Listening:	1
	TextType:	701
	NextControl:	702
)

(AVEnum.701
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.702
)

(TextLine.703
	InternalName:	"aTLSn"
	Label:	"Snapping tolerance:"
	Listening:	1
	TextType:	704
	NextControl:	702
)

(AVEnum.704
	Name:	"TEXTLINE_TYPE_REAL"
)

(AVCBBox.705
	InternalName:	"aCBSn"
	NextControl:	702
	ContentKind:	4
	Listening:	1
)

(AVCBBox.706
	InternalName:	"aCBSt"
	NextControl:	702
	ContentKind:	4
	Listening:	1
)

(TextLine.707
	InternalName:	"aTLG"
	Label:	"Group points together when streaming:"
	Listening:	1
	TextType:	708
	NextControl:	702
)

(AVEnum.708
	Name:	"TEXTLINE_TYPE_INTEGER"
)

(TextLabel.709
	InternalName:	"aTL1"
	Label:	"Curve Bezier vertexs frequency:"
	Listening:	1
)

(TextLabel.710
	InternalName:	"aTL2"
	Label:	"Arc vertexs frequency:"
	Listening:	1
)

(AVCBBox.711
	InternalName:	"aCBC"
	NextControl:	702
	ContentKind:	4
	Listening:	1
)

(CPanel.712
	InternalName:	"aCP1"
	VisibleBorder:	1
	Listening:	1
)

(CPanel.713
	InternalName:	"aCP2"
	VisibleBorder:	1
	Listening:	1
)

(CPanel.714
	InternalName:	"aCP3"
	VisibleBorder:	1
	Listening:	1
)

(AVCBBox.715
	InternalName:	"aCBA"
	NextControl:	702
	ContentKind:	4
	Listening:	1
)

(CPanel.716
	InternalName:	"aCP4"
	VisibleBorder:	1
	Listening:	1
)

(TextLabel.717
	InternalName:	"aTL7"
	Label:	"points"
	Listening:	1
)

(TextLabel.718
	InternalName:	"aTL8"
	Label:	"points"
	Listening:	1
)

(Butn.719
	InternalName:	"aBC"
	Icon:	720
	Click:	"AVExtAdvEditor.OptionsClose"
)

(AVIcon.720
	Name:	"adveditcan.gif"
	Data:	4e442049 6d616765 00010024 000d0000 
	Data:	01d40202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 01020202 02020201 
	Data:	02020201 02010202 02010201 02020202 
	Data:	02010202 02020201 02020202 01020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020201 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02010101 01020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020201 02020202 01020202 02020202 
	Data:	02020201 02010102 02010201 02020201 
	Data:	02010202 02010201 02020202 02010101 
	Data:	01020202 01010101 02010202 02010202 
	Data:	01010102 02020101 01020201 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 01020202 02010202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020201 02020202 01020202 02020202 
	Data:	01010102 02010201 01020202 01010102 
	Data:	02020101 01020201 02020202 01020202 
	Data:	02020202 01010101 02010202 02010201 
	Data:	02020202 02010101 01010201 02020202 
	Data:	01020202 02010201 02020201 02010202 
	Data:	02010201 02020201 02010202 02010201 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020000 001000ff ffff0000 
	Data:	000002c0 c0c00000 00000002 0008000a 
	Data:	00200002 00000000 00000000 0000
)

(Butn.721
	InternalName:	"aBOk"
	Icon:	722
	Click:	"AVExtAdvEditor.OptionsSet"
)

(AVIcon.722
	Name:	"adveditok.gif"
	Data:	4e442049 6d616765 00010011 000d0000 
	Data:	00dd0202 02020202 02020202 02020202 
	Data:	02020202 02010202 02020102 02010201 
	Data:	02020202 02020102 02020201 02020102 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02010101 01020202 
	Data:	01020202 02020202 02010202 02020102 
	Data:	02010201 02020202 02020201 01010102 
	Data:	02020102 02020102 02020202 02020202 
	Data:	02020202 02020202 02020202 01020202 
	Data:	02010202 01020202 02020202 02010202 
	Data:	02020102 02010202 01020202 02020102 
	Data:	02020201 02020101 02020202 02020201 
	Data:	02020202 01020201 02020102 02020202 
	Data:	02020202 02020202 02020202 02020200 
	Data:	00001000 ffffff00 00000002 c0c0c000 
	Data:	00000000 02000800 0a002000 02000000 
	Data:	00000000 000000
)

(CPanel.723
	InternalName:	"aCP5"
	VisibleBorder:	1
	Listening:	1
)

(AVCBox.724
	InternalName:	"aChBP"
	Listening:	1
	Label:	"Reset parameters of drawing after a click"
)

(AVCBox.725
	InternalName:	"aChBA"
	Listening:	1
	Label:	"Automatically to close dialogs"
)

(RectD.726
	Left:	7.00000000000000
	Top:	63.00000000000000
	Right:	184.00000000000000
	Bottom:	43.00000000000000
)

(RectD.727
	Left:	7.00000000000000
	Top:	29.00000000000000
	Right:	184.00000000000000
	Bottom:	9.00000000000000
)

(RectD.728
	Left:	194.00000000000000
	Top:	77.00000000000000
	Right:	292.00000000000000
	Bottom:	10.00000000000000
)

(RectD.729
	Left:	194.00000000000000
	Top:	110.00000000000000
	Right:	292.00000000000000
	Bottom:	44.00000000000000
)

(RectD.730
	Left:	7.00000000000000
	Top:	90.00000000000000
	Right:	291.00000000000000
	Bottom:	70.00000000000000
)

(RectD.731
	Left:	8.00000000000000
	Top:	124.00000000000000
	Right:	159.00000000000000
	Bottom:	107.00000000000000
)

(RectD.732
	Left:	8.00000000000000
	Top:	160.00000000000000
	Right:	128.00000000000000
	Bottom:	143.00000000000000
)

(RectD.733
	Left:	165.00000000000000
	Top:	194.00000000000000
	Right:	264.00000000000000
	Bottom:	107.00000000000000
)

(RectD.734
	Left:	7.00000000000000
	Top:	38.00000000000000
	Right:	335.00000000000000
	Bottom:	31.00000000000000
)

(RectD.735
	Left:	7.00000000000000
	Top:	99.00000000000000
	Right:	335.00000000000000
	Bottom:	93.00000000000000
)

(RectD.736
	Left:	7.00000000000000
	Top:	137.00000000000000
	Right:	335.00000000000000
	Bottom:	131.00000000000000
)

(RectD.737
	Left:	164.00000000000000
	Top:	230.00000000000000
	Right:	264.00000000000000
	Bottom:	143.00000000000000
)

(RectD.738
	Left:	7.00000000000000
	Top:	173.00000000000000
	Right:	335.00000000000000
	Bottom:	167.00000000000000
)

(RectD.739
	Left:	273.00000000000000
	Top:	124.00000000000000
	Right:	312.00000000000000
	Bottom:	107.00000000000000
)

(RectD.740
	Left:	273.00000000000000
	Top:	160.00000000000000
	Right:	312.00000000000000
	Bottom:	143.00000000000000
)

(RectD.741
	Left:	283.00000000000000
	Top:	267.00000000000000
	Right:	333.00000000000000
	Bottom:	240.00000000000000
)

(RectD.742
	Left:	225.00000000000000
	Top:	267.00000000000000
	Right:	275.00000000000000
	Bottom:	240.00000000000000
)

(RectD.743
	Left:	7.00000000000000
	Top:	232.00000000000000
	Right:	335.00000000000000
	Bottom:	226.00000000000000
)

(RectD.744
	Left:	6.00000000000000
	Top:	202.00000000000000
	Right:	226.00000000000000
	Bottom:	177.00000000000000
)

(RectD.745
	Left:	6.00000000000000
	Top:	224.00000000000000
	Right:	171.00000000000000
	Bottom:	199.00000000000000
)

(RectD.746
	Left:	6.00000000000000
	Top:	278.00000000000000
	Right:	345.00000000000000
	Bottom:	4.00000000000000
)

(Nil.747
)

(RectD.748
	Left:	0.85416666666667
	Top:	7.03125000000000
	Right:	4.46875000000000
	Bottom:	4.11458333333333
)

(SEd.749
	Name:	"AVExtAdvEditor.OptionsClose"
	CreationDate:	"3 Май 2004 г. 1:52:41"
	GUIName:	"Script"
	Win:	750
	CSMgr:	751
	DocExts:	752
	Source:	"Self.GetDialog.Close"
	SearchStr:	"NotEditNumV"
)

(DocWin.750
	Owner:	749
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.751
)

(DocAct.752
	Doc:	749
)

(DEd.753
	Name:	"AVExtAdvEditor.OptionsDr"
	CreationDate:	"2 Май 2004 г. 0:07:19"
	GUIName:	"DialogEditor"
	Win:	754
	CSMgr:	755
	DocExts:	757
	DocExts:	758
	Graphics:	759
	Dpy:	876
	Dialog:	879
	DialogExtent:	963
	Compiled:	1
)

(DocWin.754
	Owner:	753
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.755
	Client:	756
)

(CSClient.756
	Client:	757
	ReqName:	"ClientNfy"
)

(PanMgr.757
	Doc:	753
)

(DocAct.758
	Doc:	753
)

(GList.759
	Child:	760
	Child:	763
	Child:	766
	Child:	769
	Child:	772
	Child:	775
	Child:	778
	Child:	781
	Child:	785
	Child:	788
	Child:	791
	Child:	794
	Child:	797
	Child:	800
	Child:	803
	Child:	806
	Child:	810
	Child:	813
	Child:	816
	Child:	819
	Child:	822
	Child:	825
	Child:	828
	Child:	831
	Child:	835
	Child:	839
	Child:	842
	Child:	845
	Child:	849
	Child:	852
	Child:	855
	Child:	858
	Child:	861
	Child:	864
	Child:	867
	Child:	870
	Child:	873
	Dpy:	876
	FormatNumb:	878
)

(GCtrl.760
	Name:	"aCP"
	Bounds:	761
	Control:	762
	Editable:	1
)

(RectD.761
	Left:	0.93750000000000
	Top:	6.95833333333333
	Right:	4.46875000000000
	Bottom:	3.52083333333333
)

(CPanel.762
	InternalName:	"aCP"
	UseGraphicNfy:	1
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(GCtrl.763
	Name:	"aTL9"
	Bounds:	764
	Control:	765
	Editable:	1
)

(RectD.764
	Left:	1.03125000000000
	Top:	5.76041666666667
	Right:	1.72916666666667
	Bottom:	5.57291666666667
)

(TextLabel.765
	InternalName:	"aTL9"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"Sketch color:"
	Listening:	1
)

(GCtrl.766
	Name:	"aChBV"
	Bounds:	767
	Control:	768
	Editable:	1
)

(RectD.767
	Left:	1.02083333333333
	Top:	5.19791666666667
	Right:	2.53125000000000
	Bottom:	4.95833333333333
)

(AVCBox.768
	InternalName:	"aChBV"
	UseGraphicNfy:	1
	Listening:	1
	Label:	"Show vertex of a sketch"
	Constraints:	0x55
)

(GCtrl.769
	Name:	"aRBS2"
	Bounds:	770
	Control:	771
	Editable:	1
)

(RectD.770
	Left:	2.42708333333333
	Top:	4.92708333333333
	Right:	2.60416666666667
	Bottom:	4.69791666666667
)

(RButn.771
	InternalName:	"aRBS2"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
)

(GCtrl.772
	Name:	"aRBS3"
	Bounds:	773
	Control:	774
	Editable:	1
)

(RectD.773
	Left:	3.06250000000000
	Top:	4.92708333333333
	Right:	3.23958333333333
	Bottom:	4.69791666666667
)

(RButn.774
	InternalName:	"aRBS3"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
)

(GCtrl.775
	Name:	"aRBS4"
	Bounds:	776
	Control:	777
	Editable:	1
)

(RectD.776
	Left:	3.71875000000000
	Top:	4.92708333333333
	Right:	3.88541666666667
	Bottom:	4.69791666666667
)

(RButn.777
	InternalName:	"aRBS4"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
)

(GCtrl.778
	Name:	"aTL5"
	Bounds:	779
	Control:	780
	Editable:	1
)

(RectD.779
	Left:	1.03125000000000
	Top:	4.57291666666667
	Right:	1.67708333333333
	Bottom:	4.40625000000000
)

(TextLabel.780
	InternalName:	"aTL5"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"Vertex color:"
	Listening:	1
)

(GCtrl.781
	Name:	"aCBVC"
	Bounds:	782
	Control:	783
	Editable:	1
)

(RectD.782
	Left:	1.66666666666667
	Top:	4.56250000000000
	Right:	2.69791666666667
	Bottom:	1.82291666666667
)

(AVCBBox.783
	InternalName:	"aCBVC"
	UseGraphicNfy:	1
	NextControl:	784
	ContentKind:	4
	Constraints:	0x55
	Listening:	1
)

(Nil.784
)

(GCtrl.785
	Name:	"aCP5"
	Bounds:	786
	Control:	787
	Editable:	1
)

(RectD.786
	Left:	1.02083333333333
	Top:	4.06250000000000
	Right:	4.43750000000000
	Bottom:	4.00000000000000
)

(CPanel.787
	InternalName:	"aCP5"
	UseGraphicNfy:	1
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(GCtrl.788
	Name:	"aTL4"
	Bounds:	789
	Control:	790
	Editable:	1
)

(RectD.789
	Left:	1.03125000000000
	Top:	5.52083333333333
	Right:	1.68750000000000
	Bottom:	5.34375000000000
)

(TextLabel.790
	InternalName:	"aTL4"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"Sketch size:"
	Listening:	1
)

(GCtrl.791
	Name:	"aCBVS"
	Bounds:	792
	Control:	793
	Editable:	1
)

(RectD.792
	Left:	1.66666666666667
	Top:	4.30208333333333
	Right:	2.69791666666667
	Bottom:	1.60416666666667
)

(AVCBBox.793
	InternalName:	"aCBVS"
	UseGraphicNfy:	1
	NextControl:	784
	ContentKind:	4
	Constraints:	0x55
	Listening:	1
)

(GCtrl.794
	Name:	"aTL6"
	Bounds:	795
	Control:	796
	Editable:	1
)

(RectD.795
	Left:	1.03125000000000
	Top:	4.32291666666667
	Right:	1.64583333333333
	Bottom:	4.14583333333333
)

(TextLabel.796
	InternalName:	"aTL6"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"Vertex size:"
	Listening:	1
)

(GCtrl.797
	Name:	"aTL11"
	Bounds:	798
	Control:	799
	Editable:	1
)

(RectD.798
	Left:	1.03125000000000
	Top:	4.88541666666667
	Right:	1.82291666666667
	Bottom:	4.69791666666667
)

(TextLabel.799
	InternalName:	"aTL11"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"Vertex symbol:"
	Listening:	1
)

(GCtrl.800
	Name:	"aRBS1"
	Bounds:	801
	Control:	802
	Editable:	1
)

(RectD.801
	Left:	1.78125000000000
	Top:	4.92708333333333
	Right:	1.96875000000000
	Bottom:	4.69791666666667
)

(RButn.802
	InternalName:	"aRBS1"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
)

(GCtrl.803
	Name:	"aTL12"
	Bounds:	804
	Control:	805
	Editable:	1
)

(RectD.804
	Left:	2.82291666666667
	Top:	4.31250000000000
	Right:	3.43750000000000
	Bottom:	4.13541666666667
)

(TextLabel.805
	InternalName:	"aTL12"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"End size:"
	Listening:	1
)

(GCtrl.806
	Name:	"aCBVES"
	Bounds:	807
	Control:	808
	Editable:	1
)

(RectD.807
	Left:	3.35416666666667
	Top:	4.30208333333333
	Right:	4.37500000000000
	Bottom:	1.69791666666667
)

(AVCBBox.808
	InternalName:	"aCBVES"
	UseGraphicNfy:	1
	NextControl:	809
	ContentKind:	4
	Constraints:	0x55
	Listening:	1
)

(Nil.809
)

(GCtrl.810
	Name:	"aCBVEC"
	Bounds:	811
	Control:	812
	Editable:	1
)

(RectD.811
	Left:	3.35416666666667
	Top:	4.57291666666667
	Right:	4.37500000000000
	Bottom:	2.14583333333333
)

(AVCBBox.812
	InternalName:	"aCBVEC"
	UseGraphicNfy:	1
	NextControl:	809
	ContentKind:	4
	Constraints:	0x55
	Listening:	1
)

(GCtrl.813
	Name:	"aTL16"
	Bounds:	814
	Control:	815
	Editable:	1
)

(RectD.814
	Left:	2.82291666666667
	Top:	4.57291666666667
	Right:	3.47916666666667
	Bottom:	4.39583333333333
)

(TextLabel.815
	InternalName:	"aTL16"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"End color:"
	Listening:	1
)

(GCtrl.816
	Name:	"aTL15"
	Bounds:	817
	Control:	818
	Editable:	1
)

(RectD.817
	Left:	1.06250000000000
	Top:	6.34375000000000
	Right:	1.71875000000000
	Bottom:	6.17708333333333
)

(TextLabel.818
	InternalName:	"aTL15"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"Cursor size:"
	Listening:	1
)

(GCtrl.819
	Name:	"aCBCrS"
	Bounds:	820
	Control:	821
	Editable:	1
)

(RectD.820
	Left:	1.67708333333333
	Top:	6.34375000000000
	Right:	2.70833333333333
	Bottom:	4.25000000000000
)

(AVCBBox.821
	InternalName:	"aCBCrS"
	UseGraphicNfy:	1
	NextControl:	809
	ContentKind:	4
	Constraints:	0x55
	Listening:	1
)

(GCtrl.822
	Name:	"aCBCrC"
	Bounds:	823
	Control:	824
	Editable:	1
)

(RectD.823
	Left:	1.67708333333333
	Top:	6.60416666666667
	Right:	2.70833333333333
	Bottom:	4.26041666666667
)

(AVCBBox.824
	InternalName:	"aCBCrC"
	UseGraphicNfy:	1
	NextControl:	809
	ContentKind:	4
	Constraints:	0x55
	Listening:	1
)

(GCtrl.825
	Name:	"aTL14"
	Bounds:	826
	Control:	827
	Editable:	1
)

(RectD.826
	Left:	1.05208333333333
	Top:	6.58333333333333
	Right:	1.75000000000000
	Bottom:	6.40625000000000
)

(TextLabel.827
	InternalName:	"aTL14"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"Cursor color:"
	Listening:	1
)

(GCtrl.828
	Name:	"aCBCP"
	Bounds:	829
	Control:	830
	Editable:	1
)

(RectD.829
	Left:	1.02083333333333
	Top:	6.86458333333333
	Right:	3.10416666666667
	Bottom:	6.62500000000000
)

(AVCBox.830
	InternalName:	"aCBCP"
	UseGraphicNfy:	1
	Listening:	1
	Label:	"Always to show a point of the cursor"
	Constraints:	0x55
)

(GCtrl.831
	Name:	"aBC"
	Bounds:	832
	Control:	833
	Editable:	1
)

(RectD.832
	Left:	3.86458333333333
	Top:	3.92708333333333
	Right:	4.38541666666667
	Bottom:	3.63541666666667
)

(Butn.833
	InternalName:	"aBC"
	UseGraphicNfy:	1
	Icon:	834
	Click:	"AVExtAdvEditor.OptionsClose"
)

(AVIcon.834
	Name:	"adveditcan.gif"
	Data:	4e442049 6d616765 00010024 000d0000 
	Data:	01d40202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 01020202 02020201 
	Data:	02020201 02010202 02010201 02020202 
	Data:	02010202 02020201 02020202 01020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020201 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02010101 01020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020201 02020202 01020202 02020202 
	Data:	02020201 02010102 02010201 02020201 
	Data:	02010202 02010201 02020202 02010101 
	Data:	01020202 01010101 02010202 02010202 
	Data:	01010102 02020101 01020201 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 01020202 02010202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020201 02020202 01020202 02020202 
	Data:	01010102 02010201 01020202 01010102 
	Data:	02020101 01020201 02020202 01020202 
	Data:	02020202 01010101 02010202 02010201 
	Data:	02020202 02010101 01010201 02020202 
	Data:	01020202 02010201 02020201 02010202 
	Data:	02010201 02020201 02010202 02010201 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020000 001000ff ffff0000 
	Data:	000002c0 c0c00000 00000002 0008000a 
	Data:	00200002 00000000 00000000 0000
)

(GCtrl.835
	Name:	"aBOk"
	Bounds:	836
	Control:	837
	Editable:	1
)

(RectD.836
	Left:	3.26041666666667
	Top:	3.92708333333333
	Right:	3.78125000000000
	Bottom:	3.63541666666667
)

(Butn.837
	InternalName:	"aBOk"
	UseGraphicNfy:	1
	Icon:	838
	Click:	"AVExtAdvEditor.OptionsDrSet"
)

(AVIcon.838
	Name:	"adveditok.gif"
	Data:	4e442049 6d616765 00010011 000d0000 
	Data:	00dd0202 02020202 02020202 02020202 
	Data:	02020202 02010202 02020102 02010201 
	Data:	02020202 02020102 02020201 02020102 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02010101 01020202 
	Data:	01020202 02020202 02010202 02020102 
	Data:	02010201 02020202 02020201 01010102 
	Data:	02020102 02020102 02020202 02020202 
	Data:	02020202 02020202 02020202 01020202 
	Data:	02010202 01020202 02020202 02010202 
	Data:	02020102 02010202 01020202 02020102 
	Data:	02020201 02020101 02020202 02020201 
	Data:	02020202 01020201 02020102 02020202 
	Data:	02020202 02020202 02020202 02020200 
	Data:	00001000 ffffff00 00000002 c0c0c000 
	Data:	00000000 02000800 0a002000 02000000 
	Data:	00000000 000000
)

(GCtrl.839
	Name:	"aCP3"
	Bounds:	840
	Control:	841
	Editable:	1
)

(RectD.840
	Left:	1.00000000000000
	Top:	6.10416666666667
	Right:	4.41666666666667
	Bottom:	6.05208333333333
)

(CPanel.841
	InternalName:	"aCP3"
	UseGraphicNfy:	1
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(GCtrl.842
	Name:	"aTL2"
	Bounds:	843
	Control:	844
	Editable:	1
)

(RectD.843
	Left:	1.03125000000000
	Top:	5.97916666666667
	Right:	1.72916666666667
	Bottom:	5.80208333333333
)

(TextLabel.844
	InternalName:	"aTL2"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"Sketch line:"
	Listening:	1
)

(GCtrl.845
	Name:	"aCBSD"
	Bounds:	846
	Control:	847
	Editable:	1
)

(RectD.846
	Left:	1.69791666666667
	Top:	6.00000000000000
	Right:	2.72916666666667
	Bottom:	4.73958333333333
)

(AVCBBox.847
	InternalName:	"aCBSD"
	UseGraphicNfy:	1
	NextControl:	848
	ContentKind:	4
	Constraints:	0x55
	Listening:	1
)

(Nil.848
)

(GCtrl.849
	Name:	"aCBSC"
	Bounds:	850
	Control:	851
	Editable:	1
)

(RectD.850
	Left:	1.69791666666667
	Top:	5.78125000000000
	Right:	2.72916666666667
	Bottom:	3.54166666666667
)

(AVCBBox.851
	InternalName:	"aCBSC"
	UseGraphicNfy:	1
	NextControl:	784
	ContentKind:	4
	Constraints:	0x55
	Listening:	1
)

(GCtrl.852
	Name:	"aCBSS"
	Bounds:	853
	Control:	854
	Editable:	1
)

(RectD.853
	Left:	1.69791666666667
	Top:	5.52083333333333
	Right:	2.72916666666667
	Bottom:	3.08333333333333
)

(AVCBBox.854
	InternalName:	"aCBSS"
	UseGraphicNfy:	1
	NextControl:	784
	ContentKind:	4
	Constraints:	0x55
	Listening:	1
)

(GCtrl.855
	Name:	"aCP2"
	Bounds:	856
	Control:	857
	Editable:	1
)

(RectD.856
	Left:	1.00000000000000
	Top:	5.31250000000000
	Right:	4.41666666666667
	Bottom:	5.25000000000000
)

(CPanel.857
	InternalName:	"aCP2"
	UseGraphicNfy:	1
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(GCtrl.858
	Name:	"aCBSES"
	Bounds:	859
	Control:	860
	Editable:	1
)

(RectD.859
	Left:	3.36458333333333
	Top:	5.51041666666667
	Right:	4.40625000000000
	Bottom:	3.13541666666667
)

(AVCBBox.860
	InternalName:	"aCBSES"
	UseGraphicNfy:	1
	NextControl:	848
	ContentKind:	4
	Constraints:	0x55
	Listening:	1
)

(GCtrl.861
	Name:	"aCBSEC"
	Bounds:	862
	Control:	863
	Editable:	1
)

(RectD.862
	Left:	3.36458333333333
	Top:	5.77083333333333
	Right:	4.40625000000000
	Bottom:	3.82291666666667
)

(AVCBBox.863
	InternalName:	"aCBSEC"
	UseGraphicNfy:	1
	NextControl:	848
	ContentKind:	4
	Constraints:	0x55
	Listening:	1
)

(GCtrl.864
	Name:	"aCBSED"
	Bounds:	865
	Control:	866
	Editable:	1
)

(RectD.865
	Left:	3.36458333333333
	Top:	5.98958333333333
	Right:	4.40625000000000
	Bottom:	4.72916666666667
)

(AVCBBox.866
	InternalName:	"aCBSED"
	UseGraphicNfy:	1
	NextControl:	848
	ContentKind:	4
	Constraints:	0x55
	Listening:	1
)

(GCtrl.867
	Name:	"aTL1"
	Bounds:	868
	Control:	869
	Editable:	1
)

(RectD.868
	Left:	2.85416666666667
	Top:	5.96875000000000
	Right:	3.33333333333333
	Bottom:	5.79166666666667
)

(TextLabel.869
	InternalName:	"aTL1"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"End line:"
	Listening:	1
)

(GCtrl.870
	Name:	"aTL25"
	Bounds:	871
	Control:	872
	Editable:	1
)

(RectD.871
	Left:	2.87500000000000
	Top:	5.51041666666667
	Right:	3.35416666666667
	Bottom:	5.33333333333333
)

(TextLabel.872
	InternalName:	"aTL25"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"End size:"
	Listening:	1
)

(GCtrl.873
	Name:	"aTL3"
	Bounds:	874
	Control:	875
	Editable:	1
)

(RectD.874
	Left:	2.85416666666667
	Top:	5.75000000000000
	Right:	3.35416666666667
	Bottom:	5.57291666666667
)

(TextLabel.875
	InternalName:	"aTL3"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"End color:"
	Listening:	1
)

(PageDpy.876
	Top:	7.43750000000000
	Right:	12.03125000000000
	ReportUnits:	1
	Units:	1
	Scale:	877
	ZoomRight:	12.03125000000000
	ZoomTop:	7.43750000000000
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.877
	N:	0.08311688311688
)

(Numb.878
)

(AVDLog.879
	Name:	"AVExtAdvEditor.OptionsDr"
	X:	89
	Y:	64
	W:	344
	H:	336
	ConstrainedControlNames:	880
	ConstrainedControlNames:	881
	Constraints:	882
	Constraints:	883
	Server:	32
	ControlPanel:	884
	Title:	"Drawing"
	EscapeEnabled:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	Close:	"AVExtAdvEditor.DialogClose"
	DefaultButton:	962
)

(AVStr.880
	S:	"aBC"
)

(AVStr.881
	S:	"aBOk"
)

(Numb.882
)

(Numb.883
)

(CPanel.884
	Child:	885
	ResBox:	961
	Listening:	1
)

(CPanel.885
	InternalName:	"aCP"
	Child:	886
	Child:	887
	Child:	888
	Child:	889
	Child:	890
	Child:	891
	Child:	892
	Child:	894
	Child:	895
	Child:	896
	Child:	897
	Child:	898
	Child:	899
	Child:	900
	Child:	901
	Child:	902
	Child:	903
	Child:	904
	Child:	905
	Child:	906
	Child:	907
	Child:	908
	Child:	909
	Child:	911
	Child:	913
	Child:	914
	Child:	915
	Child:	916
	Child:	917
	Child:	918
	Child:	919
	Child:	920
	Child:	921
	Child:	922
	Child:	923
	Child:	924
	ResBox:	925
	ResBox:	926
	ResBox:	927
	ResBox:	928
	ResBox:	929
	ResBox:	930
	ResBox:	931
	ResBox:	932
	ResBox:	933
	ResBox:	934
	ResBox:	935
	ResBox:	936
	ResBox:	937
	ResBox:	938
	ResBox:	939
	ResBox:	940
	ResBox:	941
	ResBox:	942
	ResBox:	943
	ResBox:	944
	ResBox:	945
	ResBox:	946
	ResBox:	947
	ResBox:	948
	ResBox:	949
	ResBox:	950
	ResBox:	951
	ResBox:	952
	ResBox:	953
	ResBox:	954
	ResBox:	955
	ResBox:	956
	ResBox:	957
	ResBox:	958
	ResBox:	959
	ResBox:	960
	VisibleBorder:	1
	Listening:	1
)

(TextLabel.886
	InternalName:	"aTL9"
	Label:	"Sketch color:"
	Listening:	1
)

(AVCBox.887
	InternalName:	"aChBV"
	Listening:	1
	Label:	"Show vertex of a sketch"
)

(RButn.888
	InternalName:	"aRBS2"
	Listening:	1
)

(RButn.889
	InternalName:	"aRBS3"
	Listening:	1
)

(RButn.890
	InternalName:	"aRBS4"
	Listening:	1
)

(TextLabel.891
	InternalName:	"aTL5"
	Label:	"Vertex color:"
	Listening:	1
)

(AVCBBox.892
	InternalName:	"aCBVC"
	NextControl:	893
	ContentKind:	4
	Listening:	1
)

(Nil.893
)

(CPanel.894
	InternalName:	"aCP5"
	VisibleBorder:	1
	Listening:	1
)

(TextLabel.895
	InternalName:	"aTL4"
	Label:	"Sketch size:"
	Listening:	1
)

(AVCBBox.896
	InternalName:	"aCBVS"
	NextControl:	893
	ContentKind:	4
	Listening:	1
)

(TextLabel.897
	InternalName:	"aTL6"
	Label:	"Vertex size:"
	Listening:	1
)

(TextLabel.898
	InternalName:	"aTL11"
	Label:	"Vertex symbol:"
	Listening:	1
)

(RButn.899
	InternalName:	"aRBS1"
	Listening:	1
)

(TextLabel.900
	InternalName:	"aTL12"
	Label:	"End size:"
	Listening:	1
)

(AVCBBox.901
	InternalName:	"aCBVES"
	NextControl:	893
	ContentKind:	4
	Listening:	1
)

(AVCBBox.902
	InternalName:	"aCBVEC"
	NextControl:	893
	ContentKind:	4
	Listening:	1
)

(TextLabel.903
	InternalName:	"aTL16"
	Label:	"End color:"
	Listening:	1
)

(TextLabel.904
	InternalName:	"aTL15"
	Label:	"Cursor size:"
	Listening:	1
)

(AVCBBox.905
	InternalName:	"aCBCrS"
	NextControl:	893
	ContentKind:	4
	Listening:	1
)

(AVCBBox.906
	InternalName:	"aCBCrC"
	NextControl:	893
	ContentKind:	4
	Listening:	1
)

(TextLabel.907
	InternalName:	"aTL14"
	Label:	"Cursor color:"
	Listening:	1
)

(AVCBox.908
	InternalName:	"aCBCP"
	Listening:	1
	Label:	"Always to show a point of the cursor"
)

(Butn.909
	InternalName:	"aBC"
	Icon:	910
	Click:	"AVExtAdvEditor.OptionsClose"
)

(AVIcon.910
	Name:	"adveditcan.gif"
	Data:	4e442049 6d616765 00010024 000d0000 
	Data:	01d40202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 01020202 02020201 
	Data:	02020201 02010202 02010201 02020202 
	Data:	02010202 02020201 02020202 01020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020201 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02010101 01020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020201 02020202 01020202 02020202 
	Data:	02020201 02010102 02010201 02020201 
	Data:	02010202 02010201 02020202 02010101 
	Data:	01020202 01010101 02010202 02010202 
	Data:	01010102 02020101 01020201 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 01020202 02010202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020201 02020202 01020202 02020202 
	Data:	01010102 02010201 01020202 01010102 
	Data:	02020101 01020201 02020202 01020202 
	Data:	02020202 01010101 02010202 02010201 
	Data:	02020202 02010101 01010201 02020202 
	Data:	01020202 02010201 02020201 02010202 
	Data:	02010201 02020201 02010202 02010201 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020000 001000ff ffff0000 
	Data:	000002c0 c0c00000 00000002 0008000a 
	Data:	00200002 00000000 00000000 0000
)

(Butn.911
	InternalName:	"aBOk"
	Icon:	912
	Click:	"AVExtAdvEditor.OptionsDrSet"
)

(AVIcon.912
	Name:	"adveditok.gif"
	Data:	4e442049 6d616765 00010011 000d0000 
	Data:	00dd0202 02020202 02020202 02020202 
	Data:	02020202 02010202 02020102 02010201 
	Data:	02020202 02020102 02020201 02020102 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02010101 01020202 
	Data:	01020202 02020202 02010202 02020102 
	Data:	02010201 02020202 02020201 01010102 
	Data:	02020102 02020102 02020202 02020202 
	Data:	02020202 02020202 02020202 01020202 
	Data:	02010202 01020202 02020202 02010202 
	Data:	02020102 02010202 01020202 02020102 
	Data:	02020201 02020101 02020202 02020201 
	Data:	02020202 01020201 02020102 02020202 
	Data:	02020202 02020202 02020202 02020200 
	Data:	00001000 ffffff00 00000002 c0c0c000 
	Data:	00000000 02000800 0a002000 02000000 
	Data:	00000000 000000
)

(CPanel.913
	InternalName:	"aCP3"
	VisibleBorder:	1
	Listening:	1
)

(TextLabel.914
	InternalName:	"aTL2"
	Label:	"Sketch line:"
	Listening:	1
)

(AVCBBox.915
	InternalName:	"aCBSD"
	NextControl:	893
	ContentKind:	4
	Listening:	1
)

(AVCBBox.916
	InternalName:	"aCBSC"
	NextControl:	893
	ContentKind:	4
	Listening:	1
)

(AVCBBox.917
	InternalName:	"aCBSS"
	NextControl:	893
	ContentKind:	4
	Listening:	1
)

(CPanel.918
	InternalName:	"aCP2"
	VisibleBorder:	1
	Listening:	1
)

(AVCBBox.919
	InternalName:	"aCBSES"
	NextControl:	893
	ContentKind:	4
	Listening:	1
)

(AVCBBox.920
	InternalName:	"aCBSEC"
	NextControl:	893
	ContentKind:	4
	Listening:	1
)

(AVCBBox.921
	InternalName:	"aCBSED"
	NextControl:	893
	ContentKind:	4
	Listening:	1
)

(TextLabel.922
	InternalName:	"aTL1"
	Label:	"End line:"
	Listening:	1
)

(TextLabel.923
	InternalName:	"aTL25"
	Label:	"End size:"
	Listening:	1
)

(TextLabel.924
	InternalName:	"aTL3"
	Label:	"End color:"
	Listening:	1
)

(RectD.925
	Left:	9.00000000000000
	Top:	133.00000000000000
	Right:	76.00000000000000
	Bottom:	115.00000000000000
)

(RectD.926
	Left:	8.00000000000000
	Top:	192.00000000000000
	Right:	153.00000000000000
	Bottom:	169.00000000000000
)

(RectD.927
	Left:	143.00000000000000
	Top:	217.00000000000000
	Right:	160.00000000000000
	Bottom:	195.00000000000000
)

(RectD.928
	Left:	204.00000000000000
	Top:	217.00000000000000
	Right:	221.00000000000000
	Bottom:	195.00000000000000
)

(RectD.929
	Left:	267.00000000000000
	Top:	217.00000000000000
	Right:	283.00000000000000
	Bottom:	195.00000000000000
)

(RectD.930
	Left:	9.00000000000000
	Top:	245.00000000000000
	Right:	71.00000000000000
	Bottom:	229.00000000000000
)

(RectD.931
	Left:	70.00000000000000
	Top:	493.00000000000000
	Right:	169.00000000000000
	Bottom:	230.00000000000000
)

(RectD.932
	Left:	8.00000000000000
	Top:	284.00000000000000
	Right:	336.00000000000000
	Bottom:	278.00000000000000
)

(RectD.933
	Left:	9.00000000000000
	Top:	155.00000000000000
	Right:	72.00000000000000
	Bottom:	138.00000000000000
)

(RectD.934
	Left:	70.00000000000000
	Top:	514.00000000000000
	Right:	169.00000000000000
	Bottom:	255.00000000000000
)

(RectD.935
	Left:	9.00000000000000
	Top:	270.00000000000000
	Right:	68.00000000000000
	Bottom:	253.00000000000000
)

(RectD.936
	Left:	9.00000000000000
	Top:	217.00000000000000
	Right:	85.00000000000000
	Bottom:	199.00000000000000
)

(RectD.937
	Left:	81.00000000000000
	Top:	217.00000000000000
	Right:	99.00000000000000
	Bottom:	195.00000000000000
)

(RectD.938
	Left:	181.00000000000000
	Top:	271.00000000000000
	Right:	240.00000000000000
	Bottom:	254.00000000000000
)

(RectD.939
	Left:	232.00000000000000
	Top:	505.00000000000000
	Right:	330.00000000000000
	Bottom:	255.00000000000000
)

(RectD.940
	Left:	232.00000000000000
	Top:	462.00000000000000
	Right:	330.00000000000000
	Bottom:	229.00000000000000
)

(RectD.941
	Left:	181.00000000000000
	Top:	246.00000000000000
	Right:	244.00000000000000
	Bottom:	229.00000000000000
)

(RectD.942
	Left:	12.00000000000000
	Top:	75.00000000000000
	Right:	75.00000000000000
	Bottom:	59.00000000000000
)

(RectD.943
	Left:	71.00000000000000
	Top:	260.00000000000000
	Right:	170.00000000000000
	Bottom:	59.00000000000000
)

(RectD.944
	Left:	71.00000000000000
	Top:	259.00000000000000
	Right:	170.00000000000000
	Bottom:	34.00000000000000
)

(RectD.945
	Left:	11.00000000000000
	Top:	53.00000000000000
	Right:	78.00000000000000
	Bottom:	36.00000000000000
)

(RectD.946
	Left:	8.00000000000000
	Top:	32.00000000000000
	Right:	208.00000000000000
	Bottom:	9.00000000000000
)

(RectD.947
	Left:	281.00000000000000
	Top:	319.00000000000000
	Right:	331.00000000000000
	Bottom:	291.00000000000000
)

(RectD.948
	Left:	223.00000000000000
	Top:	319.00000000000000
	Right:	273.00000000000000
	Bottom:	291.00000000000000
)

(RectD.949
	Left:	6.00000000000000
	Top:	87.00000000000000
	Right:	334.00000000000000
	Bottom:	82.00000000000000
)

(RectD.950
	Left:	9.00000000000000
	Top:	111.00000000000000
	Right:	76.00000000000000
	Bottom:	94.00000000000000
)

(RectD.951
	Left:	73.00000000000000
	Top:	213.00000000000000
	Right:	172.00000000000000
	Bottom:	92.00000000000000
)

(RectD.952
	Left:	73.00000000000000
	Top:	328.00000000000000
	Right:	172.00000000000000
	Bottom:	113.00000000000000
)

(RectD.953
	Left:	73.00000000000000
	Top:	372.00000000000000
	Right:	172.00000000000000
	Bottom:	138.00000000000000
)

(RectD.954
	Left:	6.00000000000000
	Top:	164.00000000000000
	Right:	334.00000000000000
	Bottom:	158.00000000000000
)

(RectD.955
	Left:	233.00000000000000
	Top:	367.00000000000000
	Right:	333.00000000000000
	Bottom:	139.00000000000000
)

(RectD.956
	Left:	233.00000000000000
	Top:	301.00000000000000
	Right:	333.00000000000000
	Bottom:	114.00000000000000
)

(RectD.957
	Left:	233.00000000000000
	Top:	214.00000000000000
	Right:	333.00000000000000
	Bottom:	93.00000000000000
)

(RectD.958
	Left:	184.00000000000000
	Top:	112.00000000000000
	Right:	230.00000000000000
	Bottom:	95.00000000000000
)

(RectD.959
	Left:	186.00000000000000
	Top:	156.00000000000000
	Right:	232.00000000000000
	Bottom:	139.00000000000000
)

(RectD.960
	Left:	184.00000000000000
	Top:	133.00000000000000
	Right:	232.00000000000000
	Bottom:	116.00000000000000
)

(RectD.961
	Left:	4.00000000000000
	Top:	334.00000000000000
	Right:	343.00000000000000
	Bottom:	4.00000000000000
)

(Nil.962
)

(RectD.963
	Left:	0.89583333333333
	Top:	7.00000000000000
	Right:	4.47916666666667
	Bottom:	3.50000000000000
)

(SEd.964
	Name:	"AVExtAdvEditor.OptionsDrOpen"
	CreationDate:	"7 Май 2004 г. 23:40:50"
	GUIName:	"Script"
	Win:	965
	CSMgr:	966
	DocExts:	967
	Source:	"aDil = av.FindDialog(\"AVExtAdvEditor.OptionsDr\")\nif (_AVExtAdvEditorShowCurP) then\n  aDil.FindByName(\"aCBCP\").SetSelected(true)\nelse\n  aDil.FindByName(\"aCBCP\").SetSelected(false)\nend\naDil.FindByName(\"aCBSD\").DefineFromList({\"Normal\",\"Large Dash\",\"Dash\",\"Small Dash\"})\naDil.FindByName(\"aCBSD\").FindByValue(_AVExtAdvEditorScratchLD)\naDil.FindByName(\"aCBSD\").SelectCurrent\naDil.FindByName(\"aCBSC\").DefineFromList({\"Black\",\"Blue\",\"Cyan\",\"Gray\",\"Green\",\"Magenta\",\"Red\",\"White\",\"Yellow\"})\naDil.FindByName(\"aCBSC\").Find
ByValue(_AVExtAdvEditorScratchLC)\naDil.FindByName(\"aCBSC\").SelectCurrent\naDil.FindByName(\"aCBSS\").DefineFromList({0.1,0.5,1,1.5,2,3,4,5,6,7,8,9,10})\naDil.FindByName(\"aCBSS\").FindByValue(_AVExtAdvEditorScratchLS)\naDil.FindByName(\"aCBSS\").SelectCurrent\naDil.FindByName(\"aCBSED\").DefineFromList({\"Normal\",\"Large Dash\",\"Dash\",\"Small Dash\"})\naDil.FindByName(\"aCBSED\").FindByValue(_AVExtAdvEditorScratchLED)\naDil.FindByName(\"aCBSED\").SelectCurrent\naDil.FindByName(\"aCBSEC\").DefineFromList({\"Black\",\"Blue\",\"Cyan\",\"Gray\"
,\"Green\",\"Magenta\",\"Red\",\"White\",\"Yellow\"})\naDil.FindByName(\"aCBSEC\").FindByValue(_AVExtAdvEditorScratchLEC)\naDil.FindByName(\"aCBSEC\").SelectCurrent\naDil.FindByName(\"aCBSES\").DefineFromList({0.1,0.5,1,1.5,2,3,4,5,6,7,8,9,10})\naDil.FindByName(\"aCBSES\").FindByValue(_AVExtAdvEditorScratchLES)\naDil.FindByName(\"aCBSES\").SelectCurrent\naDil.FindByName(\"aCBCrC\").DefineFromList({\"Black\",\"Blue\",\"Cyan\",\"Gray\",\"Green\",\"Magenta\",\"Red\",\"White\",\"Yellow\"})\naDil.FindByName(\"aCBCrC\").FindByValue(_AVExtAdvEditorScratchPC)\naDi
l.FindByName(\"aCBCrC\").SelectCurrent\naDil.FindByName(\"aCBCrS\").DefineFromList({4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,30,36,40,50,60,72})\naDil.FindByName(\"aCBCrS\").FindByValue(_AVExtAdvEditorScratchPS)\naDil.FindByName(\"aCBCrS\").SelectCurrent\nif (_AVExtAdvEditorShowVer) then\n  aDil.FindByName(\"aChBV\").SetSelected(true)\nelse\n  aDil.FindByName(\"aChBV\").SetSelected(false)\nend\naDil.FindByName(\"aCBVC\").DefineFromList({\"Black\",\"Blue\",\"Cyan\",\"Gray\",\"Green\",\"Magenta\",\"Red\",\"White\",\"Yellow\"})\naDil.F
indByName(\"aCBVC\").FindByValue(_AVExtAdvEditorVertexC)\naDil.FindByName(\"aCBVC\").SelectCurrent\naDil.FindByName(\"aCBVS\").DefineFromList({4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,30,36,40,50,60,72})\naDil.FindByName(\"aCBVS\").FindByValue(_AVExtAdvEditorVertexS)\naDil.FindByName(\"aCBVS\").SelectCurrent\naDil.FindByName(\"aCBVEC\").DefineFromList({\"Black\",\"Blue\",\"Cyan\",\"Gray\",\"Green\",\"Magenta\",\"Red\",\"White\",\"Yellow\"})\naDil.FindByName(\"aCBVEC\").FindByValue(_AVExtAdvEditorVertexEndC)\naDil.FindByName(\"aCBV
EC\").SelectCurrent\naDil.FindByName(\"aCBVES\").DefineFromList({4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,30,36,40,50,60,72})\naDil.FindByName(\"aCBVES\").FindByValue(_AVExtAdvEditorVertexEndS)\naDil.FindByName(\"aCBVES\").SelectCurrent\nif (_AVExtAdvEditorVertexSb = 4) then\n  aDil.FindByName(\"aRBS4\").Select\nelseif (_AVExtAdvEditorVertexSb = 3) then\n  aDil.FindByName(\"aRBS3\").Select\nelseif (_AVExtAdvEditorVertexSb = 2) then\n  aDil.FindByName(\"aRBS2\").Select\nelse\n  aDil.FindByName(\"aRBS1\").Select\nend\naD
il.Open\n"
	SearchStr:	"NotEditNumV"
)

(DocWin.965
	Owner:	964
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.966
)

(DocAct.967
	Doc:	964
)

(SEd.968
	Name:	"AVExtAdvEditor.OptionsDrSet"
	CreationDate:	"7 Май 2004 г. 23:44:45"
	GUIName:	"Script"
	Win:	969
	CSMgr:	970
	DocExts:	971
	Source:	"aDil = self.GEtdialog\nif (aDil.FindByName(\"aCBCP\").IsSelected) then\n  _AVExtAdvEditorShowCurP = true\nelse\n  _AVExtAdvEditorShowCurP = false\nend\n_AVExtAdvEditorScratchLC = aDil.FindByName(\"aCBSC\").GetCurrentValue\nif (aDil.FindByName(\"aCBSD\").GetCurrentValue = \"Normal\") then\n  _AVExtAdvEditorScratchLD = \"Normal\"\n  _AVExtAdvEditorScratchL.SetPattern({})\nelseif (aDil.FindByName(\"aCBSD\").GetCurrentValue = \"Large Dash\") then\n  _AVExtAdvEditorScratchLD = \"Large Dash\"\n  _AVExtAdvEditorScratchL.SetPattern({7,7})\nels
eif (aDil.FindByName(\"aCBSD\").GetCurrentValue = \"Dash\") then\n  _AVExtAdvEditorScratchLD = \"Dash\"\n  _AVExtAdvEditorScratchL.SetPattern({4,7})\nelseif (aDil.FindByName(\"aCBSD\").GetCurrentValue = \"Small Dash\") then\n  _AVExtAdvEditorScratchLD = \"Small Dash\"\n  _AVExtAdvEditorScratchL.SetPattern({4,4})\nend\n_AVExtAdvEditorScratchLS = aDil.FindByName(\"aCBSS\").GetCurrentValue\naScratchLC = av.Run(\"AVExtAdvEditor.ColorSet\",_AVExtAdvEditorScratchLC.Clone)\n_AVExtAdvEditorScratchL.SetColor(aScratchLC)\n_AVExtAdvEditorScrat
chL.SetSize(_AVExtAdvEditorScratchLS)\n_AVExtAdvEditorScratchLEC = aDil.FindByName(\"aCBSEC\").GetCurrentValue\nif (aDil.FindByName(\"aCBSED\").GetCurrentValue = \"Normal\") then\n  _AVExtAdvEditorScratchLED = \"Normal\"\n  _AVExtAdvEditorScratchLE.SetPattern({})\nelseif (aDil.FindByName(\"aCBSED\").GetCurrentValue = \"Large Dash\") then\n  _AVExtAdvEditorScratchLED = \"Large Dash\"\n  _AVExtAdvEditorScratchLE.SetPattern({7,7})\nelseif (aDil.FindByName(\"aCBSED\").GetCurrentValue = \"Dash\") then\n  _AVExtAdvEditorScratchLED = \"Dash\"
\n  _AVExtAdvEditorScratchLE.SetPattern({4,7})\nelseif (aDil.FindByName(\"aCBSED\").GetCurrentValue = \"Small Dash\") then\n  _AVExtAdvEditorScratchLED = \"Small Dash\"\n  _AVExtAdvEditorScratchLE.SetPattern({4,4})\nend\n_AVExtAdvEditorScratchLES = aDil.FindByName(\"aCBSES\").GetCurrentValue\naScratchLEC = av.Run(\"AVExtAdvEditor.ColorSet\",_AVExtAdvEditorScratchLEC.Clone)\n_AVExtAdvEditorScratchLE.SetColor(aScratchLEC)\n_AVExtAdvEditorScratchLE.SetSize(_AVExtAdvEditorScratchLES)\n_AVExtAdvEditorScratchPC = aDil.FindByName(\"aC
BCrC\").GetCurrentValue\n_AVExtAdvEditorScratchPS = aDil.FindByName(\"aCBCrS\").GetCurrentValue\n_AVExtAdvEditorScratchP.SetSize(_AVExtAdvEditorScratchPS)\naScratchPC = av.Run(\"AVExtAdvEditor.ColorSet\",_AVExtAdvEditorScratchPC.Clone)\n_AVExtAdvEditorScratchP.SetColor(aScratchPC)\n_AVExtAdvEditorScratchP2.SetSize(_AVExtAdvEditorScratchPS)\n_AVExtAdvEditorScratchP2.SetColor(aScratchPC)\n_AVExtAdvEditorVertexC = aDil.FindByName(\"aCBVC\").GetCurrentValue\n_AVExtAdvEditorVertexS = aDil.FindByName(\"aCBVS\").GetCurrentValue\n_A
VExtAdvEditorVertexEndC = aDil.FindByName(\"aCBVEC\").GetCurrentValue\n_AVExtAdvEditorVertexEndS = aDil.FindByName(\"aCBVES\").GetCurrentValue\n_AVExtAdvEditorVertex.SetSize(_AVExtAdvEditorVertexS)\n_AVExtAdvEditorVertexArc.SetSize(_AVExtAdvEditorVertexS)\naVertexC = av.Run(\"AVExtAdvEditor.ColorSet\",_AVExtAdvEditorVertexC.Clone)\n_AVExtAdvEditorVertex.SetColor(aVertexC)\n_AVExtAdvEditorVertexArc.SetColor(aVertexC)\n_AVExtAdvEditorVertexEnd.SetSize(_AVExtAdvEditorVertexEndS)\naVertexEndC = av.Run(\"AVExtAdvEditor.ColorSe
t\",_AVExtAdvEditorVertexEndC.Clone)\n_AVExtAdvEditorVertexEnd.SetColor(aVertexEndC)\nif (aDil.FindByName(\"aRBS4\").IsSelected) then\n  _AVExtAdvEditorVertexSb = 4\n  _AVExtAdvEditorVertex.SetCharacter(83)\n  _AVExtAdvEditorVertexArc.SetCharacter(71)\n  _AVExtAdvEditorVertexEnd.SetCharacter(83)\nelseif (aDil.FindByName(\"aRBS3\").IsSelected) then\n  _AVExtAdvEditorVertexSb = 3\n  _AVExtAdvEditorVertex.SetCharacter(85)\n  _AVExtAdvEditorVertexArc.SetCharacter(73)\n  _AVExtAdvEditorVertexEnd.SetCharacter(85)\nelseif (aDil.Fi
ndByName(\"aRBS2\").IsSelected) then\n  _AVExtAdvEditorVertexSb = 2\n  _AVExtAdvEditorVertex.SetCharacter(35)\n  _AVExtAdvEditorVertexArc.SetCharacter(71)\n  _AVExtAdvEditorVertexEnd.SetCharacter(35)\nelse\n  _AVExtAdvEditorVertexSb = 1\n  _AVExtAdvEditorVertex.SetCharacter(37)\n  _AVExtAdvEditorVertexArc.SetCharacter(73)\n  _AVExtAdvEditorVertexEnd.SetCharacter(37)\nend\nagrlist = _AVExtAdvEditorView.getgraphics\nif (aDil.FindByName(\"aChBV\").IsSelected) then\n  _AVExtAdvEditorShowVer = true\n  if (_AVExtAdvEditorScratchLi
st <> nil) then\n    aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorVertex\")\n    if (aListVertex <> nil) then\n      for each iaListVertex in aListVertex\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexEnd = agrlist.FindAllByName(\"AVExtAdvEditorVertexEnd\")\n    if (aListVertexEnd <> nil) then\n      for each iaListVertexEnd in aListVertexEnd\n        agrlist.RemoveGraphic(iaListVertexEnd)\n      end\n    end\n    aListVertexCurve = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurve\")\n
    if (aListVertexCurve <> nil) then\n      for each iaListVertex in aListVertexCurve\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexCurveP1 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP1\")\n    if (aListVertexCurveP1 <> nil) then\n      for each iaListVertex in aListVertexCurveP1\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexCurveP2 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP2\")\n    if (aListVertexCurveP2 <> nil) then\n      for each i
aListVertex in aListVertexCurveP2\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aNum = _AVExtAdvEditorScratchList.Count - 1\n    if (_AVExtAdvEditorScratchList.Get(aNum).Get(0) = nil) then\n      _AVExtAdvEditorScratchList.Remove(aNum)\n    end\n    aNum = _AVExtAdvEditorScratchList.Count - 1\n    iSLN = 0\n    for each iSL in _AVExtAdvEditorScratchList\n      if (iSLN <> aNum) then\n        if (iSL.Get(1) = \"line\") then\n          aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n          aVertex.S
etName(\"AVExtAdvEditorVertex\")\n          aVertex.SetSymbol(_AVExtAdvEditorVertex)\n          aVertex.SetObjectTag(iSLN)\n          agrlist.Add(aVertex)\n        elseif (iSL.Get(1) = \"Stream\") then\n          aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n          aVertex.SetName(\"AVExtAdvEditorVertex\")\n          aVertex.SetSymbol(_AVExtAdvEditorVertex)\n          aVertex.SetObjectTag(iSLN)\n          agrlist.Add(aVertex)\n        elseif (iSL.Get(1) = \"Curve\") then\n          aVertex = GraphicShape.Make(iSL.Get(0).C
lone)\n          aVertex.SetName(\"AVExtAdvEditorVertexCurve\")\n          aVertex.SetSymbol(_AVExtAdvEditorVertex)\n          aVertex.SetObjectTag(iSLN)\n          agrlist.Add(aVertex)\n          aVertexP1 = GraphicShape.Make(iSL.Get(2).Clone)\n          aVertexP1.SetName(\"AVExtAdvEditorVertexCurveP1\")\n          aVertexP1.SetSymbol(_AVExtAdvEditorVertexArc)\n          aVertexP1.SetObjectTag(iSLN)\n          agrlist.Add(aVertexP1)\n          aVertexP2 = GraphicShape.Make(iSL.Get(3).Clone)\n          aVertexP2.SetName(\"
AVExtAdvEditorVertexCurveP2\")\n          aVertexP2.SetSymbol(_AVExtAdvEditorVertexArc)\n          aVertexP2.SetObjectTag(iSLN)\n          agrlist.Add(aVertexP2)\n        end\n      else\n        if (iSL.Get(1) = \"line\") then\n          aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n          aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n          aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n          aVertex.SetObjectTag(iSLN)\n          agrlist.Add(aVertex)\n        elseif (iSL.Get(1) = \"Stream\") then\n          aVertex 
= GraphicShape.Make(iSL.Get(0).Clone)\n          aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n          aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n          aVertex.SetObjectTag(iSLN)\n          agrlist.Add(aVertex)\n        elseif (iSL.Get(1) = \"Curve\") then\n          aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n          aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n          aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n          aVertex.SetObjectTag(iSLN)\n          agrlist.Add(aVertex)\n          aVertexP1 = Gra
phicShape.Make(iSL.Get(2).Clone)\n          aVertexP1.SetName(\"AVExtAdvEditorVertexCurveP1\")\n          aVertexP1.SetSymbol(_AVExtAdvEditorVertexArc)\n          aVertexP1.SetObjectTag(iSLN)\n          agrlist.Add(aVertexP1)\n          aVertexP2 = GraphicShape.Make(iSL.Get(3).Clone)\n          aVertexP2.SetName(\"AVExtAdvEditorVertexCurveP2\")\n          aVertexP2.SetSymbol(_AVExtAdvEditorVertexArc)\n          aVertexP2.SetObjectTag(iSLN)\n          agrlist.Add(aVertexP2)\n        end\n      end\n      iSLN = iSLN + 1\n   
 end\n  end\nelse\n  _AVExtAdvEditorShowVer = false\n  if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEVertex\").IsSelected.Not) then\n    aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorVertex\")\n    if (aListVertex <> nil) then\n      for each iaListVertex in aListVertex\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexEnd = agrlist.FindAllByName(\"AVExtAdvEditorVertexEnd\")\n    if (aListVertexEnd <> nil) then\n      for each iaListVertexEnd in aListVertexEnd\n   
     agrlist.RemoveGraphic(iaListVertexEnd)\n      end\n    end\n    aListVertexCurve = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurve\")\n    if (aListVertexCurve <> nil) then\n      for each iaListVertex in aListVertexCurve\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexCurveP1 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP1\")\n    if (aListVertexCurveP1 <> nil) then\n      for each iaListVertex in aListVertexCurveP1\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    en
d\n    aListVertexCurveP2 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP2\")\n    if (aListVertexCurveP2 <> nil) then\n      for each iaListVertex in aListVertexCurveP2\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n  end\nend\naDil.CLose"
	SearchStr:	"NotEditNumV"
)

(DocWin.969
	Owner:	968
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.970
)

(DocAct.971
	Doc:	968
)

(DEd.972
	Name:	"AVExtAdvEditor.OptionsGen"
	CreationDate:	"4 Июль 2004 г. 23:12:11"
	GUIName:	"DialogEditor"
	Win:	973
	CSMgr:	974
	DocExts:	976
	DocExts:	977
	Graphics:	978
	Dpy:	1020
	Dialog:	1023
	DialogExtent:	1058
	Compiled:	1
)

(DocWin.973
	Owner:	972
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.974
	Client:	975
)

(CSClient.975
	Client:	976
	ReqName:	"ClientNfy"
)

(PanMgr.976
	Doc:	972
)

(DocAct.977
	Doc:	972
)

(GList.978
	Child:	979
	Child:	982
	Child:	985
	Child:	988
	Child:	991
	Child:	994
	Child:	997
	Child:	1000
	Child:	1003
	Child:	1006
	Child:	1009
	Child:	1012
	Child:	1016
	Dpy:	1020
	FormatNumb:	1022
)

(GCtrl.979
	Name:	"aCP1"
	Bounds:	980
	ControlConstraints:	0x55
	Control:	981
	Editable:	1
)

(RectD.980
	Left:	0.35416666666667
	Top:	6.97916666666667
	Right:	5.45833333333333
	Bottom:	5.35416666666667
)

(CPanel.981
	InternalName:	"aCP1"
	UseGraphicNfy:	1
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(GCtrl.982
	Name:	"aTL2"
	Bounds:	983
	Control:	984
	Editable:	1
)

(RectD.983
	Left:	0.45833333333333
	Top:	6.20833333333333
	Right:	0.83333333333333
	Bottom:	6.03125000000000
)

(TextLabel.984
	InternalName:	"aTL2"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"Color:"
	Listening:	1
)

(GCtrl.985
	Name:	"aTL3"
	Bounds:	986
	Control:	987
	Editable:	1
)

(RectD.986
	Left:	1.96875000000000
	Top:	6.20833333333333
	Right:	2.50000000000000
	Bottom:	6.03125000000000
)

(TextLabel.987
	InternalName:	"aTL3"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"Line size:"
	Listening:	1
)

(GCtrl.988
	Name:	"aCP2"
	Bounds:	989
	Control:	990
	Editable:	1
)

(RectD.989
	Left:	0.42708333333333
	Top:	5.90625000000000
	Right:	5.36458333333333
	Bottom:	5.85416666666667
)

(CPanel.990
	InternalName:	"aCP2"
	UseGraphicNfy:	1
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(GCtrl.991
	Name:	"aCBC"
	Bounds:	992
	Control:	993
	Editable:	1
)

(RectD.992
	Left:	0.83333333333333
	Top:	6.19791666666667
	Right:	1.87500000000000
	Bottom:	3.78125000000000
)

(AVCBBox.993
	InternalName:	"aCBC"
	UseGraphicNfy:	1
	NextControl:	893
	ContentKind:	4
	Constraints:	0x55
	Listening:	1
)

(GCtrl.994
	Name:	"aCBL"
	Bounds:	995
	Control:	996
	Editable:	1
)

(RectD.995
	Left:	2.52083333333333
	Top:	6.19791666666667
	Right:	3.56250000000000
	Bottom:	3.65625000000000
)

(AVCBBox.996
	InternalName:	"aCBL"
	UseGraphicNfy:	1
	NextControl:	893
	ContentKind:	4
	Constraints:	0x55
	Listening:	1
)

(GCtrl.997
	Name:	"aTL"
	Bounds:	998
	Control:	999
	Editable:	1
)

(RectD.998
	Left:	0.45833333333333
	Top:	6.44791666666667
	Right:	1.29166666666667
	Bottom:	6.27083333333333
)

(TextLabel.999
	InternalName:	"aTL"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"Selection style"
	Listening:	1
)

(GCtrl.1000
	Name:	"aCBP"
	Bounds:	1001
	Control:	1002
	Editable:	1
)

(RectD.1001
	Left:	4.30208333333333
	Top:	6.19791666666667
	Right:	5.34375000000000
	Bottom:	3.65625000000000
)

(AVCBBox.1002
	InternalName:	"aCBP"
	UseGraphicNfy:	1
	NextControl:	893
	ContentKind:	4
	Constraints:	0x55
	Listening:	1
)

(GCtrl.1003
	Name:	"aTL1"
	Bounds:	1004
	Control:	1005
	Editable:	1
)

(RectD.1004
	Left:	3.67708333333333
	Top:	6.20833333333333
	Right:	4.20833333333333
	Bottom:	6.03125000000000
)

(TextLabel.1005
	InternalName:	"aTL1"
	UseGraphicNfy:	1
	Constraints:	0x55
	Label:	"Point size:"
	Listening:	1
)

(GCtrl.1006
	Name:	"aCP"
	Bounds:	1007
	Control:	1008
	Editable:	1
)

(RectD.1007
	Left:	0.42708333333333
	Top:	6.58333333333333
	Right:	5.36458333333333
	Bottom:	6.53125000000000
)

(CPanel.1008
	InternalName:	"aCP"
	UseGraphicNfy:	1
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(GCtrl.1009
	Name:	"aChBA"
	Bounds:	1010
	ControlConstraints:	0x55
	Control:	1011
	Editable:	1
)

(RectD.1010
	Left:	0.46875000000000
	Top:	6.87500000000000
	Right:	2.97916666666667
	Bottom:	6.67708333333333
)

(AVCBox.1011
	InternalName:	"aChBA"
	UseGraphicNfy:	1
	Listening:	1
	Label:	"Ask before save edits to the source shapefile"
	Constraints:	0x55
)

(GCtrl.1012
	Name:	"aBtOk"
	Bounds:	1013
	Control:	1014
	Editable:	1
)

(RectD.1013
	Left:	4.25000000000000
	Top:	5.78125000000000
	Right:	4.77083333333333
	Bottom:	5.50000000000000
)

(Butn.1014
	InternalName:	"aBtOk"
	UseGraphicNfy:	1
	Icon:	1015
	Click:	"AVExtAdvEditor.OptionsGenSet"
)

(AVIcon.1015
	Name:	"adveditok.gif"
	Data:	4e442049 6d616765 00010011 000d0000 
	Data:	00dd0202 02020202 02020202 02020202 
	Data:	02020202 02010202 02020102 02010201 
	Data:	02020202 02020102 02020201 02020102 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02010101 01020202 
	Data:	01020202 02020202 02010202 02020102 
	Data:	02010201 02020202 02020201 01010102 
	Data:	02020102 02020102 02020202 02020202 
	Data:	02020202 02020202 02020202 01020202 
	Data:	02010202 01020202 02020202 02010202 
	Data:	02020102 02010202 01020202 02020102 
	Data:	02020201 02020101 02020202 02020201 
	Data:	02020202 01020201 02020102 02020202 
	Data:	02020202 02020202 02020202 02020200 
	Data:	00001000 ffffff00 00000002 c0c0c000 
	Data:	00000000 02000800 0a002000 02000000 
	Data:	00000000 000000
)

(GCtrl.1016
	Name:	"aBtC"
	Bounds:	1017
	Control:	1018
	Editable:	1
)

(RectD.1017
	Left:	4.85416666666667
	Top:	5.78125000000000
	Right:	5.37500000000000
	Bottom:	5.50000000000000
)

(Butn.1018
	InternalName:	"aBtC"
	UseGraphicNfy:	1
	Icon:	1019
	Click:	"AVExtAdvEditor.OptionsClose"
)

(AVIcon.1019
	Name:	"adveditcan.gif"
	Data:	4e442049 6d616765 00010024 000d0000 
	Data:	01d40202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 01020202 02020201 
	Data:	02020201 02010202 02010201 02020202 
	Data:	02010202 02020201 02020202 01020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020201 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02010101 01020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020201 02020202 01020202 02020202 
	Data:	02020201 02010102 02010201 02020201 
	Data:	02010202 02010201 02020202 02010101 
	Data:	01020202 01010101 02010202 02010202 
	Data:	01010102 02020101 01020201 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 01020202 02010202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020201 02020202 01020202 02020202 
	Data:	01010102 02010201 01020202 01010102 
	Data:	02020101 01020201 02020202 01020202 
	Data:	02020202 01010101 02010202 02010201 
	Data:	02020202 02010101 01010201 02020202 
	Data:	01020202 02010201 02020201 02010202 
	Data:	02010201 02020201 02010202 02010201 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020000 001000ff ffff0000 
	Data:	000002c0 c0c00000 00000002 0008000a 
	Data:	00200002 00000000 00000000 0000
)

(PageDpy.1020
	Top:	7.43750000000000
	Right:	12.03125000000000
	ReportUnits:	1
	Units:	1
	Scale:	1021
	ZoomRight:	12.03125000000000
	ZoomTop:	7.43750000000000
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.1021
	N:	0.08311688311688
)

(Numb.1022
)

(AVDLog.1023
	Name:	"AVExtAdvEditor.OptionsGen"
	X:	31
	Y:	61
	W:	499
	H:	164
	ConstrainedControlNames:	1024
	ConstrainedControlNames:	1025
	Constraints:	1026
	Constraints:	1027
	Server:	32
	ControlPanel:	1028
	Title:	"General"
	EscapeEnabled:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	Close:	"AVExtAdvEditor.DialogClose"
	DefaultButton:	1057
)

(AVStr.1024
	S:	"aBtOk"
)

(AVStr.1025
	S:	"aBtC"
)

(Numb.1026
)

(Numb.1027
)

(CPanel.1028
	Child:	1029
	ResBox:	1056
	Listening:	1
)

(CPanel.1029
	InternalName:	"aCP1"
	Child:	1030
	Child:	1031
	Child:	1032
	Child:	1033
	Child:	1034
	Child:	1035
	Child:	1036
	Child:	1037
	Child:	1038
	Child:	1039
	Child:	1040
	Child:	1042
	Constraints:	0x55
	ResBox:	1044
	ResBox:	1045
	ResBox:	1046
	ResBox:	1047
	ResBox:	1048
	ResBox:	1049
	ResBox:	1050
	ResBox:	1051
	ResBox:	1052
	ResBox:	1053
	ResBox:	1054
	ResBox:	1055
	VisibleBorder:	1
	Listening:	1
)

(TextLabel.1030
	InternalName:	"aTL2"
	Label:	"Color:"
	Listening:	1
)

(TextLabel.1031
	InternalName:	"aTL3"
	Label:	"Line size:"
	Listening:	1
)

(CPanel.1032
	InternalName:	"aCP2"
	VisibleBorder:	1
	Listening:	1
)

(AVCBBox.1033
	InternalName:	"aCBC"
	NextControl:	893
	ContentKind:	4
	Listening:	1
)

(AVCBBox.1034
	InternalName:	"aCBL"
	NextControl:	893
	ContentKind:	4
	Listening:	1
)

(TextLabel.1035
	InternalName:	"aTL"
	Label:	"Selection style"
	Listening:	1
)

(AVCBBox.1036
	InternalName:	"aCBP"
	NextControl:	893
	ContentKind:	4
	Listening:	1
)

(TextLabel.1037
	InternalName:	"aTL1"
	Label:	"Point size:"
	Listening:	1
)

(CPanel.1038
	InternalName:	"aCP"
	VisibleBorder:	1
	Listening:	1
)

(AVCBox.1039
	InternalName:	"aChBA"
	Listening:	1
	Label:	"Ask before save edits to the source shapefile"
	Constraints:	0x55
)

(Butn.1040
	InternalName:	"aBtOk"
	Icon:	1041
	Click:	"AVExtAdvEditor.OptionsGenSet"
)

(AVIcon.1041
	Name:	"adveditok.gif"
	Data:	4e442049 6d616765 00010011 000d0000 
	Data:	00dd0202 02020202 02020202 02020202 
	Data:	02020202 02010202 02020102 02010201 
	Data:	02020202 02020102 02020201 02020102 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02010101 01020202 
	Data:	01020202 02020202 02010202 02020102 
	Data:	02010201 02020202 02020201 01010102 
	Data:	02020102 02020102 02020202 02020202 
	Data:	02020202 02020202 02020202 01020202 
	Data:	02010202 01020202 02020202 02010202 
	Data:	02020102 02010202 01020202 02020102 
	Data:	02020201 02020101 02020202 02020201 
	Data:	02020202 01020201 02020102 02020202 
	Data:	02020202 02020202 02020202 02020200 
	Data:	00001000 ffffff00 00000002 c0c0c000 
	Data:	00000000 02000800 0a002000 02000000 
	Data:	00000000 000000
)

(Butn.1042
	InternalName:	"aBtC"
	Icon:	1043
	Click:	"AVExtAdvEditor.OptionsClose"
)

(AVIcon.1043
	Name:	"adveditcan.gif"
	Data:	4e442049 6d616765 00010024 000d0000 
	Data:	01d40202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 01020202 02020201 
	Data:	02020201 02010202 02010201 02020202 
	Data:	02010202 02020201 02020202 01020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020201 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02010101 01020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020201 02020202 01020202 02020202 
	Data:	02020201 02010102 02010201 02020201 
	Data:	02010202 02010201 02020202 02010101 
	Data:	01020202 01010101 02010202 02010202 
	Data:	01010102 02020101 01020201 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 01020202 02010202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020201 02020202 01020202 02020202 
	Data:	01010102 02010201 01020202 01010102 
	Data:	02020101 01020201 02020202 01020202 
	Data:	02020202 01010101 02010202 02010201 
	Data:	02020202 02010101 01010201 02020202 
	Data:	01020202 02010201 02020201 02010202 
	Data:	02010201 02020201 02010202 02010201 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020000 001000ff ffff0000 
	Data:	000002c0 c0c00000 00000002 0008000a 
	Data:	00200002 00000000 00000000 0000
)

(RectD.1044
	Left:	10.00000000000000
	Top:	91.00000000000000
	Right:	46.00000000000000
	Bottom:	74.00000000000000
)

(RectD.1045
	Left:	155.00000000000000
	Top:	91.00000000000000
	Right:	206.00000000000000
	Bottom:	74.00000000000000
)

(RectD.1046
	Left:	7.00000000000000
	Top:	108.00000000000000
	Right:	481.00000000000000
	Bottom:	103.00000000000000
)

(RectD.1047
	Left:	46.00000000000000
	Top:	307.00000000000000
	Right:	146.00000000000000
	Bottom:	75.00000000000000
)

(RectD.1048
	Left:	208.00000000000000
	Top:	319.00000000000000
	Right:	308.00000000000000
	Bottom:	75.00000000000000
)

(RectD.1049
	Left:	10.00000000000000
	Top:	68.00000000000000
	Right:	90.00000000000000
	Bottom:	51.00000000000000
)

(RectD.1050
	Left:	379.00000000000000
	Top:	319.00000000000000
	Right:	479.00000000000000
	Bottom:	75.00000000000000
)

(RectD.1051
	Left:	319.00000000000000
	Top:	91.00000000000000
	Right:	370.00000000000000
	Bottom:	74.00000000000000
)

(RectD.1052
	Left:	7.00000000000000
	Top:	43.00000000000000
	Right:	481.00000000000000
	Bottom:	38.00000000000000
)

(RectD.1053
	Left:	11.00000000000000
	Top:	29.00000000000000
	Right:	252.00000000000000
	Bottom:	10.00000000000000
)

(RectD.1054
	Left:	374.00000000000000
	Top:	142.00000000000000
	Right:	424.00000000000000
	Bottom:	115.00000000000000
)

(RectD.1055
	Left:	432.00000000000000
	Top:	142.00000000000000
	Right:	482.00000000000000
	Bottom:	115.00000000000000
)

(RectD.1056
	Left:	6.00000000000000
	Top:	161.00000000000000
	Right:	496.00000000000000
	Bottom:	5.00000000000000
)

(Nil.1057
)

(RectD.1058
	Left:	0.29166666666667
	Top:	7.03125000000000
	Right:	5.48958333333333
	Bottom:	5.32291666666667
)

(SEd.1059
	Name:	"AVExtAdvEditor.OptionsGenOpen"
	CreationDate:	"4 Июль 2004 г. 23:38:02"
	GUIName:	"Script"
	Win:	1060
	CSMgr:	1061
	DocExts:	1062
	Source:	"aDil = av.FindDialog(\"AVExtAdvEditor.OptionsGen\")\nif (_AVExtAdvEditorConfir) then\n  aDil.FindByName(\"aChBA\").SetSelected(true)\nelse\n  aDil.FindByName(\"aChBA\").SetSelected(false)\nend\naDil.FindByName(\"aCBC\").DefineFromList({\"Black\",\"Blue\",\"Cyan\",\"Gray\",\"Green\",\"Magenta\",\"Red\",\"White\",\"Yellow\"})\naDil.FindByName(\"aCBC\").FindByValue(_AVExtAdvEditorSelectionLC)\naDil.FindByName(\"aCBC\").SelectCurrent\naDil.FindByName(\"aCBL\").DefineFromList({0.1,0.5,1,1.5,2,3,4,5,6,7,8,9,10})\naDil.FindByName(\"aCBL\").FindByValue(_AVEx
tAdvEditorSelectionLS)\naDil.FindByName(\"aCBL\").SelectCurrent\naDil.FindByName(\"aCBP\").DefineFromList({4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,30,36,40,50,60,72})\naDil.FindByName(\"aCBP\").FindByValue(_AVExtAdvEditorSelectionPointS)\naDil.FindByName(\"aCBP\").SelectCurrent\naDil.Open\n"
	SearchStr:	"NotEditNumV"
)

(DocWin.1060
	Owner:	1059
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1061
)

(DocAct.1062
	Doc:	1059
)

(SEd.1063
	Name:	"AVExtAdvEditor.OptionsGenSet"
	CreationDate:	"4 Июль 2004 г. 23:51:08"
	GUIName:	"Script"
	Win:	1064
	CSMgr:	1065
	DocExts:	1066
	Source:	"aDil = self.getdialog\n_AVExtAdvEditorSelectionLC = aDil.FindByName(\"aCBC\").GetCurrentValue\n_AVExtAdvEditorSelectionLS = aDil.FindByName(\"aCBL\").GetCurrentValue\n_AVExtAdvEditorSelectionPointS = aDil.FindByName(\"aCBP\").GetCurrentValue\n_AVExtAdvEditorSelectionSketch.SetSize(_AVExtAdvEditorSelectionLS)\naSelectionSketchC = av.Run(\"AVExtAdvEditor.ColorSet\",_AVExtAdvEditorSelectionLC.Clone)\n_AVExtAdvEditorSelectionSketch.SetColor(aSelectionSketchC)\n_AVExtAdvEditorSelectionPoint.SetColor(aSelectionSketchC)\n_AVExtAd
vEditorSelectionPoint.SetSize(_AVExtAdvEditorSelectionPointS)\nif (aDil.FindByName(\"aChBA\").IsSelected) then\n  _AVExtAdvEditorConfir = true\nelse\n  _AVExtAdvEditorConfir = false\nend\naDil.Close"
	SearchStr:	"NotEditNumV"
)

(DocWin.1064
	Owner:	1063
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1065
)

(DocAct.1066
	Doc:	1063
)

(SEd.1067
	Name:	"AVExtAdvEditor.OptionsOpen"
	CreationDate:	"3 Май 2004 г. 0:53:50"
	GUIName:	"Script"
	Win:	1068
	CSMgr:	1069
	DocExts:	1070
	Source:	"aDil = av.FindDialog(\"AVExtAdvEditor.Options\")\naDil.FindByName(\"aTLSn\").SetText(_AVExtAdvEditorSnapT.AsString)\naDil.FindByName(\"aCBSn\").DefineFromList({\"pixels\",\"map units\"})\naDil.FindByName(\"aCBSn\").FindByValue(_AVExtAdvEditorSnapTU)\naDil.FindByName(\"aCBSn\").SelectCurrent\naDil.FindByName(\"aTLSt\").SetText(_AVExtAdvEditorStreamT.AsString)\naDil.FindByName(\"aCBSt\").DefineFromList({\"pixels\",\"map units\"})\naDil.FindByName(\"aCBSt\").FindByValue(_AVExtAdvEditorStreamTU)\naDil.FindByName(\"aCBSt\").SelectCurrent\naDil.Fi
ndByName(\"aTLG\").SetText(_AVExtAdvEditorStreamG.AsString)\naDil.FindByName(\"aCBA\").DefineFromList({10,20,50,100,200,500,1000})\naDil.FindByName(\"aCBA\").FindByValue(1 / _AVExtAdvEditorArcT)\naDil.FindByName(\"aCBA\").SelectCurrent\naDil.FindByName(\"aCBC\").DefineFromList({10,20,50,100,200,500,1000})\naDil.FindByName(\"aCBC\").FindByValue(1 / _AVExtAdvEditorCurveT)\naDil.FindByName(\"aCBC\").SelectCurrent\nif (_AVExtAdvEditorResetParam) then\n  aDil.FindByName(\"aChBP\").SetSelected(true)\nelse\n  aDil.FindByName(\"aChBP\").SetSe
lected(false)\nend\nif (_AVExtAdvEditorAutoClose) then\n  aDil.FindByName(\"aChBA\").SetSelected(true)\nelse\n  aDil.FindByName(\"aChBA\").SetSelected(false)\nend\naDil.Open"
	SearchStr:	"NotEditNumV"
)

(DocWin.1068
	Owner:	1067
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1069
)

(DocAct.1070
	Doc:	1067
)

(DEd.1071
	Name:	"AVExtAdvEditor.OptionsPan"
	CreationDate:	"8 Май 2004 г. 23:52:09"
	GUIName:	"DialogEditor"
	Win:	1072
	CSMgr:	1073
	DocExts:	1075
	DocExts:	1076
	Graphics:	1077
	Dpy:	1113
	Dialog:	1116
	DialogExtent:	1147
	Compiled:	1
)

(DocWin.1072
	Owner:	1071
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1073
	Client:	1074
)

(CSClient.1074
	Client:	1075
	ReqName:	"ClientNfy"
)

(PanMgr.1075
	Doc:	1071
)

(DocAct.1076
	Doc:	1071
)

(GList.1077
	Child:	1078
	Child:	1081
	Child:	1084
	Child:	1087
	Child:	1091
	Child:	1095
	Child:	1098
	Child:	1101
	Child:	1104
	Child:	1107
	Child:	1110
	Dpy:	1113
	FormatNumb:	1115
)

(GCtrl.1078
	Name:	"aCP"
	Bounds:	1079
	ControlConstraints:	0x55
	Control:	1080
	Editable:	1
)

(RectD.1079
	Left:	0.52083333333333
	Top:	6.91666666666667
	Right:	5.02083333333333
	Bottom:	5.15625000000000
)

(CPanel.1080
	InternalName:	"aCP"
	UseGraphicNfy:	1
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(GCtrl.1081
	Name:	"aCBSh"
	Bounds:	1082
	ControlConstraints:	0x55
	Control:	1083
	Editable:	1
)

(RectD.1082
	Left:	0.56250000000000
	Top:	6.83333333333333
	Right:	4.37500000000000
	Bottom:	6.63541666666667
)

(AVCBox.1083
	InternalName:	"aCBSh"
	UseGraphicNfy:	1
	Listening:	1
	Label:	"Shift key down - Drags the display in the direction you move the cursor"
	Constraints:	0x55
)

(GCtrl.1084
	Name:	"aCBP"
	Bounds:	1085
	ControlConstraints:	0x55
	Control:	1086
	Editable:	1
)

(RectD.1085
	Left:	0.56250000000000
	Top:	6.15625000000000
	Right:	4.10416666666667
	Bottom:	5.94791666666667
)

(AVCBox.1086
	InternalName:	"aCBP"
	UseGraphicNfy:	1
	Listening:	1
	Label:	"Pan Auto - When the cursor near border of a View"
	Constraints:	0x55
)

(GCtrl.1087
	Name:	"aBOk"
	Bounds:	1088
	ControlConstraints:	0x55
	Control:	1089
	Editable:	1
)

(RectD.1088
	Left:	3.82291666666667
	Top:	5.51041666666667
	Right:	4.34375000000000
	Bottom:	5.21875000000000
)

(Butn.1089
	InternalName:	"aBOk"
	UseGraphicNfy:	1
	Icon:	1090
	Click:	"AVExtAdvEditor.OptionsPanSet"
)

(AVIcon.1090
	Name:	"adveditok.gif"
	Data:	4e442049 6d616765 00010011 000d0000 
	Data:	00dd0202 02020202 02020202 02020202 
	Data:	02020202 02010202 02020102 02010201 
	Data:	02020202 02020102 02020201 02020102 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02010101 01020202 
	Data:	01020202 02020202 02010202 02020102 
	Data:	02010201 02020202 02020201 01010102 
	Data:	02020102 02020102 02020202 02020202 
	Data:	02020202 02020202 02020202 01020202 
	Data:	02010202 01020202 02020202 02010202 
	Data:	02020102 02010202 01020202 02020102 
	Data:	02020201 02020101 02020202 02020201 
	Data:	02020202 01020201 02020102 02020202 
	Data:	02020202 02020202 02020202 02020200 
	Data:	00001000 ffffff00 00000002 c0c0c000 
	Data:	00000000 02000800 0a002000 02000000 
	Data:	00000000 000000
)

(GCtrl.1091
	Name:	"aBC"
	Bounds:	1092
	ControlConstraints:	0x55
	Control:	1093
	Editable:	1
)

(RectD.1092
	Left:	4.42708333333333
	Top:	5.51041666666667
	Right:	4.94791666666667
	Bottom:	5.21875000000000
)

(Butn.1093
	InternalName:	"aBC"
	UseGraphicNfy:	1
	Icon:	1094
	Click:	"AVExtAdvEditor.OptionsClose"
)

(AVIcon.1094
	Name:	"adveditcan.gif"
	Data:	4e442049 6d616765 00010024 000d0000 
	Data:	01d40202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 01020202 02020201 
	Data:	02020201 02010202 02010201 02020202 
	Data:	02010202 02020201 02020202 01020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020201 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02010101 01020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020201 02020202 01020202 02020202 
	Data:	02020201 02010102 02010201 02020201 
	Data:	02010202 02010201 02020202 02010101 
	Data:	01020202 01010101 02010202 02010202 
	Data:	01010102 02020101 01020201 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 01020202 02010202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020201 02020202 01020202 02020202 
	Data:	01010102 02010201 01020202 01010102 
	Data:	02020101 01020201 02020202 01020202 
	Data:	02020202 01010101 02010202 02010201 
	Data:	02020202 02010101 01010201 02020202 
	Data:	01020202 02010201 02020201 02010202 
	Data:	02010201 02020201 02010202 02010201 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020000 001000ff ffff0000 
	Data:	000002c0 c0c00000 00000002 0008000a 
	Data:	00200002 00000000 00000000 0000
)

(GCtrl.1095
	Name:	"aCBC"
	Bounds:	1096
	ControlConstraints:	0x55
	Control:	1097
	Editable:	1
)

(RectD.1096
	Left:	0.56250000000000
	Top:	6.54166666666667
	Right:	4.79166666666667
	Bottom:	6.27083333333333
)

(AVCBox.1097
	InternalName:	"aCBC"
	UseGraphicNfy:	1
	Listening:	1
	Label:	"Control key down - Centers display on point where you click (without add vertex)"
	Constraints:	0x55
)

(GCtrl.1098
	Name:	"aCP1"
	Bounds:	1099
	ControlConstraints:	0x55
	Control:	1100
	Editable:	1
)

(RectD.1099
	Left:	0.57291666666667
	Top:	6.62500000000000
	Right:	4.95833333333333
	Bottom:	6.56250000000000
)

(CPanel.1100
	InternalName:	"aCP1"
	UseGraphicNfy:	1
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(GCtrl.1101
	Name:	"aCBCl"
	Bounds:	1102
	ControlConstraints:	0x55
	Control:	1103
	Editable:	1
)

(RectD.1102
	Left:	0.56250000000000
	Top:	5.85416666666667
	Right:	4.10416666666667
	Bottom:	5.65625000000000
)

(AVCBox.1103
	InternalName:	"aCBCl"
	UseGraphicNfy:	1
	Listening:	1
	Label:	"Centers display on point where you added vertex (where you click)"
	Constraints:	0x55
)

(GCtrl.1104
	Name:	"aCP4"
	Bounds:	1105
	ControlConstraints:	0x55
	Control:	1106
	Editable:	1
)

(RectD.1105
	Left:	0.57291666666667
	Top:	5.61458333333333
	Right:	4.95833333333333
	Bottom:	5.55208333333333
)

(CPanel.1106
	InternalName:	"aCP4"
	UseGraphicNfy:	1
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(GCtrl.1107
	Name:	"aCP2"
	Bounds:	1108
	ControlConstraints:	0x55
	Control:	1109
	Editable:	1
)

(RectD.1108
	Left:	0.57291666666667
	Top:	6.27083333333333
	Right:	4.95833333333333
	Bottom:	6.20833333333333
)

(CPanel.1109
	InternalName:	"aCP2"
	UseGraphicNfy:	1
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(GCtrl.1110
	Name:	"aCP3"
	Bounds:	1111
	ControlConstraints:	0x55
	Control:	1112
	Editable:	1
)

(RectD.1111
	Left:	0.57291666666667
	Top:	5.91666666666667
	Right:	4.95833333333333
	Bottom:	5.85416666666667
)

(CPanel.1112
	InternalName:	"aCP3"
	UseGraphicNfy:	1
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(PageDpy.1113
	Top:	7.43750000000000
	Right:	12.03125000000000
	ReportUnits:	1
	Units:	1
	Scale:	1114
	ZoomRight:	12.03125000000000
	ZoomTop:	7.43750000000000
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.1114
	N:	0.08311688311688
)

(Numb.1115
)

(AVDLog.1116
	Name:	"AVExtAdvEditor.OptionsPan"
	X:	48
	Y:	67
	W:	440
	H:	178
	ConstrainedControlNames:	1117
	ConstrainedControlNames:	1118
	Constraints:	1119
	Constraints:	1120
	Server:	32
	ControlPanel:	1121
	Title:	"Pan"
	EscapeEnabled:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	DefaultButton:	1146
)

(AVStr.1117
	S:	"aBOk"
)

(AVStr.1118
	S:	"aBC"
)

(Numb.1119
	N:	85.00000000000000
)

(Numb.1120
	N:	85.00000000000000
)

(CPanel.1121
	Child:	1122
	ResBox:	1145
	Listening:	1
)

(CPanel.1122
	InternalName:	"aCP"
	Child:	1123
	Child:	1124
	Child:	1125
	Child:	1127
	Child:	1129
	Child:	1130
	Child:	1131
	Child:	1132
	Child:	1133
	Child:	1134
	Constraints:	0x55
	ResBox:	1135
	ResBox:	1136
	ResBox:	1137
	ResBox:	1138
	ResBox:	1139
	ResBox:	1140
	ResBox:	1141
	ResBox:	1142
	ResBox:	1143
	ResBox:	1144
	VisibleBorder:	1
	Listening:	1
)

(AVCBox.1123
	InternalName:	"aCBSh"
	Listening:	1
	Label:	"Shift key down - Drags the display in the direction you move the cursor"
	Constraints:	0x55
)

(AVCBox.1124
	InternalName:	"aCBP"
	Listening:	1
	Label:	"Pan Auto - When the cursor near border of a View"
	Constraints:	0x55
)

(Butn.1125
	InternalName:	"aBOk"
	Icon:	1126
	Click:	"AVExtAdvEditor.OptionsPanSet"
)

(AVIcon.1126
	Name:	"adveditok.gif"
	Data:	4e442049 6d616765 00010011 000d0000 
	Data:	00dd0202 02020202 02020202 02020202 
	Data:	02020202 02010202 02020102 02010201 
	Data:	02020202 02020102 02020201 02020102 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02010101 01020202 
	Data:	01020202 02020202 02010202 02020102 
	Data:	02010201 02020202 02020201 01010102 
	Data:	02020102 02020102 02020202 02020202 
	Data:	02020202 02020202 02020202 01020202 
	Data:	02010202 01020202 02020202 02010202 
	Data:	02020102 02010202 01020202 02020102 
	Data:	02020201 02020101 02020202 02020201 
	Data:	02020202 01020201 02020102 02020202 
	Data:	02020202 02020202 02020202 02020200 
	Data:	00001000 ffffff00 00000002 c0c0c000 
	Data:	00000000 02000800 0a002000 02000000 
	Data:	00000000 000000
)

(Butn.1127
	InternalName:	"aBC"
	Icon:	1128
	Click:	"AVExtAdvEditor.OptionsClose"
)

(AVIcon.1128
	Name:	"adveditcan.gif"
	Data:	4e442049 6d616765 00010024 000d0000 
	Data:	01d40202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 01020202 02020201 
	Data:	02020201 02010202 02010201 02020202 
	Data:	02010202 02020201 02020202 01020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020201 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02010101 01020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020201 02020202 01020202 02020202 
	Data:	02020201 02010102 02010201 02020201 
	Data:	02010202 02010201 02020202 02010101 
	Data:	01020202 01010101 02010202 02010202 
	Data:	01010102 02020101 01020201 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 01020202 02010202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020201 02020202 01020202 02020202 
	Data:	01010102 02010201 01020202 01010102 
	Data:	02020101 01020201 02020202 01020202 
	Data:	02020202 01010101 02010202 02010201 
	Data:	02020202 02010101 01010201 02020202 
	Data:	01020202 02010201 02020201 02010202 
	Data:	02010201 02020201 02010202 02010201 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020000 001000ff ffff0000 
	Data:	000002c0 c0c00000 00000002 0008000a 
	Data:	00200002 00000000 00000000 0000
)

(AVCBox.1129
	InternalName:	"aCBC"
	Listening:	1
	Label:	"Control key down - Centers display on point where you click (without add vertex)"
	Constraints:	0x55
)

(CPanel.1130
	InternalName:	"aCP1"
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(AVCBox.1131
	InternalName:	"aCBCl"
	Listening:	1
	Label:	"Centers display on point where you added vertex (where you click)"
	Constraints:	0x55
)

(CPanel.1132
	InternalName:	"aCP4"
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(CPanel.1133
	InternalName:	"aCP2"
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(CPanel.1134
	InternalName:	"aCP3"
	Constraints:	0x55
	VisibleBorder:	1
	Listening:	1
)

(RectD.1135
	Left:	4.00000000000000
	Top:	27.00000000000000
	Right:	370.00000000000000
	Bottom:	8.00000000000000
)

(RectD.1136
	Left:	4.00000000000000
	Top:	93.00000000000000
	Right:	344.00000000000000
	Bottom:	73.00000000000000
)

(RectD.1137
	Left:	317.00000000000000
	Top:	163.00000000000000
	Right:	367.00000000000000
	Bottom:	135.00000000000000
)

(RectD.1138
	Left:	375.00000000000000
	Top:	163.00000000000000
	Right:	425.00000000000000
	Bottom:	135.00000000000000
)

(RectD.1139
	Left:	4.00000000000000
	Top:	62.00000000000000
	Right:	410.00000000000000
	Bottom:	36.00000000000000
)

(RectD.1140
	Left:	5.00000000000000
	Top:	34.00000000000000
	Right:	426.00000000000000
	Bottom:	28.00000000000000
)

(RectD.1141
	Left:	4.00000000000000
	Top:	121.00000000000000
	Right:	344.00000000000000
	Bottom:	102.00000000000000
)

(RectD.1142
	Left:	5.00000000000000
	Top:	131.00000000000000
	Right:	426.00000000000000
	Bottom:	125.00000000000000
)

(RectD.1143
	Left:	5.00000000000000
	Top:	68.00000000000000
	Right:	426.00000000000000
	Bottom:	62.00000000000000
)

(RectD.1144
	Left:	5.00000000000000
	Top:	102.00000000000000
	Right:	426.00000000000000
	Bottom:	96.00000000000000
)

(RectD.1145
	Left:	5.00000000000000
	Top:	174.00000000000000
	Right:	437.00000000000000
	Bottom:	5.00000000000000
)

(Nil.1146
)

(RectD.1147
	Left:	0.46875000000000
	Top:	6.96875000000000
	Right:	5.05208333333333
	Bottom:	5.11458333333333
)

(SEd.1148
	Name:	"AVExtAdvEditor.OptionsPanOpen"
	CreationDate:	"9 Май 2004 г. 1:20:21"
	GUIName:	"Script"
	Win:	1149
	CSMgr:	1150
	DocExts:	1151
	Source:	"aDil = av.FindDialog(\"AVExtAdvEditor.OptionsPan\")\nif (_AVExtAdvEditorPanSh) then\n  aDil.FindByName(\"aCBSh\").SetSelected(true)\nelse\n  aDil.FindByName(\"aCBSh\").SetSelected(false)\nend\nif (_AVExtAdvEditorPanAlt) then\n  aDil.FindByName(\"aCBC\").SetSelected(true)\nelse\n  aDil.FindByName(\"aCBC\").SetSelected(false)\nend\nif (_AVExtAdvEditorPan) then\n  aDil.FindByName(\"aCBP\").SetSelected(true)\nelse\n  aDil.FindByName(\"aCBP\").SetSelected(false)\nend\nif (_AVExtAdvEditorPanClick) then\n  aDil.FindByName(\"aCBCl\").SetSelected(t
rue)\nelse\n  aDil.FindByName(\"aCBCl\").SetSelected(false)\nend\naDil.Open"
	SearchStr:	"NotEditNumV"
)

(DocWin.1149
	Owner:	1148
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1150
)

(DocAct.1151
	Doc:	1148
)

(SEd.1152
	Name:	"AVExtAdvEditor.OptionsPanSet"
	CreationDate:	"9 Май 2004 г. 1:24:56"
	GUIName:	"Script"
	Win:	1153
	CSMgr:	1154
	DocExts:	1155
	Source:	"aDil = self.Getdialog\nif (aDil.FindByName(\"aCBSh\").IsSelected) then\n  _AVExtAdvEditorPanSh = true\nelse\n  _AVExtAdvEditorPanSh = false\nend\nif (aDil.FindByName(\"aCBC\").IsSelected) then\n  _AVExtAdvEditorPanAlt = true\nelse\n  _AVExtAdvEditorPanAlt = false\nend\nif (aDil.FindByName(\"aCBP\").IsSelected) then\n  _AVExtAdvEditorPan = true\nelse\n  _AVExtAdvEditorPan = false\nend\nif (aDil.FindByName(\"aCBCl\").IsSelected) then\n  _AVExtAdvEditorPanClick = true\nelse\n  _AVExtAdvEditorPanClick = false\nend\naDil.Close"
	SearchStr:	"NotEditNumV"
)

(DocWin.1153
	Owner:	1152
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1154
)

(DocAct.1155
	Doc:	1152
)

(SEd.1156
	Name:	"AVExtAdvEditor.OptionsSet"
	CreationDate:	"5 Май 2004 г. 1:08:16"
	GUIName:	"Script"
	Win:	1157
	CSMgr:	1158
	DocExts:	1159
	Source:	"aDil = self.GetDialog\nif (aDil.FindByName(\"aTLSn\").GetText.IsNumber) then\n  _AVExtAdvEditorSnapT = aDil.FindByName(\"aTLSn\").GetText.AsNumber\nend\n_AVExtAdvEditorSnapTU = aDil.FindByName(\"aCBSn\").GEtCurrentValue\nif (aDil.FindByName(\"aTLSt\").GetText.IsNumber) then\n  _AVExtAdvEditorStreamT = aDil.FindByName(\"aTLSt\").GetText.AsNumber\nend\n_AVExtAdvEditorStreamTU = aDil.FindByName(\"aCBSt\").GEtCurrentValue\nif (aDil.FindByName(\"aTLG\").GetText.IsNumber) then\n  _AVExtAdvEditorStreamG = aDil.FindByName(\"aTLG\").GetText.
AsNumber\nend\n_AVExtAdvEditorArcT = 1 / aDil.FindByName(\"aCBA\").GEtCurrentValue\n_AVExtAdvEditorCurveT = 1 / aDil.FindByName(\"aCBC\").GEtCurrentValue\nif (aDil.FindByName(\"aChBP\").ISSelected) then\n  _AVExtAdvEditorResetParam = true\nelse\n  _AVExtAdvEditorResetParam = false\nend\nif (aDil.FindByName(\"aChBA\").ISSelected) then\n  _AVExtAdvEditorAutoClose = true\nelse\n  _AVExtAdvEditorAutoClose = false\nend\n\naDil.close"
	SearchStr:	"NotEditNumV"
)

(DocWin.1157
	Owner:	1156
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1158
)

(DocAct.1159
	Doc:	1156
)

(SEd.1160
	Name:	"AVExtAdvEditor.PopUPAllUpd"
	CreationDate:	"22 Июнь 2004 г. 4:06:48"
	GUIName:	"Script"
	Win:	1161
	CSMgr:	1162
	DocExts:	1163
	Source:	"self.setenabled(true)\nif (_AVExtAdvEditorDrawClass = \"point\") then\n  self.setenabled(false)\nend\nif (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEPen\").IsSelected.Not) then\n  self.setenabled(false)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1161
	Owner:	1160
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1162
)

(DocAct.1163
	Doc:	1160
)

(SEd.1164
	Name:	"AVExtAdvEditor.PopUPDelPart"
	CreationDate:	"17 Май 2004 г. 22:57:49"
	GUIName:	"Script"
	Win:	1165
	CSMgr:	1166
	DocExts:	1167
	Source:	"if (_AVExtAdvEditorScratchList <> nil) then\n  if (_AVExtAdvEditorScratchListPart = true) then\n    if (_AVExtAdvEditorScratchListPartNumber <> nil) then\n      while (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) <> \"Part\")\n        _AVExtAdvEditorScratchList.Remove(_AVExtAdvEditorScratchList.Count - 1)\n      end\n      _AVExtAdvEditorScratchList.Remove(_AVExtAdvEditorScratchList.Count - 1)\n      _AVExtAdvEditorScratchListPartNumber.Remove(_AVExtAdvEditorScratchListPartNumber.Count
 - 1)\n      if (_AVExtAdvEditorScratchListPartNumber.Count < 1) then\n        _AVExtAdvEditorScratchListPartNumber = nil\n        _AVExtAdvEditorScratchListPart = false\n      end\n      if (_AVExtAdvEditorDrawClass = \"polygon\") then\n        av.Run(\"AVExtAdvEditor.ToolDrawingPolygon\",nil)\n      elseif (_AVExtAdvEditorDrawClass = \"polyline\") then\n        av.Run(\"AVExtAdvEditor.ToolDrawing\",nil)\n      end   \n      agrlist = _AVExtAdvEditorView.getgraphics\n      if (_AVExtAdvEditorShowVer) then\n        aListVertex
 = agrlist.FindAllByName(\"AVExtAdvEditorVertex\")\n        if (aListVertex <> nil) then\n          for each iaListVertex in aListVertex\n            agrlist.RemoveGraphic(iaListVertex)\n          end\n        end\n        aListVertexEnd = agrlist.FindAllByName(\"AVExtAdvEditorVertexEnd\")\n        if (aListVertexEnd <> nil) then\n          for each iaListVertexEnd in aListVertexEnd\n            agrlist.RemoveGraphic(iaListVertexEnd)\n          end\n        end\n        aListVertexCurve = agrlist.FindAllByName(\"AVExtAdvEdi
torVertexCurve\")\n        if (aListVertexCurve <> nil) then\n          for each iaListVertex in aListVertexCurve\n            agrlist.RemoveGraphic(iaListVertex)\n          end\n        end\n        aListVertexCurveP1 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP1\")\n        if (aListVertexCurveP1 <> nil) then\n          for each iaListVertex in aListVertexCurveP1\n            agrlist.RemoveGraphic(iaListVertex)\n          end\n        end\n        aListVertexCurveP2 = agrlist.FindAllByName(\"AVExtAdvEditorVertexC
urveP2\")\n        if (aListVertexCurveP2 <> nil) then\n          for each iaListVertex in aListVertexCurveP2\n            agrlist.RemoveGraphic(iaListVertex)\n          end\n        end\n        aNum = _AVExtAdvEditorScratchList.Count - 1\n        iSLN = 0\n        for each iSL in _AVExtAdvEditorScratchList\n          if (iSLN <> aNum) then\n            if (iSL.Get(1) = \"line\") then\n              aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n              aVertex.SetName(\"AVExtAdvEditorVertex\")\n              aVertex.
SetSymbol(_AVExtAdvEditorVertex)\n              aVertex.SetObjectTag(iSLN)\n              agrlist.Add(aVertex)\n            elseif (iSL.Get(1) = \"Stream\") then\n              aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n              aVertex.SetName(\"AVExtAdvEditorVertex\")\n              aVertex.SetSymbol(_AVExtAdvEditorVertex)\n              aVertex.SetObjectTag(iSLN)\n              agrlist.Add(aVertex)\n            elseif (iSL.Get(1) = \"Curve\") then\n              aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n   
           aVertex.SetName(\"AVExtAdvEditorVertexCurve\")\n              aVertex.SetSymbol(_AVExtAdvEditorVertex)\n              aVertex.SetObjectTag(iSLN)\n              agrlist.Add(aVertex)\n              aVertexP1 = GraphicShape.Make(iSL.Get(2).Clone)\n              aVertexP1.SetName(\"AVExtAdvEditorVertexCurveP1\")\n              aVertexP1.SetSymbol(_AVExtAdvEditorVertexArc)\n              aVertexP1.SetObjectTag(iSLN)\n              agrlist.Add(aVertexP1)\n              aVertexP2 = GraphicShape.Make(iSL.Get(3).Clone
)\n              aVertexP2.SetName(\"AVExtAdvEditorVertexCurveP2\")\n              aVertexP2.SetSymbol(_AVExtAdvEditorVertexArc)\n              aVertexP2.SetObjectTag(iSLN)\n              agrlist.Add(aVertexP2)\n            end\n          else\n            if (iSL.Get(1) = \"line\") then\n              aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n              aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n              aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n              aVertex.SetObjectTag(iSLN)\n              agrl
ist.Add(aVertex)\n            elseif (iSL.Get(1) = \"Stream\") then\n              aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n              aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n              aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n              aVertex.SetObjectTag(iSLN)\n              agrlist.Add(aVertex)\n            elseif (iSL.Get(1) = \"Curve\") then\n              aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n              aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n              aVertex.SetSymbol(
_AVExtAdvEditorVertexEnd)\n              aVertex.SetObjectTag(iSLN)\n              agrlist.Add(aVertex)\n              aVertexP1 = GraphicShape.Make(iSL.Get(2).Clone)\n              aVertexP1.SetName(\"AVExtAdvEditorVertexCurveP1\")\n              aVertexP1.SetSymbol(_AVExtAdvEditorVertexArc)\n              aVertexP1.SetObjectTag(iSLN)\n              agrlist.Add(aVertexP1)\n              aVertexP2 = GraphicShape.Make(iSL.Get(3).Clone)\n              aVertexP2.SetName(\"AVExtAdvEditorVertexCurveP2\")\n              aVerte
xP2.SetSymbol(_AVExtAdvEditorVertexArc)\n              aVertexP2.SetObjectTag(iSLN)\n              agrlist.Add(aVertexP2)\n            end\n          end\n          iSLN = iSLN + 1\n        end\n      end\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1165
	Owner:	1164
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1166
)

(DocAct.1167
	Doc:	1164
)

(SEd.1168
	Name:	"AVExtAdvEditor.PopUPDelPartUpd"
	CreationDate:	"17 Май 2004 г. 22:54:47"
	GUIName:	"Script"
	Win:	1169
	CSMgr:	1170
	DocExts:	1171
	Source:	"self.SetEnabled(false)\nif (_AVExtAdvEditorScratchListPart = true) then\n  self.SetEnabled(true)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1169
	Owner:	1168
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1170
)

(DocAct.1171
	Doc:	1168
)

(SEd.1172
	Name:	"AVExtAdvEditor.PopUPDelPoint"
	CreationDate:	"18 Май 2004 г. 0:53:04"
	GUIName:	"Script"
	Win:	1173
	CSMgr:	1174
	DocExts:	1175
	Source:	"if (_AVExtAdvEditorScratchList <> nil) then\n  aRem = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1)\n  if (aRem.Get(0) = \"Part\") then\n    _AVExtAdvEditorScratchList.Remove(_AVExtAdvEditorScratchList.Count - 1)\n    _AVExtAdvEditorScratchListPartNumber.Remove(_AVExtAdvEditorScratchListPartNumber.Count - 1)\n    if (_AVExtAdvEditorScratchListPartNumber.Count < 1) then\n      _AVExtAdvEditorScratchListPartNumber = nil\n      _AVExtAdvEditorScratchListPart = false\n    end\n  elseif (aRem.Get(1) 
= \"Stream\") then\n    aNumStream = 0\n    while (aNumStream <> _AVExtAdvEditorStreamG)\n      if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(1) = \"Stream\") then\n        _AVExtAdvEditorScratchList.Remove(_AVExtAdvEditorScratchList.Count - 1)\n      else\n        aNumStream = _AVExtAdvEditorStreamG\n        break\n      end\n      aNumStream = aNumStream + 1\n    end\n  else\n    if (_AVExtAdvEditorScratchList.Count = 1) then\n      agrlist = _AVExtAdvEditorView.getgraphics\n      if (_AVExtA
dvEditorScrathGrMouse <> nil) then\n        agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n      end\n      if (_AVExtAdvEditorScrathGr <> nil) then\n        agrlist.RemoveGraphic(_AVExtAdvEditorScrathGr)\n      end\n      if (_AVExtAdvEditorCurGr <> nil) then\n        agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n      end\n      aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorVertex\")\n      if (aListVertex <> nil) then\n        for each iaListVertex in aListVertex\n          agrlist.RemoveGraphic(iaListVerte
x)\n        end\n      end\n      aListVertexEnd = agrlist.FindAllByName(\"AVExtAdvEditorVertexEnd\")\n      if (aListVertexEnd <> nil) then\n        for each iaListVertexEnd in aListVertexEnd\n          agrlist.RemoveGraphic(iaListVertexEnd)\n        end\n      end\n      aListVertexCurve = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurve\")\n      if (aListVertexCurve <> nil) then\n        for each iaListVertex in aListVertexCurve\n          agrlist.RemoveGraphic(iaListVertex)\n        end\n      end\n      aListVertexCurv
eP1 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP1\")\n      if (aListVertexCurveP1 <> nil) then\n        for each iaListVertex in aListVertexCurveP1\n          agrlist.RemoveGraphic(iaListVertex)\n        end\n      end\n      aListVertexCurveP2 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP2\")\n      if (aListVertexCurveP2 <> nil) then\n        for each iaListVertex in aListVertexCurveP2\n          agrlist.RemoveGraphic(iaListVertex)\n        end\n      end\n      _AVExtAdvEditorScratchList = nil\n      _AVE
xtAdvEditorClick = nil\n      _AVExtAdvEditorapt = nil\n      _AVExtAdvEditorScrathGr = nil\n      _AVExtAdvEditorScrathGrMouse = nil\n      _AVExtAdvEditorCurGr = nil\n      _AVExtAdvEditoraptL = nil\n      _AVExtAdvEditorScratchListPart = false\n      _AVExtAdvEditorScratchListPartPoint = nil\n      _AVExtAdvEditorAngleEnb = false\n      _AVExtAdvEditorAngleCos = nil\n      _AVExtAdvEditorAngleSin = nil\n      _AVExtAdvEditorDeflectionEnb = false\n      _AVExtAdvEditorDeflectionCos = nil\n      _AVExtAdvEditorDeflecti
onSin = nil\n      _AVExtAdvEditorLengthEnb = false\n      _AVExtAdvEditorLengthSet = nil\n      _AVExtAdvEditorScratchListPartNumber = nil\n      av.Run(\"AVExtAdvEditor.StartSnapPointEnd\",nil)\n    else\n      _AVExtAdvEditorScratchList.Remove(_AVExtAdvEditorScratchList.Count - 1)\n    end\n  end\n  if (_AVExtAdvEditorScratchList <> nil) then\n    if (_AVExtAdvEditorDrawClass = \"polygon\") then\n      av.Run(\"AVExtAdvEditor.ToolDrawingPolygon\",nil)\n    else\n      av.Run(\"AVExtAdvEditor.ToolDrawing\",nil)\n    end      \n
    agrlist = _AVExtAdvEditorView.getgraphics\n    if (_AVExtAdvEditorShowVer) then\n      aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorVertex\")\n      if (aListVertex <> nil) then\n        for each iaListVertex in aListVertex\n          agrlist.RemoveGraphic(iaListVertex)\n        end\n      end\n      aListVertexEnd = agrlist.FindAllByName(\"AVExtAdvEditorVertexEnd\")\n      if (aListVertexEnd <> nil) then\n        for each iaListVertexEnd in aListVertexEnd\n          agrlist.RemoveGraphic(iaListVertexEnd)\n     
   end\n      end\n      aListVertexCurve = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurve\")\n      if (aListVertexCurve <> nil) then\n        for each iaListVertex in aListVertexCurve\n          agrlist.RemoveGraphic(iaListVertex)\n        end\n      end\n      aListVertexCurveP1 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP1\")\n      if (aListVertexCurveP1 <> nil) then\n        for each iaListVertex in aListVertexCurveP1\n          agrlist.RemoveGraphic(iaListVertex)\n        end\n      end\n      aListVertexCu
rveP2 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP2\")\n      if (aListVertexCurveP2 <> nil) then\n        for each iaListVertex in aListVertexCurveP2\n          agrlist.RemoveGraphic(iaListVertex)\n        end\n      end\n      aNum = _AVExtAdvEditorScratchList.Count - 1\n      iSLN = 0\n      for each iSL in _AVExtAdvEditorScratchList\n        if (iSLN <> aNum) then\n          if (iSL.Get(1) = \"line\") then\n            aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n            aVertex.SetName(\"AVExtAdvEditorVer
tex\")\n            aVertex.SetSymbol(_AVExtAdvEditorVertex)\n            aVertex.SetObjectTag(iSLN)\n            agrlist.Add(aVertex)\n          elseif (iSL.Get(1) = \"Stream\") then\n            aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n            aVertex.SetName(\"AVExtAdvEditorVertex\")\n            aVertex.SetSymbol(_AVExtAdvEditorVertex)\n            aVertex.SetObjectTag(iSLN)\n            agrlist.Add(aVertex)\n          elseif (iSL.Get(1) = \"Curve\") then\n            aVertex = GraphicShape.Make(iSL.Get(0).Clon
e)\n            aVertex.SetName(\"AVExtAdvEditorVertexCurve\")\n            aVertex.SetSymbol(_AVExtAdvEditorVertex)\n            aVertex.SetObjectTag(iSLN)\n            agrlist.Add(aVertex)\n            aVertexP1 = GraphicShape.Make(iSL.Get(2).Clone)\n            aVertexP1.SetName(\"AVExtAdvEditorVertexCurveP1\")\n            aVertexP1.SetSymbol(_AVExtAdvEditorVertexArc)\n            aVertexP1.SetObjectTag(iSLN)\n            agrlist.Add(aVertexP1)\n            aVertexP2 = GraphicShape.Make(iSL.Get(3).Clone)\n            
aVertexP2.SetName(\"AVExtAdvEditorVertexCurveP2\")\n            aVertexP2.SetSymbol(_AVExtAdvEditorVertexArc)\n            aVertexP2.SetObjectTag(iSLN)\n            agrlist.Add(aVertexP2)\n          end\n        else\n          if (iSL.Get(1) = \"line\") then\n            aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n            aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n            aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n            aVertex.SetObjectTag(iSLN)\n            agrlist.Add(aVertex)\n          elseif (iSL
.Get(1) = \"Stream\") then\n            aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n            aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n            aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n            aVertex.SetObjectTag(iSLN)\n            agrlist.Add(aVertex)\n          elseif (iSL.Get(1) = \"Curve\") then\n            aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n            aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n            aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n            aVertex.SetObjectTag
(iSLN)\n            agrlist.Add(aVertex)\n            aVertexP1 = GraphicShape.Make(iSL.Get(2).Clone)\n            aVertexP1.SetName(\"AVExtAdvEditorVertexCurveP1\")\n            aVertexP1.SetSymbol(_AVExtAdvEditorVertexArc)\n            aVertexP1.SetObjectTag(iSLN)\n            agrlist.Add(aVertexP1)\n            aVertexP2 = GraphicShape.Make(iSL.Get(3).Clone)\n            aVertexP2.SetName(\"AVExtAdvEditorVertexCurveP2\")\n            aVertexP2.SetSymbol(_AVExtAdvEditorVertexArc)\n            aVertexP2.SetObjectTag(iSL
N)\n            agrlist.Add(aVertexP2)\n          end\n        end\n        iSLN = iSLN + 1\n      end\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1173
	Owner:	1172
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1174
)

(DocAct.1175
	Doc:	1172
)

(SEd.1176
	Name:	"AVExtAdvEditor.PopUPDelSketch"
	CreationDate:	"18 Май 2004 г. 1:22:49"
	GUIName:	"Script"
	Win:	1177
	CSMgr:	1178
	DocExts:	1179
	Source:	"if (_AVExtAdvEditorScratchList <> nil) then\n  agrlist = _AVExtAdvEditorView.getgraphics\n  if (_AVExtAdvEditorScrathGrMouse <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n  end\n  if (_AVExtAdvEditorScrathGr <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGr)\n  end\n  if (_AVExtAdvEditorCurGr <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n  end\n  aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorVertex\")\n  if (aListVertex <> nil) then\n    for each iaListVertex i
n aListVertex\n      agrlist.RemoveGraphic(iaListVertex)\n    end\n  end\n  aListVertexEnd = agrlist.FindAllByName(\"AVExtAdvEditorVertexEnd\")\n  if (aListVertexEnd <> nil) then\n    for each iaListVertexEnd in aListVertexEnd\n      agrlist.RemoveGraphic(iaListVertexEnd)\n    end\n  end\n  aListVertexCurve = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurve\")\n  if (aListVertexCurve <> nil) then\n    for each iaListVertex in aListVertexCurve\n      agrlist.RemoveGraphic(iaListVertex)\n    end\n  end\n  aListVertexCurveP1 = a
grlist.FindAllByName(\"AVExtAdvEditorVertexCurveP1\")\n  if (aListVertexCurveP1 <> nil) then\n    for each iaListVertex in aListVertexCurveP1\n      agrlist.RemoveGraphic(iaListVertex)\n    end\n  end\n  aListVertexCurveP2 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP2\")\n  if (aListVertexCurveP2 <> nil) then\n    for each iaListVertex in aListVertexCurveP2\n      agrlist.RemoveGraphic(iaListVertex)\n    end\n  end\n  _AVExtAdvEditorScratchRestore = {_AVExtAdvEditorScratchList,_AVExtAdvEditorScratchListPartNumber,\n
                                 _AVExtAdvEditorScratchListPart,_AVExtAdvEditorScratchListPartPoint}\n  _AVExtAdvEditorScratchList = nil\n  _AVExtAdvEditorClick = nil\n  _AVExtAdvEditorapt = nil\n  _AVExtAdvEditorScrathGr = nil\n  _AVExtAdvEditorScrathGrMouse = nil\n  _AVExtAdvEditorCurGr = nil\n  _AVExtAdvEditoraptL = nil\n  _AVExtAdvEditorScratchListPart = false\n  _AVExtAdvEditorScratchListPartPoint = nil\n  _AVExtAdvEditorAngleEnb = false\n  _AVExtAdvEditorAngleCos = nil\n  _AVExtAdvEditorAngleSin = nil\n  _AVExtAdv
EditorDeflectionEnb = false\n  _AVExtAdvEditorDeflectionCos = nil\n  _AVExtAdvEditorDeflectionSin = nil\n  _AVExtAdvEditorLengthEnb = false\n  _AVExtAdvEditorLengthSet = nil\n  _AVExtAdvEditorScratchListPartNumber = nil\n  av.Run(\"AVExtAdvEditor.StartSnapPointEnd\",nil)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1177
	Owner:	1176
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1178
)

(DocAct.1179
	Doc:	1176
)

(SEd.1180
	Name:	"AVExtAdvEditor.PopUPDelUpd"
	CreationDate:	"18 Май 2004 г. 1:18:24"
	GUIName:	"Script"
	Win:	1181
	CSMgr:	1182
	DocExts:	1183
	Source:	"self.SetEnabled(false)\nif (_AVExtAdvEditorScratchList <> nil) then\n  self.SetEnabled(True)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1181
	Owner:	1180
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1182
)

(DocAct.1183
	Doc:	1180
)

(SEd.1184
	Name:	"AVExtAdvEditor.PopUPFinPart"
	CreationDate:	"10 Май 2004 г. 1:36:05"
	GUIName:	"Script"
	Win:	1185
	CSMgr:	1186
	DocExts:	1187
	Source:	"_AVExtAdvEditorScratchList.Add({\"Part\",\"Part\"})\nif (_AVExtAdvEditorScratchListPartNumber = nil) then\n  _AVExtAdvEditorScratchListPartNumber = {(_AVExtAdvEditorScratchList.Count - 1)}\nelse\n   _AVExtAdvEditorScratchListPartNumber.Add(_AVExtAdvEditorScratchList.Count - 1)\nend\n_AVExtAdvEditorScratchListPart = true\nif (_AVExtAdvEditorDrawClass = \"polygon\") then\n  av.Run(\"AVExtAdvEditor.ToolDrawingPolygon\",nil)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1185
	Owner:	1184
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1186
)

(DocAct.1187
	Doc:	1184
)

(SEd.1188
	Name:	"AVExtAdvEditor.PopUPFinPartUpd"
	CreationDate:	"10 Май 2004 г. 1:41:52"
	GUIName:	"Script"
	Win:	1189
	CSMgr:	1190
	DocExts:	1191
	Source:	"self.SetEnabled(false)\nif (_AVExtAdvEditorScratchList <> nil) then\n  aNum = _AVExtAdvEditorScratchList.Count\n  if (_AVExtAdvEditorScratchListPart) then\n    if (_AVExtAdvEditorScratchList.Get(aNum - 1).Get(1) <> \"Part\") then\n      if (_AVExtAdvEditorScratchList.Get(aNum - 2).Get(1) <> \"Part\") then\n        if (_AVExtAdvEditorScratchList.Get(aNum - 1).Get(0) <> nil) then\n          if (_AVExtAdvEditorDrawClass = \"polygon\") then\n            if (_AVExtAdvEditorScratchList.Get(aNum - 1).Get(1) = \"Curve\") then\n    
          self.SetEnabled(true)\n            elseif (_AVExtAdvEditorScratchList.Get(aNum - 1).Get(1) = \"arc\") then\n              self.SetEnabled(true)\n            else\n              if (_AVExtAdvEditorScratchList.Get(aNum - 3).Get(1) <> \"Part\") then\n                self.SetEnabled(true)\n              end\n            end\n          elseif (_AVExtAdvEditorDrawClass = \"polyline\") then\n            self.SetEnabled(true)\n          end\n        end\n      end\n    end\n  else\n    if (_AVExtAdvEditorScratchList.Get(aNum 
- 1).Get(0) <> nil) then\n      if (_AVExtAdvEditorScratchList.Get(aNum - 1).Get(1) = \"curve\") then\n        self.SetEnabled(true)\n      elseif (_AVExtAdvEditorScratchList.Get(aNum - 1).Get(1) = \"arc\") then\n        self.SetEnabled(true)\n      else\n        if (_AVExtAdvEditorDrawClass = \"polygon\") then\n          if (_AVExtAdvEditorScratchList.Count > 2) then\n            self.SetEnabled(true)\n          end\n        elseif (_AVExtAdvEditorDrawClass = \"polyline\") then\n          if (_AVExtAdvEditorScratchList.Count
 > 1) then\n            self.SetEnabled(true)\n          end\n        end\n      end\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1189
	Owner:	1188
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1190
)

(DocAct.1191
	Doc:	1188
)

(SEd.1192
	Name:	"AVExtAdvEditor.PopUPFinSketch"
	CreationDate:	"11 Май 2004 г. 4:58:57"
	GUIName:	"Script"
	Win:	1193
	CSMgr:	1194
	DocExts:	1195
	Source:	"av.Run(\"AVExtAdvEditor.ToolDrawingStop\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1193
	Owner:	1192
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1194
)

(DocAct.1195
	Doc:	1192
)

(SEd.1196
	Name:	"AVExtAdvEditor.PopUPFinSketchUpd"
	CreationDate:	"11 Май 2004 г. 5:10:35"
	GUIName:	"Script"
	Win:	1197
	CSMgr:	1198
	DocExts:	1199
	Source:	"self.SetEnabled(false)\nif (_AVExtAdvEditorScratchList <> nil) then\n  aNum = _AVExtAdvEditorScratchList.Count\n  if (_AVExtAdvEditorScratchListPart) then\n    if (_AVExtAdvEditorScratchList.Get(aNum - 1).Get(1) = \"Part\") then\n      self.SetEnabled(true)\n    else\n      if (_AVExtAdvEditorScratchList.Get(aNum - 2).Get(1) <> \"Part\") then\n        if (_AVExtAdvEditorScratchList.Get(aNum - 1).Get(1) <> \"Arc\") then\n          if (_AVExtAdvEditorDrawClass = \"polygon\") then\n            if (_AVExtAdvEditorScratchList.Get
(aNum - 1).Get(1) = \"Curve\") then\n              self.SetEnabled(true)\n            else\n              if (_AVExtAdvEditorScratchList.Get(aNum - 3).Get(1) <> \"Part\") then\n                self.SetEnabled(true)\n              end\n            end\n          elseif (_AVExtAdvEditorDrawClass = \"polyline\") then\n            self.SetEnabled(true)\n          end\n        else\n          if (_AVExtAdvEditorScratchList.Get(aNum - 1).Get(0) <> nil) then\n            self.SetEnabled(true)\n          end\n        end\n      end\n   
 end\n  else\n    if (_AVExtAdvEditorScratchList.Get(aNum - 1).Get(1) <> \"Arc\") then\n      if (_AVExtAdvEditorScratchList.Get(aNum - 1).Get(1) = \"curve\") then\n        self.SetEnabled(true)\n      else\n        if (_AVExtAdvEditorDrawClass = \"polygon\") then\n          if (_AVExtAdvEditorScratchList.Count > 2) then\n            self.SetEnabled(true)\n          end\n        elseif (_AVExtAdvEditorDrawClass = \"polyline\") then\n          if (_AVExtAdvEditorScratchList.Count > 1) then\n            self.SetEnabled(true)\n   
       end\n        elseif (_AVExtAdvEditorDrawClass = \"multi\") then\n          if (_AVExtAdvEditorScratchList.Count > 1) then\n            self.SetEnabled(true)\n          end\n        end\n      end\n    else\n      if (_AVExtAdvEditorScratchList.Get(aNum - 1).Get(0) <> nil) then\n        self.SetEnabled(true)\n      end\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1197
	Owner:	1196
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1198
)

(DocAct.1199
	Doc:	1196
)

(SEd.1200
	Name:	"AVExtAdvEditor.PopUpReset"
	CreationDate:	"17 Май 2004 г. 1:38:37"
	GUIName:	"Script"
	Win:	1201
	CSMgr:	1202
	DocExts:	1203
	Source:	"_AVExtAdvEditorAngleEnb = false\n_AVExtAdvEditorAngleCos = nil\n_AVExtAdvEditorAngleSin = nil\n_AVExtAdvEditorDeflectionEnb = false\n_AVExtAdvEditorDeflectionCos = nil\n_AVExtAdvEditorDeflectionSin = nil\n_AVExtAdvEditorLengthEnb = false\n_AVExtAdvEditorLengthSet = nil"
	SearchStr:	"NotEditNumV"
)

(DocWin.1201
	Owner:	1200
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1202
)

(DocAct.1203
	Doc:	1200
)

(SEd.1204
	Name:	"AVExtAdvEditor.PopUPSnap"
	CreationDate:	"18 Май 2004 г. 1:24:55"
	GUIName:	"Script"
	Win:	1205
	CSMgr:	1206
	DocExts:	1207
	Source:	"if (_AVExtAdvEditorScratchList <> nil) then\n  agrlist = _AVExtAdvEditorView.getgraphics\n  aNum = _AVExtAdvEditorScratchList.Count - 1\n  if (_AVExtAdvEditorScratchList.Get(aNum).Get(0) = nil) then\n    _AVExtAdvEditorScratchList.Remove(aNum)\n  end\n  aNewPt = _AVExtAdvEditorScratchList.Get(0).Get(0)\n  _AVExtAdvEditorScratchList.add({aNewPt.clone,\"line\"})\n  if (_AVExtAdvEditorDrawClass = \"polygon\") then\n    av.Run(\"AVExtAdvEditor.ToolDrawingPolygon\",nil)\n  else\n    av.Run(\"AVExtAdvEditor.ToolDrawing\",nil)\n  end
\n  if (_AVExtAdvEditorShowVer) then\n    aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n    if (aVertexEnd <> nil) then\n      if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n        aVertexEnd.SetName(\"AVExtAdvEditorVertexCurve\")\n      else\n        aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n      end\n      aVertexEnd.invalidate\n      aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n      aVertexEnd.invalidate\n      aVertex = GraphicShape.Make(aNewPt.Clon
e)\n      aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n      aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n      aVertex.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n      agrlist.Add(aVertex)\n    end        \n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1205
	Owner:	1204
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1206
)

(DocAct.1207
	Doc:	1204
)

(SEd.1208
	Name:	"AVExtAdvEditor.PopUPSnapPart"
	CreationDate:	"18 Май 2004 г. 1:32:46"
	GUIName:	"Script"
	Win:	1209
	CSMgr:	1210
	DocExts:	1211
	Source:	"if (_AVExtAdvEditorScratchList <> nil) then\n  if (_AVExtAdvEditorScratchListPart = true) then\n    agrlist = _AVExtAdvEditorView.getgraphics\n    aNum = _AVExtAdvEditorScratchList.Count - 1\n    if (_AVExtAdvEditorScratchList.Get(aNum).Get(0) = nil) then\n      _AVExtAdvEditorScratchList.Remove(aNum)\n    end\n    aNewPtNum = _AVExtAdvEditorScratchListPartNumber.Get(_AVExtAdvEditorScratchListPartNumber.Count - 1)\n    if (aNewPtNum = ( _AVExtAdvEditorScratchList.Count - 1)) then\n      if (_AVExtAdvEditorScratchLis
tPartNumber.Count = 1) then\n        aNewPt = _AVExtAdvEditorScratchList.Get(0).Get(0)\n      else\n        aNewPtNum = _AVExtAdvEditorScratchListPartNumber.Get(_AVExtAdvEditorScratchListPartNumber.Count - 2)\n        aNewPt = _AVExtAdvEditorScratchList.Get(aNewPtNum  + 1).Get(0)\n      end\n    else\n      aNewPt = _AVExtAdvEditorScratchList.Get(aNewPtNum  + 1).Get(0)\n    end\n    _AVExtAdvEditorScratchList.add({aNewPt.clone,\"line\"})\n    if (_AVExtAdvEditorDrawClass = \"polygon\") then\n      av.Run(\"AVExtAdvEditor.T
oolDrawingPolygon\",nil)\n    elseif (_AVExtAdvEditorDrawClass = \"polyline\") then\n      av.Run(\"AVExtAdvEditor.ToolDrawing\",nil)\n    end\n    if (_AVExtAdvEditorShowVer) then\n      aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n      if (aVertexEnd <> nil) then\n        if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n          aVertexEnd.SetName(\"AVExtAdvEditorVertexCurve\")\n        else\n          aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n        end\n 
       aVertexEnd.invalidate\n        aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n        aVertexEnd.invalidate\n        aVertex = GraphicShape.Make(aNewPt.Clone)\n        aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n        aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n        aVertex.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n        agrlist.Add(aVertex)\n      end        \n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1209
	Owner:	1208
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1210
)

(DocAct.1211
	Doc:	1208
)

(SEd.1212
	Name:	"AVExtAdvEditor.ProjDocAct"
	CreationDate:	"8 Май 2004 г. 18:28:27"
	GUIName:	"Script"
	Win:	1213
	CSMgr:	1214
	DocExts:	1215
	Source:	"return nil"
	SearchStr:	"NotEditNumV"
)

(DocWin.1213
	Owner:	1212
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1214
)

(DocAct.1215
	Doc:	1212
)

(SEd.1216
	Name:	"AVExtAdvEditor.ProjDocUpd"
	CreationDate:	"26 Апрель 2004 г. 3:35:38"
	GUIName:	"Script"
	Win:	1217
	CSMgr:	1218
	DocExts:	1219
	Source:	"self.SetEnabled(false)\nself.SetVisible(false)\nself.SetLabel(\"Editor\")"
	SearchStr:	"NotEditNumV"
)

(DocWin.1217
	Owner:	1216
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1218
)

(DocAct.1219
	Doc:	1216
)

(SEd.1220
	Name:	"AVExtAdvEditor.RestoreSketch"
	CreationDate:	"21 Июнь 2004 г. 3:43:06"
	GUIName:	"Script"
	Win:	1221
	CSMgr:	1222
	DocExts:	1223
	Source:	"_AVExtAdvEditorScratchList = _AVExtAdvEditorScratchRestore.Get(0)\n_AVExtAdvEditorScratchListPartNumber = _AVExtAdvEditorScratchRestore.Get(1)\n_AVExtAdvEditorScratchListPart = _AVExtAdvEditorScratchRestore.Get(2)\n_AVExtAdvEditorScratchListPartPoint = _AVExtAdvEditorScratchRestore.Get(3)\nav.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEPen\").Select\nav.GetProject.FindGUI(\"AVExtAdvEditView\").Update\nav.DelayedRun(\"AVExtAdvEditor.RestoreSketchPart2\",nil,0)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1221
	Owner:	1220
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1222
)

(DocAct.1223
	Doc:	1220
)

(SEd.1224
	Name:	"AVExtAdvEditor.RestoreSketchLoad"
	CreationDate:	"23 Июнь 2004 г. 3:25:14"
	GUIName:	"Script"
	Win:	1225
	CSMgr:	1226
	DocExts:	1227
	Source:	"aFN = FileDialog.Show(\"*.odb\",\"ODB\",\"Load Sketch From File (ODB)\")\nif (aFN <> nil) then\n  MyODb = ODB.Open(aFN)\n  if (MyODb.Get(0) = \"Save Sketch\") then\n    _AVExtAdvEditorScratchList = MyODb.Get(1)\n    _AVExtAdvEditorScratchListPartNumber = MyODb.Get(2)\n    _AVExtAdvEditorScratchListPart = MyODb.Get(3)\n    _AVExtAdvEditorScratchListPartPoint = MyODb.Get(4)\n    av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEPen\").Select\n    av.GetProject.FindGUI(\"AVExtAdvEditView\").Update\n    av.DelayedR
un(\"AVExtAdvEditor.RestoreSketchPart2\",nil,0)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1225
	Owner:	1224
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1226
)

(DocAct.1227
	Doc:	1224
)

(SEd.1228
	Name:	"AVExtAdvEditor.RestoreSketchPart2"
	CreationDate:	"21 Июнь 2004 г. 4:13:58"
	GUIName:	"Script"
	Win:	1229
	CSMgr:	1230
	DocExts:	1231
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScrathGrMouse <> nil) then\n  agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\nend\nif (_AVExtAdvEditorCurGr <> nil) then\n   agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\nend\nif (_AVExtAdvEditorScrathGr <> nil) then\n  agrlist.RemoveGraphic(_AVExtAdvEditorScrathGr)\nend\n_AVExtAdvEditorClick = nil\n_AVExtAdvEditorapt = nil\n_AVExtAdvEditorScrathGr = nil\n_AVExtAdvEditorScrathGrMouse = nil\n_AVExtAdvEditorCurGr = nil\n_AVExtAdvEditoraptL = nil\naListVertex =
 agrlist.FindAllByName(\"AVExtAdvEditorVertex\")\nif (aListVertex <> nil) then\n  for each iaListVertex in aListVertex\n    agrlist.RemoveGraphic(iaListVertex)\n  end\nend\naListVertexEnd = agrlist.FindAllByName(\"AVExtAdvEditorVertexEnd\")\nif (aListVertexEnd <> nil) then\n  for each iaListVertexEnd in aListVertexEnd\n    agrlist.RemoveGraphic(iaListVertexEnd)\n  end\nend\naListVertexCurve = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurve\")\nif (aListVertexCurve <> nil) then\n  for each iaListVertex in aListVertexCurve\n   
 agrlist.RemoveGraphic(iaListVertex)\n  end\nend\naListVertexCurveP1 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP1\")\nif (aListVertexCurveP1 <> nil) then\n  for each iaListVertex in aListVertexCurveP1\n    agrlist.RemoveGraphic(iaListVertex)\n  end\nend\naListVertexCurveP2 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP2\")\nif (aListVertexCurveP2 <> nil) then\n  for each iaListVertex in aListVertexCurveP2\n    agrlist.RemoveGraphic(iaListVertex)\n  end\nend\nif (_AVExtAdvEditorDrawClass = \"multi\") then\n  \nelse\n
  if (_AVExtAdvEditorDrawClass = \"polygon\") then\n    av.Run(\"AVExtAdvEditor.ToolDrawingPolygon\",nil)\n  elseif (_AVExtAdvEditorDrawClass = \"polyline\") then\n    av.Run(\"AVExtAdvEditor.ToolDrawing\",nil)\n  end\n  if (_AVExtAdvEditorShowVer) then\n    if (_AVExtAdvEditorScratchList <> nil) then    \n      aNum = _AVExtAdvEditorScratchList.Count - 1\n      if (_AVExtAdvEditorScratchList.Get(aNum).Get(0) = nil) then\n        _AVExtAdvEditorScratchList.Remove(aNum)\n      end\n      aNum = _AVExtAdvEditorScratchList.Count
 - 1\n      iSLN = 0\n      for each iSL in _AVExtAdvEditorScratchList\n        if (iSLN <> aNum) then\n          if (iSL.Get(1) = \"line\") then\n            aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n            aVertex.SetName(\"AVExtAdvEditorVertex\")\n            aVertex.SetSymbol(_AVExtAdvEditorVertex)\n            aVertex.SetObjectTag(iSLN)\n            agrlist.Add(aVertex)\n          elseif (iSL.Get(1) = \"Stream\") then\n            aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n            aVertex.SetName(\"AVEx
tAdvEditorVertex\")\n            aVertex.SetSymbol(_AVExtAdvEditorVertex)\n            aVertex.SetObjectTag(iSLN)\n            agrlist.Add(aVertex)\n          elseif (iSL.Get(1) = \"Curve\") then\n            aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n            aVertex.SetName(\"AVExtAdvEditorVertexCurve\")\n            aVertex.SetSymbol(_AVExtAdvEditorVertex)\n            aVertex.SetObjectTag(iSLN)\n            agrlist.Add(aVertex)\n            aVertexP1 = GraphicShape.Make(iSL.Get(2).Clone)\n            aVertexP1.S
etName(\"AVExtAdvEditorVertexCurveP1\")\n            aVertexP1.SetSymbol(_AVExtAdvEditorVertexArc)\n            aVertexP1.SetObjectTag(iSLN)\n            agrlist.Add(aVertexP1)\n            aVertexP2 = GraphicShape.Make(iSL.Get(3).Clone)\n            aVertexP2.SetName(\"AVExtAdvEditorVertexCurveP2\")\n            aVertexP2.SetSymbol(_AVExtAdvEditorVertexArc)\n            aVertexP2.SetObjectTag(iSLN)\n            agrlist.Add(aVertexP2)\n          end\n        else\n          if (iSL.Get(1) = \"line\") then\n            aVerte
x = GraphicShape.Make(iSL.Get(0).Clone)\n            aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n            aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n            aVertex.SetObjectTag(iSLN)\n            agrlist.Add(aVertex)\n          elseif (iSL.Get(1) = \"Stream\") then\n            aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n            aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n            aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n            aVertex.SetObjectTag(iSLN)\n            agrlist.Add(aVertex)\n  
        elseif (iSL.Get(1) = \"Curve\") then\n            aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n            aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n            aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n            aVertex.SetObjectTag(iSLN)\n            agrlist.Add(aVertex)\n            aVertexP1 = GraphicShape.Make(iSL.Get(2).Clone)\n            aVertexP1.SetName(\"AVExtAdvEditorVertexCurveP1\")\n            aVertexP1.SetSymbol(_AVExtAdvEditorVertexArc)\n            aVertexP1.SetObjectTag(iSLN)\n        
    agrlist.Add(aVertexP1)\n            aVertexP2 = GraphicShape.Make(iSL.Get(3).Clone)\n            aVertexP2.SetName(\"AVExtAdvEditorVertexCurveP2\")\n            aVertexP2.SetSymbol(_AVExtAdvEditorVertexArc)\n            aVertexP2.SetObjectTag(iSLN)\n            agrlist.Add(aVertexP2)\n          end\n        end\n        iSLN = iSLN + 1\n      end\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1229
	Owner:	1228
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1230
)

(DocAct.1231
	Doc:	1228
)

(SEd.1232
	Name:	"AVExtAdvEditor.RestoreSketchSave"
	CreationDate:	"23 Июнь 2004 г. 3:17:28"
	GUIName:	"Script"
	Win:	1233
	CSMgr:	1234
	DocExts:	1235
	Source:	"aFN = FileDialog.Put(\"Sketch1.odb\".AsFileName,\"*.odb\",\"Save Sketch To File (ODB)\")\nif (aFN <> nil) then\n  aFN.SetExtension(\"odb\")\n  if (_AVExtAdvEditorScratchList <> nil) then\n    Myodb = ODB.Make(aFN)\n    Myodb.Add(\"Save Sketch\")\n    Myodb.Add(_AVExtAdvEditorScratchList)\n    Myodb.Add(_AVExtAdvEditorScratchListPartNumber)\n    Myodb.Add(_AVExtAdvEditorScratchListPart)\n    Myodb.Add(_AVExtAdvEditorScratchListPartPoint)\n    Myodb.Commit\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1233
	Owner:	1232
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1234
)

(DocAct.1235
	Doc:	1232
)

(SEd.1236
	Name:	"AVExtAdvEditor.RestoreSketchSaveUpd"
	CreationDate:	"23 Июнь 2004 г. 3:36:19"
	GUIName:	"Script"
	Win:	1237
	CSMgr:	1238
	DocExts:	1239
	Source:	"Self.Setenabled(false)\nif (_AVExtAdvEditorScratchList <> nil) then\n  Self.Setenabled(true)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1237
	Owner:	1236
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1238
)

(DocAct.1239
	Doc:	1236
)

(SEd.1240
	Name:	"AVExtAdvEditor.RestoreSketchUpd"
	CreationDate:	"23 Июнь 2004 г. 1:16:45"
	GUIName:	"Script"
	Win:	1241
	CSMgr:	1242
	DocExts:	1243
	Source:	"Self.Setenabled(false)\nif (_AVExtAdvEditorScratchRestore <> nil) then\n  Self.Setenabled(true)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1241
	Owner:	1240
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1242
)

(DocAct.1243
	Doc:	1240
)

(SEd.1244
	Name:	"AVExtAdvEditor.RotateAp"
	CreationDate:	"13 Июль 2004 г. 23:00:19"
	GUIName:	"Script"
	Win:	1245
	CSMgr:	1246
	DocExts:	1247
	Source:	"aAngStr = self.GetText\nif (aAngStr.IsNumber) then\n  thePrjView = _AVExtAdvEditorView.GetProjection\n  agrlist = _AVExtAdvEditorView.getgraphics\n  agrlist.SetNumberFormat(\"dd.dddddddddddddddddddddddddddd\")\n  Script.The.SetNumberFormat(\"dd.dddddddddddddddddddddddddddd\")\n  aAng = aAngStr.AsNumber\n  aListVertex = agrlist.FindByName(\"AVExtAdvEditorSelectingCenter\")\n  if (aListVertex <> nil) then\n    centerPt = aListVertex.GetShape\n    cX = centerPt.GetX\n    cY = centerPt.GetY\n    aThList = _AVExtAdvEditorList.Ret
urnKeys\n    for each iThemes in aThList\n      if (_AVExtAdvEditorList.Get(iThemes) = 1) then\n        aFTab = iThemes.GetFTab\n        if (aFTab.IsEditable) then\n          aSF = aFTab.FindField(\"Shape\")\n          if (aSF <> nil) then\n            aSel = aFTAb.GetSelection\n            if (aSel.Count > 0) then\n              aFTab.BeginTransaction\n              moveX = 0 - cX\n              moveY = 0 - cY\n              aTrans = Transform2D.Make\n              aTrans.Move(moveX@moveY)\n              aTrans.Rotate(-aA
ng)\n              aTrans.Move(cX@cY)\n              for each i in aSel\n                aShape = aFtab.ReturnValue(aSf,i)\n                if (thePrjView.IsNull.Not) then\n                  aShape = aShape.Returnprojected(thePrjView)\n                end\n                aShape.Transform (aTrans)\n                if (thePrjView.IsNull.Not) then\n                  aShape = aShape.ReturnUnprojected(thePrjView)\n                end\n                aFtab.SetValue(aSf,i,aShape)\n              end \n              aFTab.EndT
ransaction   \n              iThemes.Invalidate(true)  \n            end\n          end\n        end\n      end\n    end\n    av.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)\n  end\nend\n"
	SearchStr:	"NotEditNumV"
)

(DocWin.1245
	Owner:	1244
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1246
)

(DocAct.1247
	Doc:	1244
)

(SEd.1248
	Name:	"AVExtAdvEditor.RotateOpen"
	CreationDate:	"13 Июль 2004 г. 23:14:38"
	GUIName:	"Script"
	Win:	1249
	CSMgr:	1250
	DocExts:	1251
	Source:	"aDil = av.FindDialog(\"AVExtAdvEditor.NRotate\")\naDil.FindByName(\"aTL\").SetText(\"0\")\naDil.Open"
	SearchStr:	"NotEditNumV"
)

(DocWin.1249
	Owner:	1248
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1250
)

(DocAct.1251
	Doc:	1248
)

(DEd.1252
	Name:	"AVExtAdvEditor.Selectable"
	CreationDate:	"26 Апрель 2004 г. 0:46:38"
	GUIName:	"DialogEditor"
	Win:	1253
	CSMgr:	1254
	DocExts:	1256
	DocExts:	1257
	Graphics:	1258
	Dpy:	1264
	Dialog:	1267
	DialogExtent:	1273
	Compiled:	1
)

(DocWin.1253
	Owner:	1252
	X:	-4
	Y:	-4
	W:	1290
	H:	899
)

(CSMgr.1254
	Client:	1255
)

(CSClient.1255
	Client:	1256
	ReqName:	"ClientNfy"
)

(PanMgr.1256
	Doc:	1252
)

(DocAct.1257
	Doc:	1252
)

(GList.1258
	Child:	1259
	Dpy:	1264
	FormatNumb:	1266
)

(GCtrl.1259
	Name:	"aLBT"
	Bounds:	1260
	Control:	1261
	Editable:	1
)

(RectD.1260
	Left:	2.30208333333333
	Top:	7.61458333333333
	Right:	4.32291666666667
	Bottom:	6.16666666666667
)

(AVLBox.1261
	InternalName:	"aLBT"
	UseGraphicNfy:	1
	NextControl:	1262
	ContentKind:	4
	Constraints:	0x55
	ColumnCount:	1
	Listening:	1
	VerticalScroll:	1
	Select:	"AVExtAdvEditor.SelectableSelect"
	SelectionStyle:	1263
)

(Nil.1262
)

(AVEnum.1263
	Name:	"LISTBOX_SELECTION_SINGLEROW"
)

(PageDpy.1264
	Top:	9.10416666666667
	Right:	13.36458333333333
	ReportUnits:	1
	Units:	1
	Scale:	1265
	ZoomRight:	13.36458333333333
	ZoomTop:	9.10416666666667
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.1265
	N:	0.07482462977397
)

(Numb.1266
)

(AVDLog.1267
	Name:	"AVExtAdvEditor.Selectable"
	X:	221
	Y:	161
	W:	198
	H:	145
	Server:	32
	ControlPanel:	1268
	Title:	"Set Selectable Themes"
	EscapeEnabled:	1
	Resizable:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	Close:	"AVExtAdvEditor.DialogClose"
	Open:	"AVExtAdvEditor.SelectableOpen"
	DefaultButton:	1272
)

(CPanel.1268
	Child:	1269
	ResBox:	1271
	Listening:	1
)

(AVLBox.1269
	InternalName:	"aLBT"
	NextControl:	105
	ContentKind:	4
	ColumnCount:	1
	Listening:	1
	VerticalScroll:	1
	Select:	"AVExtAdvEditor.SelectableSelect"
	SelectionStyle:	1270
)

(AVEnum.1270
	Name:	"LISTBOX_SELECTION_SINGLEROW"
)

(RectD.1271
	Left:	3.00000000000000
	Top:	143.00000000000000
	Right:	197.00000000000000
	Bottom:	4.00000000000000
)

(Nil.1272
)

(RectD.1273
	Left:	2.27083333333333
	Top:	7.65625000000000
	Right:	4.33333333333333
	Bottom:	6.14583333333333
)

(SEd.1274
	Name:	"AVExtAdvEditor.SelectableOpen"
	CreationDate:	"17 Май 2004 г. 20:00:58"
	GUIName:	"Script"
	Win:	1275
	CSMgr:	1276
	DocExts:	1277
	Source:	"aLBT = self.FindByName(\"aLBT\")\naList = {}\naLIstK = _AVExtAdvEditorView.GetThemes\naList.Add({\"Themes\",\"Selectable\"})\nfor each i in aListK  \n  aListE = _AVExtAdvEditorSelectable.Get(i)\n  if (aListE <> nil) then\n    if (aListE = 1) then\n      x = _AVExtAdvEditorIceb\n    else\n      x = _AVExtAdvEditorIcebf\n    end\n    aList.Add({i,x})\n  end\nend\naLBT.DefineFromList(aList)\naLBT.GoColumn(0)\naLBT.SetColumnWidth(60)\naLBT.GoColumn(1)\naLBT.SetColumnWidth(40)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1275
	Owner:	1274
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1276
)

(DocAct.1277
	Doc:	1274
)

(SEd.1278
	Name:	"AVExtAdvEditor.SelectableSelect"
	CreationDate:	"17 Май 2004 г. 20:21:56"
	GUIName:	"Script"
	Win:	1279
	CSMgr:	1280
	DocExts:	1281
	Source:	"thePrjView = _AVExtAdvEditorView.GetProjection\nagrlist = _AVExtAdvEditorView.getgraphics\naListRect = \"\"\nif (self.GetSelection.Get(1) = \"Selectable\") then\n  self.SetSelection(Rect.MakeEmpty,false)\n  return nil\nend\naTheme = self.GetSelection.Get(0)\naVal = self.GetSelection.Get(1)\nif (aVal = _AVExtAdvEditorIceb) then\n  _AVExtAdvEditorSelectable.Set(aTheme,0)\nelse\n  _AVExtAdvEditorSelectable.Set(aTheme,1)\nend\naList = {}\naLIstK = _AVExtAdvEditorView.GetThemes\naList.Add({\"Themes\",\"Selectable\"})\nfor each i in aLis
tK\n  aListE = _AVExtAdvEditorSelectable.Get(i)\n  if (aLIstE <> nil) then\n    if (aListE = 1) then\n      x = _AVExtAdvEditorIceb\n    else\n      x = _AVExtAdvEditorIcebf\n    end\n    aList.Add({i,x})\n  end\nend\nself.DefineFromList(aList)\nself.GoColumn(0)\nself.SetColumnWidth(60)\nself.GoColumn(1)\nself.SetColumnWidth(40)\naThemesList = _AVExtAdvEditorSelectableBitmap.ReturnKeys\nfor each ithemes in aThemesList\n  _AVExtAdvEditorSelectableBitmap.Set(ithemes,ithemes.GetFTab.GetSelection.clone)\n  aListVertex = agrlist.F
indAllByName(\"AVExtAdvEditorSelecting\")\n  if (aListVertex <> nil) then\n    for each igraph in aListVertex\n      if (igraph.getobjecttag.Get(0) = ithemes) then\n        agrlist.RemoveGraphic(igraph)\n      end\n    end\n  end\n  aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelectingCenter\")\n  if (aListVertex <> nil) then\n    for each igraph in aListVertex\n      agrlist.RemoveGraphic(igraph)\n    end\n  end\n  if (ithemes.GetFTab.IsEditable) then\n    if (_AVExtAdvEditorSelectable.Get(ithemes) = 1) then\n      if
 (ithemes.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOINT) then\n        aFTab = ithemes.GetFTab\n        aShapeField = aFTab.FindField(\"Shape\")\n        if (ithemes.IsVisible) then\n          for each ibit in aFTab.GetSelection\n            aShape = aFTab.ReturnValue(aShapeField,ibit)\n            if (thePrjView.IsNull.Not) then\n              aShape = aShape.Returnprojected(thePrjView)\n            end\n            aNewGraph = GraphicShape.Make(aShape)\n            aNewGraph.SetName(\"AVExtAdvEditorSelecting\"
)\n            aNewGraph.SetObjectTag({ithemes,ibit.clone})\n            aNewGraph.SetSymbol(_AVExtAdvEditorSelectionPoint)\n            agrlist.Add(aNewGraph)\n            if (aListRect = \"\") then\n              aListRect = aShape.ReturnExtent\n            else\n              aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n            end\n          end\n        else\n          for each ibit in aFTab.GetSelection\n            aShape = aFTab.ReturnValue(aShapeField,ibit)\n            if (thePrjView.IsNull.Not) the
n\n              aShape = aShape.Returnprojected(thePrjView)\n            end\n            if (aListRect = \"\") then\n              aListRect = aShape.ReturnExtent\n            else\n              aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n            end\n          end\n        end\n      elseif (ithemes.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n        aFTab = ithemes.GetFTab\n        aShapeField = aFTab.FindField(\"Shape\")\n        if (ithemes.IsVisible) then\n          for each ibit in aFT
ab.GetSelection\n            aShape = aFTab.ReturnValue(aShapeField,ibit)\n            if (thePrjView.IsNull.Not) then\n              aShape = aShape.Returnprojected(thePrjView)\n            end\n            aNewGraph = GraphicShape.Make(aShape.AsPolyline)\n            aNewGraph.SetName(\"AVExtAdvEditorSelecting\")\n            aNewGraph.SetObjectTag({ithemes,ibit.clone})\n            aNewGraph.SetSymbol(_AVExtAdvEditorSelectionSketch)\n            agrlist.Add(aNewGraph)\n            if (aListRect = \"\") then\n          
    aListRect = aShape.ReturnExtent\n            else\n              aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n            end\n          end\n        else\n          for each ibit in aFTab.GetSelection\n            aShape = aFTab.ReturnValue(aShapeField,ibit)\n            if (thePrjView.IsNull.Not) then\n              aShape = aShape.Returnprojected(thePrjView)\n            end\n            if (aListRect = \"\") then\n              aListRect = aShape.ReturnExtent\n            else\n              aListRect = aL
istRect.UnionWith(aShape.ReturnExtent)\n            end\n          end\n        end\n      elseif (ithemes.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPELINE) then\n        aFTab = ithemes.GetFTab\n        aShapeField = aFTab.FindField(\"Shape\")\n        if (ithemes.IsVisible) then\n          for each ibit in aFTab.GetSelection\n            aShape = aFTab.ReturnValue(aShapeField,ibit)\n            if (thePrjView.IsNull.Not) then\n              aShape = aShape.Returnprojected(thePrjView)\n            end\n            a
NewGraph = GraphicShape.Make(aShape)\n            aNewGraph.SetName(\"AVExtAdvEditorSelecting\")\n            aNewGraph.SetObjectTag({ithemes,ibit.clone})\n            aNewGraph.SetSymbol(_AVExtAdvEditorSelectionSketch)\n            agrlist.Add(aNewGraph)\n            if (aListRect = \"\") then\n              aListRect = aShape.ReturnExtent\n            else\n              aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n            end\n          end\n        else\n          for each ibit in aFTab.GetSelection\n      
      aShape = aFTab.ReturnValue(aShapeField,ibit)\n            if (thePrjView.IsNull.Not) then\n              aShape = aShape.Returnprojected(thePrjView)\n            end\n            if (aListRect = \"\") then\n              aListRect = aShape.ReturnExtent\n            else\n              aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n            end\n          end\n        end\n      elseif(ithemes.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEMULTIPOINT) then\n        aFTab = ithemes.GetFTab\n        aShapeF
ield = aFTab.FindField(\"Shape\")\n        if (ithemes.IsVisible) then\n          for each ibit in aFTab.GetSelection\n            aShape = aFTab.ReturnValue(aShapeField,ibit)\n            if (thePrjView.IsNull.Not) then\n              aShape = aShape.Returnprojected(thePrjView)\n            end\n            aNewGraph = GraphicShape.Make(aShape)\n            aNewGraph.SetName(\"AVExtAdvEditorSelecting\")\n            aNewGraph.SetObjectTag({ithemes,ibit.clone})\n            aNewGraph.SetSymbol(_AVExtAdvEditorSelectionPoi
nt)\n            agrlist.Add(aNewGraph)\n            if (aListRect = \"\") then\n              aListRect = aShape.ReturnExtent\n            else\n              aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n            end\n          end\n        else\n          for each ibit in aFTab.GetSelection\n            aShape = aFTab.ReturnValue(aShapeField,ibit)\n            if (thePrjView.IsNull.Not) then\n              aShape = aShape.Returnprojected(thePrjView)\n            end\n            if (aListRect = \"\") then\n     
         aListRect = aShape.ReturnExtent\n            else\n              aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n            end\n          end\n        end\n      end\n    end\n  end\n  if (aListRect <> \"\") then\n    aNewGraph = GraphicShape.Make(aListRect.ReturnCenter)\n    aNewGraph.SetName(\"AVExtAdvEditorSelectingCenter\")\n    aNewGraph.SetSymbol(_AVExtAdvEditorSelectionCenter)\n    agrlist.Add(aNewGraph)\n  end\nend\nav.GetProject.FindGUI(\"AVExtAdvEditView\").Update"
	SearchStr:	"NotEditNumV"
)

(DocWin.1279
	Owner:	1278
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1280
)

(DocAct.1281
	Doc:	1278
)

(SEd.1282
	Name:	"AVExtAdvEditor.SelectEditUpd"
	CreationDate:	"1 Май 2004 г. 3:49:20"
	GUIName:	"Script"
	Win:	1283
	CSMgr:	1284
	DocExts:	1285
	Source:	"thePrjView = _AVExtAdvEditorView.GetProjection\nagrlist = _AVExtAdvEditorView.getgraphics\naListRect = \"\"\naThemesList = _AVExtAdvEditorSelectableBitmap.ReturnKeys\nithemesrealvisval = 0\nfor each ithemes in aThemesList\n  if (ithemes.IsVisible) then\n    ithemesrealvis = 1\n  else\n    ithemesrealvis = 0\n  end\n  if (ithemesrealvis <> _AVExtAdvEditorVisible.GEt(ithemes)) then\n    ithemesrealvisval = 1\n    break\n  end\n  if (ithemes.GetFTab.GetSelection <> _AVExtAdvEditorSelectableBitmap.Get(ithemes)) then\n    if (av.
FindDialog(\"AVExtAdvEditor.Attrib\").ISOpen) then\n      av.Run(\"AVExtAdvEditor.AttributUpd\",nil)\n    end\n    ithemesrealvisval = 1\n    break\n  end\nend\nif (ithemesrealvisval = 1) then\n  aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelectingCenter\")\n  if (aListVertex <> nil) then\n    for each igraph in aListVertex\n      agrlist.RemoveGraphic(igraph)\n    end\n  end\n  aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelecting\")\n  if (aListVertex <> nil) then\n    for each igraph in aListVertex\n      agrlis
t.RemoveGraphic(igraph)\n    end\n  end\n  for each ithemes in aThemesList\n    _AVExtAdvEditorSelectableBitmap.Set(ithemes,ithemes.GetFTab.GetSelection.clone)    \n    if (ithemes.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorSelectable.GEt(ithemes) = 1) then\n        if (ithemes.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOINT) then\n          aFTab = ithemes.GetFTab\n          aShapeField = aFTab.FindField(\"Shape\")\n          if (ithemes.IsVisible) then\n            for each ibit in aFTab.GetSelection\n  
            aShape = aFTab.ReturnValue(aShapeField,ibit)\n              if (thePrjView.IsNull.Not) then\n                aShape = aShape.Returnprojected(thePrjView)\n              end\n              aNewGraph = GraphicShape.Make(aShape)\n              aNewGraph.SetName(\"AVExtAdvEditorSelecting\")\n              aNewGraph.SetObjectTag({ithemes,ibit.clone})\n              aNewGraph.SetSymbol(_AVExtAdvEditorSelectionPoint)\n              agrlist.Add(aNewGraph)\n              if (aListRect = \"\") then\n                aLis
tRect = aShape.ReturnExtent\n              else\n                aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n              end\n            end\n          else\n            for each ibit in aFTab.GetSelection\n              aShape = aFTab.ReturnValue(aShapeField,ibit)\n              if (thePrjView.IsNull.Not) then\n                aShape = aShape.Returnprojected(thePrjView)\n              end\n              if (aListRect = \"\") then\n                aListRect = aShape.ReturnExtent\n              else\n          
      aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n              end\n            end\n          end\n        elseif (ithemes.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n          aFTab = ithemes.GetFTab\n          aShapeField = aFTab.FindField(\"Shape\")\n          if (ithemes.IsVisible) then\n            for each ibit in aFTab.GetSelection\n              aShape = aFTab.ReturnValue(aShapeField,ibit)\n              if (thePrjView.IsNull.Not) then\n                aShape = aShape.Returnprojected
(thePrjView)\n              end\n              aNewGraph = GraphicShape.Make(aShape.AsPolyline)\n              aNewGraph.SetName(\"AVExtAdvEditorSelecting\")\n              aNewGraph.SetObjectTag({ithemes,ibit.clone})\n              aNewGraph.SetSymbol(_AVExtAdvEditorSelectionSketch)\n              agrlist.Add(aNewGraph)\n              if (aListRect = \"\") then\n                aListRect = aShape.ReturnExtent\n              else\n                aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n              end\n    
        end\n          else\n            for each ibit in aFTab.GetSelection\n              aShape = aFTab.ReturnValue(aShapeField,ibit)\n              if (thePrjView.IsNull.Not) then\n                aShape = aShape.Returnprojected(thePrjView)\n              end\n              if (aListRect = \"\") then\n                aListRect = aShape.ReturnExtent\n              else\n                aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n              end\n            end\n          end\n        elseif (ithemes.GetFTab
.FindField(\"Shape\").GetType = #FIELD_SHAPELINE) then\n          aFTab = ithemes.GetFTab\n          aShapeField = aFTab.FindField(\"Shape\")\n          if (ithemes.IsVisible) then\n            for each ibit in aFTab.GetSelection\n              aShape = aFTab.ReturnValue(aShapeField,ibit)\n              if (thePrjView.IsNull.Not) then\n                aShape = aShape.Returnprojected(thePrjView)\n              end\n              aNewGraph = GraphicShape.Make(aShape)\n              aNewGraph.SetName(\"AVExtAdvEditorSelectin
g\")\n              aNewGraph.SetObjectTag({ithemes,ibit.clone})\n              aNewGraph.SetSymbol(_AVExtAdvEditorSelectionSketch)\n              agrlist.Add(aNewGraph)\n              if (aListRect = \"\") then\n                aListRect = aShape.ReturnExtent\n              else\n                aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n              end\n            end\n          else\n            for each ibit in aFTab.GetSelection\n              aShape = aFTab.ReturnValue(aShapeField,ibit)\n              i
f (thePrjView.IsNull.Not) then\n                aShape = aShape.Returnprojected(thePrjView)\n              end\n              if (aListRect = \"\") then\n                aListRect = aShape.ReturnExtent\n              else\n                aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n              end\n            end\n          end\n        elseif(ithemes.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEMULTIPOINT) then\n          aFTab = ithemes.GetFTab\n          aShapeField = aFTab.FindField(\"Shape\")\n        
  if (ithemes.IsVisible) then\n            for each ibit in aFTab.GetSelection\n              aShape = aFTab.ReturnValue(aShapeField,ibit)\n              if (thePrjView.IsNull.Not) then\n                aShape = aShape.Returnprojected(thePrjView)\n              end\n              aNewGraph = GraphicShape.Make(aShape)\n              aNewGraph.SetName(\"AVExtAdvEditorSelecting\")\n              aNewGraph.SetObjectTag({ithemes,ibit.clone})\n              aNewGraph.SetSymbol(_AVExtAdvEditorSelectionPoint)\n              ag
rlist.Add(aNewGraph)\n              if (aListRect = \"\") then\n                aListRect = aShape.ReturnExtent\n              else\n                aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n              end\n            end\n          else\n            for each ibit in aFTab.GetSelection\n              aShape = aFTab.ReturnValue(aShapeField,ibit)\n              if (thePrjView.IsNull.Not) then\n                aShape = aShape.Returnprojected(thePrjView)\n              end\n              if (aListRect = \"\") th
en\n                aListRect = aShape.ReturnExtent\n              else\n                aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n              end\n            end\n          end\n        end\n      end\n    end\n  end\n  if (aListRect <> \"\") then\n    aNewGraph = GraphicShape.Make(aListRect.ReturnCenter)\n    aNewGraph.SetName(\"AVExtAdvEditorSelectingCenter\")\n    aNewGraph.SetSymbol(_AVExtAdvEditorSelectionCenter)\n    agrlist.Add(aNewGraph)\n  end\nend\naThemesListVisible = _AVExtAdvEditorVisible.ReturnKeys\n
for each ithemesvis in aThemesListVisible\n  if (ithemesvis.IsVisible) then\n    _AVExtAdvEditorVisible.Set(ithemesvis,1)\n  else\n    _AVExtAdvEditorVisible.Set(ithemesvis,0)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1283
	Owner:	1282
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1284
)

(DocAct.1285
	Doc:	1282
)

(DEd.1286
	Name:	"AVExtAdvEditor.Snap"
	CreationDate:	"26 Апрель 2004 г. 0:46:38"
	GUIName:	"DialogEditor"
	Win:	1287
	CSMgr:	1288
	DocExts:	1290
	DocExts:	1291
	Graphics:	1292
	Dpy:	1298
	Dialog:	1301
	DialogExtent:	1307
	Compiled:	1
)

(DocWin.1287
	Owner:	1286
	X:	-4
	Y:	-4
	W:	1290
	H:	899
)

(CSMgr.1288
	Client:	1289
)

(CSClient.1289
	Client:	1290
	ReqName:	"ClientNfy"
)

(PanMgr.1290
	Doc:	1286
)

(DocAct.1291
	Doc:	1286
)

(GList.1292
	Child:	1293
	Dpy:	1298
	FormatNumb:	1300
)

(GCtrl.1293
	Name:	"aLBT"
	Bounds:	1294
	Control:	1295
	Editable:	1
)

(RectD.1294
	Left:	0.09375000000000
	Top:	5.34375000000000
	Right:	2.11458333333333
	Bottom:	3.89583333333333
)

(AVLBox.1295
	InternalName:	"aLBT"
	UseGraphicNfy:	1
	NextControl:	1296
	ContentKind:	4
	Constraints:	0x55
	ColumnCount:	1
	Listening:	1
	VerticalScroll:	1
	Select:	"AVExtAdvEditor.SnapSelect"
	SelectionStyle:	1297
)

(Nil.1296
)

(AVEnum.1297
	Name:	"LISTBOX_SELECTION_SINGLEROW"
)

(PageDpy.1298
	Top:	9.10416666666667
	Right:	13.36458333333333
	ReportUnits:	1
	Units:	1
	Scale:	1299
	ZoomRight:	13.36458333333333
	ZoomTop:	9.10416666666667
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.1299
	N:	0.07482462977397
)

(Numb.1300
)

(AVDLog.1301
	Name:	"AVExtAdvEditor.Snap"
	X:	9
	Y:	379
	W:	198
	H:	145
	Server:	32
	ControlPanel:	1302
	Title:	"Snapping Environment"
	EscapeEnabled:	1
	Resizable:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	Close:	"AVExtAdvEditor.DialogClose"
	Open:	"AVExtAdvEditor.SnapOpen"
	DefaultButton:	1306
)

(CPanel.1302
	Child:	1303
	ResBox:	1305
	Listening:	1
)

(AVLBox.1303
	InternalName:	"aLBT"
	NextControl:	105
	ContentKind:	4
	ColumnCount:	1
	Listening:	1
	VerticalScroll:	1
	Select:	"AVExtAdvEditor.SnapSelect"
	SelectionStyle:	1304
)

(AVEnum.1304
	Name:	"LISTBOX_SELECTION_SINGLEROW"
)

(RectD.1305
	Left:	3.00000000000000
	Top:	143.00000000000000
	Right:	197.00000000000000
	Bottom:	4.00000000000000
)

(Nil.1306
)

(RectD.1307
	Left:	0.06250000000000
	Top:	5.38541666666667
	Right:	2.12500000000000
	Bottom:	3.87500000000000
)

(DEd.1308
	Name:	"AVExtAdvEditor.SnapOff"
	CreationDate:	"6 Май 2004 г. 1:23:14"
	GUIName:	"DialogEditor"
	Win:	1309
	CSMgr:	1310
	DocExts:	1312
	DocExts:	1313
	Graphics:	1314
	Dpy:	1320
	Dialog:	1323
	DialogExtent:	1329
	Compiled:	1
)

(DocWin.1309
	Owner:	1308
	X:	-4
	Y:	-4
	W:	1290
	H:	899
)

(CSMgr.1310
	Client:	1311
)

(CSClient.1311
	Client:	1312
	ReqName:	"ClientNfy"
)

(PanMgr.1312
	Doc:	1308
)

(DocAct.1313
	Doc:	1308
)

(GList.1314
	Child:	1315
	Dpy:	1320
	FormatNumb:	1322
)

(GCtrl.1315
	Name:	"aTL"
	Bounds:	1316
	Control:	1317
	Editable:	1
)

(RectD.1316
	Left:	2.57291666666667
	Top:	5.97916666666667
	Right:	3.81250000000000
	Bottom:	5.77083333333333
)

(TextLine.1317
	InternalName:	"aTL"
	UseGraphicNfy:	1
	Constraints:	0x55
	Listening:	1
	TextType:	1318
	Apply:	"AVExtAdvEditor.SnapOffAp"
	NextControl:	1319
)

(AVEnum.1318
	Name:	"TEXTLINE_TYPE_REAL"
)

(Nil.1319
)

(PageDpy.1320
	Top:	9.10416666666667
	Right:	13.36458333333333
	ReportUnits:	1
	Units:	1
	Scale:	1321
	ZoomRight:	13.36458333333333
	ZoomTop:	9.10416666666667
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.1321
	N:	0.07482462977397
)

(Numb.1322
)

(AVDLog.1323
	Name:	"AVExtAdvEditor.SnapOff"
	X:	253
	Y:	313
	W:	121
	H:	40
	Server:	32
	ControlPanel:	1324
	Title:	"Snapping Offset Distance"
	EscapeEnabled:	1
	Resizable:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	Close:	"AVExtAdvEditor.DialogClose"
	DefaultButton:	1328
)

(CPanel.1324
	Child:	1325
	ResBox:	1327
	Listening:	1
)

(TextLine.1325
	InternalName:	"aTL"
	Listening:	1
	TextType:	1326
	Apply:	"AVExtAdvEditor.SnapOffAp"
	NextControl:	105
)

(AVEnum.1326
	Name:	"TEXTLINE_TYPE_REAL"
)

(RectD.1327
	Left:	-3.00000000000000
	Top:	29.00000000000000
	Right:	116.00000000000000
	Bottom:	9.00000000000000
)

(Nil.1328
)

(RectD.1329
	Left:	2.60416666666667
	Top:	6.07291666666667
	Right:	3.86458333333333
	Bottom:	5.68750000000000
)

(SEd.1330
	Name:	"AVExtAdvEditor.SnapOffAp"
	CreationDate:	"6 Май 2004 г. 1:58:02"
	GUIName:	"Script"
	Win:	1331
	CSMgr:	1332
	DocExts:	1333
	Source:	"if (self.getText.IsNumber) then\n  _AVExtAdvEditorSnapOff = self.getText.AsNumber\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1331
	Owner:	1330
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1332
)

(DocAct.1333
	Doc:	1330
)

(SEd.1334
	Name:	"AVExtAdvEditor.SnapOffOpen"
	CreationDate:	"6 Май 2004 г. 1:24:33"
	GUIName:	"Script"
	Win:	1335
	CSMgr:	1336
	DocExts:	1337
	Source:	"aDil = av.FindDialog(\"AVExtAdvEditor.SnapOff\")\naDil.FindByName(\"aTL\").SetText(_AVExtAdvEditorSnapOff.AsString)\naDil.Open"
	SearchStr:	"NotEditNumV"
)

(DocWin.1335
	Owner:	1334
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1336
)

(DocAct.1337
	Doc:	1334
)

(SEd.1338
	Name:	"AVExtAdvEditor.SnapOpen"
	CreationDate:	"2 Май 2004 г. 1:21:31"
	GUIName:	"Script"
	Win:	1339
	CSMgr:	1340
	DocExts:	1341
	Source:	"aLBT = self.FindByName(\"aLBT\")\naList = {}\naLIstK = _AVExtAdvEditorView.GetThemes\naList.Add({\"Themes\",_AVExtAdvEditorSnapv,_AVExtAdvEditorSnapb,_AVExtAdvEditorSnape,_AVExtAdvEditorSnapi})\nfor each i in aLIstK  \n  aListE = _AVExtAdvEditorListSnap.Get(i)\n  if (aLIstE <> nil) then\n    if (aListE.Get(0) = 1) then\n      a0 = _AVExtAdvEditorSnapen\n    else\n      a0 = _AVExtAdvEditorSnapdis\n    end\n    if (aListE.Get(1) = 1) then\n      a1 = _AVExtAdvEditorSnapen\n    else\n      a1 = _AVExtAdvEditorSnapdis\n    end\n  
  if (aListE.Get(2) = 1) then\n      a2 = _AVExtAdvEditorSnapen\n    else\n      a2 = _AVExtAdvEditorSnapdis\n    end\n    if (aListE.Get(3) = 1) then\n      a3 = _AVExtAdvEditorSnapen\n    else\n      a3 = _AVExtAdvEditorSnapdis\n    end\n    aList.Add({i,a0,a1,a2,a3})\n  end\nend\naLBT.DefineFromList(aList)\naLBT.GoColumn(0)\naLBT.SetColumnWidth(40)\naLBT.GoColumn(1)\naLBT.SetColumnWidth(15)\naLBT.GoColumn(2)\naLBT.SetColumnWidth(15)\naLBT.GoColumn(3)\naLBT.SetColumnWidth(15)\naLBT.GoColumn(4)\naLBT.SetColumnWidth(15)\naS = 0\nfo
r each iT in _AVExtAdvEditorListSnap\n  for each iTS in iT\n    if (iTS = 1) then\n      aS = 1\n      break\n    end\n  end\n  if (aS = 1) then\n    break\n  end\nend\nif (aS = 1) then\n  _AVExtAdvEditorSnapEnb = true\nelse\n  _AVExtAdvEditorSnapEnb = false\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1339
	Owner:	1338
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1340
)

(DocAct.1341
	Doc:	1338
)

(SEd.1342
	Name:	"AVExtAdvEditor.SnapSelect"
	CreationDate:	"1 Май 2004 г. 20:00:34"
	GUIName:	"Script"
	Win:	1343
	CSMgr:	1344
	DocExts:	1345
	Source:	"aPoint = self.GetCurrentLocation\nif (aPoint.GetX = 2) then\n  if (self.GetSelection.Get(1) = _AVExtAdvEditorSnapv) then\n    self.SetSelection(Rect.MakeEmpty,false)\n    return nil\n  end\n  aTheme = self.GetSelection.Get(0)\n  aVal = _AVExtAdvEditorListSnap.Get(aTheme)\n  aValList0 = aVal.Get(0)\n  aValList2 = aVal.Get(2)\n  aValList3 = aVal.Get(3)\n  if (aVal.Get(1) = 0) then\n    aValList = {aValList0,1,aValList2,aValList3}\n  else\n    aValList = {aValList0,0,aValList2,aValList3}\n  end\n  _AVExtAdvEditorListSnap.Set(
aTheme,aValList)  \n  aList = {}\n  aLIstK = _AVExtAdvEditorView.GetThemes\n  aList.Add({\"Themes\",_AVExtAdvEditorSnapv,_AVExtAdvEditorSnapb,_AVExtAdvEditorSnape,_AVExtAdvEditorSnapi})\n  for each i in aLIstK  \n    aListE = _AVExtAdvEditorListSnap.Get(i)\n    if (aLIstE <> nil) then\n      if (aListE.Get(0) = 1) then\n        a0 = _AVExtAdvEditorSnapen\n      else\n        a0 = _AVExtAdvEditorSnapdis\n      end\n      if (aListE.Get(1) = 1) then\n        a1 = _AVExtAdvEditorSnapen\n      else\n        a1 = _AVExtAdvEditor
Snapdis\n      end\n      if (aListE.Get(2) = 1) then\n        a2 = _AVExtAdvEditorSnapen\n      else\n        a2 = _AVExtAdvEditorSnapdis\n      end\n      if (aListE.Get(3) = 1) then\n        a3 = _AVExtAdvEditorSnapen\n      else\n        a3 = _AVExtAdvEditorSnapdis\n      end\n      aList.Add({i,a0,a1,a2,a3})\n    end\n  end\n  self.DefineFromList(aList)\n  self.GoColumn(0)\n  self.SetColumnWidth(40)\n  self.GoColumn(1)\n  self.SetColumnWidth(15)\n  self.GoColumn(2)\n  self.SetColumnWidth(15)\n  self.GoColumn(3)\n  self.SetCo
lumnWidth(15)\n  self.GoColumn(4)\n  self.SetColumnWidth(15)\nelseif (aPoint.GetX = 3) then\n  if (self.GetSelection.Get(1) = _AVExtAdvEditorSnapv) then\n    self.SetSelection(Rect.MakeEmpty,false)\n    return nil\n  end\n  aTheme = self.GetSelection.Get(0)\n  aVal = _AVExtAdvEditorListSnap.Get(aTheme)\n  aValList0 = aVal.Get(0)\n  aValList1 = aVal.Get(1)\n  aValList3 = aVal.Get(3)\n  if (aVal.Get(2) = 0) then\n    aValList = {aValList0,aValList1,1,aValList3}\n  else\n    aValList = {aValList0,aValList1,0,aValList3}\n  end\n
  _AVExtAdvEditorListSnap.Set(aTheme,aValList)  \n  aList = {}\n  aLIstK = _AVExtAdvEditorView.GetThemes\n  aList.Add({\"Themes\",_AVExtAdvEditorSnapv,_AVExtAdvEditorSnapb,_AVExtAdvEditorSnape,_AVExtAdvEditorSnapi})\n  for each i in aLIstK  \n    aListE = _AVExtAdvEditorListSnap.Get(i)\n    if (aLIstE <> nil) then\n      if (aListE.Get(0) = 1) then\n        a0 = _AVExtAdvEditorSnapen\n      else\n        a0 = _AVExtAdvEditorSnapdis\n      end\n      if (aListE.Get(1) = 1) then\n        a1 = _AVExtAdvEditorSnapen\n      els
e\n        a1 = _AVExtAdvEditorSnapdis\n      end\n      if (aListE.Get(2) = 1) then\n        a2 = _AVExtAdvEditorSnapen\n      else\n        a2 = _AVExtAdvEditorSnapdis\n      end\n      if (aListE.Get(3) = 1) then\n        a3 = _AVExtAdvEditorSnapen\n      else\n        a3 = _AVExtAdvEditorSnapdis\n      end\n      aList.Add({i,a0,a1,a2,a3})\n    end\n  end\n  self.DefineFromList(aList)\n  self.GoColumn(0)\n  self.SetColumnWidth(40)\n  self.GoColumn(1)\n  self.SetColumnWidth(15)\n  self.GoColumn(2)\n  self.SetColumnWidth(15)\n 
 self.GoColumn(3)\n  self.SetColumnWidth(15)\n  self.GoColumn(4)\n  self.SetColumnWidth(15)\nelseif (aPoint.GetX = 4) then\n  if (self.GetSelection.Get(1) = _AVExtAdvEditorSnapv) then\n    self.SetSelection(Rect.MakeEmpty,false)\n    return nil\n  end\n  aTheme = self.GetSelection.Get(0)\n  aVal = _AVExtAdvEditorListSnap.Get(aTheme)\n  aValList0 = aVal.Get(0)\n  aValList1 = aVal.Get(1)\n  aValList2 = aVal.Get(2)\n  if (aVal.Get(3) = 0) then\n    aValList = {aValList0,aValList1,aValList2,1}\n  else\n    aValList = {aValList0
,aValList1,aValList2,0}\n  end\n  _AVExtAdvEditorListSnap.Set(aTheme,aValList)  \n  aList = {}\n  aLIstK = _AVExtAdvEditorView.GetThemes\n  aList.Add({\"Themes\",_AVExtAdvEditorSnapv,_AVExtAdvEditorSnapb,_AVExtAdvEditorSnape,_AVExtAdvEditorSnapi})\n  for each i in aLIstK  \n    aListE = _AVExtAdvEditorListSnap.Get(i)\n    if (aLIstE <> nil) then\n      if (aListE.Get(0) = 1) then\n        a0 = _AVExtAdvEditorSnapen\n      else\n        a0 = _AVExtAdvEditorSnapdis\n      end\n      if (aListE.Get(1) = 1) then\n        a1 = _
AVExtAdvEditorSnapen\n      else\n        a1 = _AVExtAdvEditorSnapdis\n      end\n      if (aListE.Get(2) = 1) then\n        a2 = _AVExtAdvEditorSnapen\n      else\n        a2 = _AVExtAdvEditorSnapdis\n      end\n      if (aListE.Get(3) = 1) then\n        a3 = _AVExtAdvEditorSnapen\n      else\n        a3 = _AVExtAdvEditorSnapdis\n      end\n      aList.Add({i,a0,a1,a2,a3})\n    end\n  end\n  self.DefineFromList(aList)\n  self.GoColumn(0)\n  self.SetColumnWidth(40)\n  self.GoColumn(1)\n  self.SetColumnWidth(15)\n  self.GoColumn(
2)\n  self.SetColumnWidth(15)\n  self.GoColumn(3)\n  self.SetColumnWidth(15)\n  self.GoColumn(4)\n  self.SetColumnWidth(15)\nelse\n  if (self.GetSelection.Get(1) = _AVExtAdvEditorSnapv) then\n    self.SetSelection(Rect.MakeEmpty,false)\n    return nil\n  end\n  aTheme = self.GetSelection.Get(0)\n  aVal = _AVExtAdvEditorListSnap.Get(aTheme)\n  aValList1 = aVal.Get(1)\n  aValList2 = aVal.Get(2)\n  aValList3 = aVal.Get(3)\n  if (aVal.Get(0) = 0) then\n    aValList = {1,aValList1,aValList2,aValList3}\n  else\n    aValList = {0,aV
alList1,aValList2,aValList3}\n  end\n  _AVExtAdvEditorListSnap.Set(aTheme,aValList)  \n  aList = {}\n  aLIstK = _AVExtAdvEditorView.GetThemes\n  aList.Add({\"Themes\",_AVExtAdvEditorSnapv,_AVExtAdvEditorSnapb,_AVExtAdvEditorSnape,_AVExtAdvEditorSnapi})\n  for each i in aLIstK  \n    aListE = _AVExtAdvEditorListSnap.Get(i)\n    if (aLIstE <> nil) then\n      if (aListE.Get(0) = 1) then\n        a0 = _AVExtAdvEditorSnapen\n      else\n        a0 = _AVExtAdvEditorSnapdis\n      end\n      if (aListE.Get(1) = 1) then\n        a
1 = _AVExtAdvEditorSnapen\n      else\n        a1 = _AVExtAdvEditorSnapdis\n      end\n      if (aListE.Get(2) = 1) then\n        a2 = _AVExtAdvEditorSnapen\n      else\n        a2 = _AVExtAdvEditorSnapdis\n      end\n      if (aListE.Get(3) = 1) then\n        a3 = _AVExtAdvEditorSnapen\n      else\n        a3 = _AVExtAdvEditorSnapdis\n      end\n      aList.Add({i,a0,a1,a2,a3})\n    end\n  end\n  self.DefineFromList(aList)\n  self.GoColumn(0)\n  self.SetColumnWidth(40)\n  self.GoColumn(1)\n  self.SetColumnWidth(15)\n  self.GoCo
lumn(2)\n  self.SetColumnWidth(15)\n  self.GoColumn(3)\n  self.SetColumnWidth(15)\n  self.GoColumn(4)\n  self.SetColumnWidth(15)  \nend\naS = 0\nfor each iT in _AVExtAdvEditorListSnap\n  for each iTS in iT\n    if (iTS = 1) then\n      aS = 1\n      break\n    end\n  end\n  if (aS = 1) then\n    break\n  end\nend\nif (aS = 1) then\n  _AVExtAdvEditorSnapEnb = true\nelse\n  _AVExtAdvEditorSnapEnb = false\nend\n_AVExtAdvEditorView.GetWin.Activate"
	SearchStr:	"NotEditNumV"
)

(DocWin.1343
	Owner:	1342
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1344
)

(DocAct.1345
	Doc:	1342
)

(SEd.1346
	Name:	"AVExtAdvEditor.StAddEventTh"
	CreationDate:	"4 Июль 2004 г. 17:21:59"
	GUIName:	"Script"
	Win:	1347
	CSMgr:	1348
	DocExts:	1349
	Source:	"theFTab = EventDialog.Show(_AVExtAdvEditorView)\nif (theFTab <> nil) then\n  aDocClone = av.FindDoc(\"AVExtAdvEditThemeDoc_NotEditable\")\n  aThemeList = {}\n  NotEditNum = 0\n  theTheme = FTheme.Make(theFTab)\n  if (theTheme.CanEdit) then\n    AdThemeView = aDocClone.Clone\n    AdThemeView.SetGUI(\"AVExtAdvEditTheme\")\n    AdThemeView.SetName(\"AVExtAdvEditThemeDoc_Start_\" + (_AVExtAdvEditorListDocTh.Count + 1).AsString)\n    aList = AdThemeView.getThemes\n    for each y in aList.Clone\n      AdThemeView.DeleteTheme(y)\n  
  end\n    theTheme.SetActive(false)\n    AdThemeView.AddTheme(theTheme)\n    aThemeList.Add(AdThemeView)\n    AdThemeView.GetWin.Close\n    _AVExtAdvEditorListDocTh.Add(AdThemeView.GetThemes.Get(0),AdThemeView)\n  else\n    aNotEdit = av.FindDoc(\"AVExtAdvEditThemeDoc_NotEditable\")\n    theTheme.SetActive(false)\n    aNotEdit.AddTheme(theTheme)\n    aThemeList.Add(NotEditNum)\n    NotEditNum = NotEditNum + 1\n  end\n  for each i in aThemeList\n    if (i.Is(Number)) then\n      aThemeListI = av.FindDoc(\"AVExtAdvEditThemeDo
c_NotEditable\").GetThemes.Get(i)\n      _AVExtAdvEditorView.AddTheme(aThemeListI)\n      if (aThemeListI.CanSelect) then\n        if (aThemeListI.IsVisible) then\n          _AVExtAdvEditorVisible.Add(aThemeListI,1)\n        else\n          _AVExtAdvEditorVisible.Add(aThemeListI,0)\n        end\n        _AVExtAdvEditorListSnap.Add(aThemeListI,{0,0,0,0})\n        _AVExtAdvEditorSelectableBitmap.Add(aThemeListI,aThemeListI.GetFTab.GetSelection.Clone)\n        _AVExtAdvEditorList.Add(aThemeListI,2)\n        _AVExtAdvEdito
rSelectable.Add(aThemeListI,0)\n      end\n    else\n      _AVExtAdvEditorView.AddTheme(i.GetThemes.Get(0))\n      if (i.GetThemes.Get(0).CanSelect) then\n        if (i.GetThemes.Get(0).IsVisible) then\n          _AVExtAdvEditorVisible.Add(i.GetThemes.Get(0),1)\n        else\n          _AVExtAdvEditorVisible.Add(i.GetThemes.Get(0),0)\n        end\n        _AVExtAdvEditorListSnap.Add(i.GetThemes.Get(0),{0,0,0,0})\n        _AVExtAdvEditorSelectableBitmap.Add(i.GetThemes.Get(0),i.GetThemes.Get(0).GetFTab.GetSelection.Clo
ne)\n        if (i.GetThemes.Get(0).CanEdit) then\n          clsName = i.GetThemes.Get(0).GetFTab.GetShapeClass.GetClassName\n          if ((clsName = \"Point\") or (clsName = \"MultiPoint\") or (clsName = \"PolyLine\") or (clsName = \"Polygon\") or (clsName = \"GeoEvent\")) then\n            _AVExtAdvEditorList.Add(i.GetThemes.Get(0),0)\n            _AVExtAdvEditorSelectable.Add(i.GetThemes.Get(0),1)\n          else\n            _AVExtAdvEditorList.Add(i.GetThemes.Get(0),2)\n            _AVExtAdvEditorSelectable.Add(i.GetTh
emes.Get(0),0)\n          end\n        else\n          _AVExtAdvEditorList.Add(i.GetThemes.Get(0),2)\n          _AVExtAdvEditorSelectable.Add(i.GetThemes.Get(0),0)\n        end\n      end\n    end\n  end  \n  av.GetProject.SetModified(true)\nend\nav.FindDialog(\"AVExtAdvEditor.Target\").FindByName(\"aLBT\").Select"
	SearchStr:	"NotEditNumV"
)

(DocWin.1347
	Owner:	1346
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1348
)

(DocAct.1349
	Doc:	1346
)

(SEd.1350
	Name:	"AVExtAdvEditor.StAddEventThUpd"
	CreationDate:	"4 Июль 2004 г. 17:26:31"
	GUIName:	"Script"
	Win:	1351
	CSMgr:	1352
	DocExts:	1353
	Source:	"theProject = av.GetProject\ndocs = theProject.GetDocs\nfor each d in docs\n  if (d.Is(Table)) then\n    self.SetEnabled(true)\n    return nil\n  end\nend\nself.SetEnabled(false)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1351
	Owner:	1350
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1352
)

(DocAct.1353
	Doc:	1350
)

(SEd.1354
	Name:	"AVExtAdvEditor.StAddTh"
	CreationDate:	"4 Июль 2004 г. 5:26:42"
	GUIName:	"Script"
	Win:	1355
	CSMgr:	1356
	DocExts:	1357
	Source:	"srcnames = SourceDialog.Show(\"\")\nzoom = (_AVExtAdvEditorView.GetThemes.Count = 0)\nuseDD=TRUE\nisOther=FALSE\ntheBox=Rect.makexy(-200,-100,200,100)\nthemeList={}\nif (srcnames.count = 0) then\n  return(nil)\nend\naDocClone = av.FindDoc(\"AVExtAdvEditThemeDoc_NotEditable\")\naThemeList = {}\nNotEditNum = 0\nfor each n in srcnames\n  theTheme=Theme.Make(n)\n  theleg=thetheme.getlegend.clone\n  if (TheBox.contains(theTheme.returnextent).NOT) then\n    useDD=FALSE    \n  end\n  if (theTheme.Is(FTheme).Not) then\n    isOther=TRUE\n 
 end\n  theavlname=\" \"\n  if (n.getfilename<>NIL) then\n    if (n.getfilename.getextension<>\"\") then\n      theext=n.getfilename.asstring.right(4)\n      theAVLname=n.getfilename.asstring.substitute(theext,\".avl\")\n    else\n      aFN=n.getfilename\n      afn=aFN.asstring+\".avl\"\n      theAVLname=afn\n    end\n    if ((theTheme.is(FTheme)) and (file.exists(theAVLname.asfilename))) then\n      alinefile=textfile.make(theAVLname.asfilename,#FILE_PERM_READ)\n      asource=alinefile.read(alinefile.getsize)\n      alinefile.c
lose\n      if ((asource.contains(\"LegExt\").Not) or (Extension.Find(\"Spatial Analyst\")<>NIL))then\n        theleg=theTheme.getlegend\n        theleg.load(theAVLname.asfilename,#LEGEND_LOADTYPE_ALL)\n        theflds=theleg.getfieldnames\n        for each afld in theflds\n          if (thetheme.getftab.findfield(afld)=NIL) then\n            thetheme.getlegend.setlegendtype(#LEGEND_TYPE_SIMPLE)\n            thetheme.getlegend.singlesymbol\n          end\n        end\n        if ((theflds.count=0) and (theleg.getlegendtyp
e <>#LEGEND_TYPE_SIMPLE)) then\n          thetheme.getlegend.setlegendtype(#LEGEND_TYPE_SIMPLE)\n          thetheme.getlegend.singlesymbol\n        end  \n      end\n    end      \n  end\n  if (theTheme.CanEdit) then\n    AdThemeView = aDocClone.Clone\n    AdThemeView.SetGUI(\"AVExtAdvEditTheme\")\n    AdThemeView.SetName(\"AVExtAdvEditThemeDoc_Start_\" + (_AVExtAdvEditorListDocTh.Count + 1).AsString)\n    aList = AdThemeView.getThemes\n    for each y in aList.Clone\n      AdThemeView.DeleteTheme(y)\n    end\n    theTheme.Set
Active(false)\n    AdThemeView.AddTheme(theTheme)\n    aThemeList.Add(AdThemeView)\n    AdThemeView.GetWin.Close\n    _AVExtAdvEditorListDocTh.Add(AdThemeView.GetThemes.Get(0),AdThemeView)\n  else\n    aNotEdit = av.FindDoc(\"AVExtAdvEditThemeDoc_NotEditable\")\n    theTheme.SetActive(false)\n    aNotEdit.AddTheme(theTheme)\n    aThemeList.Add(NotEditNum)\n    NotEditNum = NotEditNum + 1\n  end\nend\nif (aThemeList.Count > 0) then\n  for each i in aThemeList\n    if (i.Is(Number)) then\n      aThemeListI = av.FindDoc(\"AVExtA
dvEditThemeDoc_NotEditable\").GetThemes.Get(i)\n      _AVExtAdvEditorView.AddTheme(aThemeListI)\n      if (aThemeListI.CanSelect) then\n        if (aThemeListI.IsVisible) then\n          _AVExtAdvEditorVisible.Add(aThemeListI,1)\n        else\n          _AVExtAdvEditorVisible.Add(aThemeListI,0)\n        end\n        _AVExtAdvEditorListSnap.Add(aThemeListI,{0,0,0,0})\n        _AVExtAdvEditorSelectableBitmap.Add(aThemeListI,aThemeListI.GetFTab.GetSelection.Clone)\n        _AVExtAdvEditorList.Add(aThemeListI,2)\n        _
AVExtAdvEditorSelectable.Add(aThemeListI,0)\n      end\n    else\n      _AVExtAdvEditorView.AddTheme(i.GetThemes.Get(0))\n      if (i.GetThemes.Get(0).CanSelect) then\n        if (i.GetThemes.Get(0).IsVisible) then\n          _AVExtAdvEditorVisible.Add(i.GetThemes.Get(0),1)\n        else\n          _AVExtAdvEditorVisible.Add(i.GetThemes.Get(0),0)\n        end\n        _AVExtAdvEditorListSnap.Add(i.GetThemes.Get(0),{0,0,0,0})\n        _AVExtAdvEditorSelectableBitmap.Add(i.GetThemes.Get(0),i.GetThemes.Get(0).GetFTab.Get
Selection.Clone)\n        if (i.GetThemes.Get(0).CanEdit) then\n          clsName = i.GetThemes.Get(0).GetFTab.GetShapeClass.GetClassName\n          if ((clsName = \"Point\") or (clsName = \"MultiPoint\") or (clsName = \"PolyLine\") or (clsName = \"Polygon\") or (clsName = \"GeoEvent\")) then\n            _AVExtAdvEditorList.Add(i.GetThemes.Get(0),0)\n            _AVExtAdvEditorSelectable.Add(i.GetThemes.Get(0),1)\n          else\n            _AVExtAdvEditorList.Add(i.GetThemes.Get(0),2)\n            _AVExtAdvEditorSelectabl
e.Add(i.GetThemes.Get(0),0)\n          end\n        else\n          _AVExtAdvEditorList.Add(i.GetThemes.Get(0),2)\n          _AVExtAdvEditorSelectable.Add(i.GetThemes.Get(0),0)\n        end\n      end\n    end\n  end\nend\nif ((_AVExtAdvEditorView.getProjection.isNull.NOT) and (useDD=FALSE)) then\n  if (isOther.Not) then\n    msgbox.warning(\"One or more of the data sources you have chosen is not\"++\n      \"in decimal degrees. This data can't be projected to match this\"++\n      \"view's projection. The theme(s) will be ad
ded but won't display properly.\",\n      \"Warning: input theme(s) cannot be projected\")\n  end\nend\nif (zoom) then\n  theThemes = _AVExtAdvEditorView.GetThemes\n  r = Rect.MakeEmpty\n  for each t in theThemes\n    r = r.UnionWith(t.ReturnExtent)\n  end\n  if (r.IsEmpty) then\n    return nil\n  elseif ((r.ReturnSize) = (0@0)) then\n    _AVExtAdvEditorView.GetDisplay.PanTo(r.ReturnOrigin)\n  else\n    _AVExtAdvEditorView.GetDisplay.SetExtent(r.Scale(1.1))\n  end\nend\nav.GetProject.SetModified(TRUE)\nav.FindDialog(\"AVExtAdvEdi
tor.Target\").FindByName(\"aLBT\").Select"
	SearchStr:	"NotEditNumV"
)

(DocWin.1355
	Owner:	1354
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1356
)

(DocAct.1357
	Doc:	1354
)

(SEd.1358
	Name:	"AVExtAdvEditor.StAHasDataUpd"
	CreationDate:	"12 Май 2004 г. 2:20:48"
	GUIName:	"Script"
	Win:	1359
	CSMgr:	1360
	DocExts:	1361
	Source:	"SELF.SetEnabled((_AVExtAdvEditorView.GetGraphics.Count > 0) or (_AVExtAdvEditorView.GetThemes.Count > 0))"
	SearchStr:	"NotEditNumV"
)

(DocWin.1359
	Owner:	1358
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1360
)

(DocAct.1361
	Doc:	1358
)

(SEd.1362
	Name:	"AVExtAdvEditor.StartSnapPoint"
	CreationDate:	"2 Май 2004 г. 11:04:13"
	GUIName:	"Script"
	Win:	1363
	CSMgr:	1364
	DocExts:	1365
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScratchList = nil) then\n  if (_AVExtAdvEditorView = av.Getactivedoc) then\n    if (_AVExtAdvEditorStartSnapRun = false) then\n      _AVExtAdvEditorStartSnapRun = true\n      aVal1 = av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEArc\").IsSelected\n      aVal2 = av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEPen\").IsSelected\n      aVal3 = av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AECurve\").I
sSelected\n      aVal4 = av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEStream\").IsSelected\n      aVal5 = av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AESemiArc\").IsSelected\n      if (aVal1 or aVal2 or aVal3 or aVal4 or aVal5) then        \n        aRP = _AVExtAdvEditorView.GetDisplay.returnuserpoint\n        if (_AVExtAdvEditorPan) then\n          aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n          aDisapt = aViewRect.GetWidth / 100\n          if (aViewRe
ct.AsPolygon.AsPolyline.Distance(aRP).Abs < aDisapt) then\n            aptpan = Polyline.Make({{aViewRect.ReturnCenter,aRP}}).Along(10)\n            _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n          end\n        end\n        if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n          _AVExtAdvEditorView.GetDisplay.Pan\n          _AVExtAdvEditorStartSnapPan = true\n        else\n          _AVExtAdvEditorStartSnapPan = false\n          if (_AVExtAdvEditoraptSL <> aRP) then\n            _AVExtAdvEditoraptSL
 = aRP.clone\n            _AVExtAdvEditoraptS = aRP.clone\n            aSnapReal = 0\n            if (_AVExtAdvEditorSnapEnb) then\n              if (_AVExtAdvEditorSnapTU = \"pixels\") then\n                aSnapTolerance = (_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.GetWin.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\n              else\n                aSnapTolerance = _AVExtAdvEditorSnapT\n              end\n              aListK = _AVExtAdvEditorV
iew.GetThemes\n              for each aThemeView in aLIstK  \n                aListE = _AVExtAdvEditorListSnap.Get(aThemeView)\n                if (aListE <> nil) then\n                  for each aThemeSnapeI in 0..3\n                    aThemeSnape = aListE.Get(aThemeSnapeI)\n                    if (aThemeSnape <> 0) then\n                      aUserSnapPoint = _AVExtAdvEditoraptS.Clone\n                      aThemeView.SetInteractiveSnapTolerance(aSnapTolerance)\n                      if (aThemeSnapeI = 0) then\n  
                      aThemeView.UserSnapPoint(#POINT_SNAP_VERTEX,aUserSnapPoint)\n                      elseif (aThemeSnapeI = 1) then\n                        aThemeView.UserSnapPoint(#POINT_SNAP_BOUNDARY,aUserSnapPoint)\n                      elseif (aThemeSnapeI = 2) then\n                        aThemeView.UserSnapPoint(#POINT_SNAP_ENDPOINT,aUserSnapPoint)\n                      else\n                        aThemeView.UserSnapPoint(#POINT_SNAP_INTERSECTION,aUserSnapPoint)\n                      end\n         
             if (aUserSnapPoint <> _AVExtAdvEditoraptS) then\n                        _AVExtAdvEditoraptS = aUserSnapPoint.Clone\n                        aSnapReal = 1\n                        break\n                      end\n                    end\n                  end\n                end\n                if (aSnapReal = 1) then\n                  if (_AVExtAdvEditorSnapOff <> 0) then\n                    aDis1 = _AVExtAdvEditoraptS.Distance(aRP)\n                    aptPx = aRP.GetX - _AVExtAdvEditoraptS.GetX\n  
                  aptPy = aRP.GetY - _AVExtAdvEditoraptS.GetY\n                    aCosA = aptPx / aDis1.Abs\n                    aSinA = aptPy / aDis1.Abs\n                    aNewPx = _AVExtAdvEditorSnapOff * aCosA\n                    aNewPy = _AVExtAdvEditorSnapOff * aSinA\n                    aNewPtX = aNewPx + _AVExtAdvEditoraptS.GetX\n                    aNewPtY = aNewPy + _AVExtAdvEditoraptS.GetY\n                    _AVExtAdvEditoraptS = aNewPtX@aNewPtY\n                  end\n                  break\n      
          end\n              end\n            end\n            if (_AVExtAdvEditorShowCurP) then\n              if (_AVExtAdvEditorScrathGrMouseSnapP = nil) then\n                _AVExtAdvEditorScrathGrMouseSnapP = GraphicShape.Make(_AVExtAdvEditoraptS.Clone)\n                _AVExtAdvEditorScrathGrMouseSnapP.SetName(\"_AVExtAdvEditorScrathGrMouseSnapP\")\n                if (aSnapReal = 1) then\n                  _AVExtAdvEditorScrathGrMouseSnapP.SetSymbol(_AVExtAdvEditorScratchP)\n                else\n              
    _AVExtAdvEditorScrathGrMouseSnapP.SetSymbol(_AVExtAdvEditorScratchP2)\n                end\n                agrlist.Add(_AVExtAdvEditorScrathGrMouseSnapP)\n                _AVExtAdvEditorScrathGrMouseSnapP.invalidate\n              end\n              if (aSnapReal = 1) then\n                _AVExtAdvEditorScrathGrMouseSnapP.SetSymbol(_AVExtAdvEditorScratchP)\n              else\n                _AVExtAdvEditorScrathGrMouseSnapP.SetSymbol(_AVExtAdvEditorScratchP2)\n              end\n              _AVExtAdvEditorS
crathGrMouseSnapP.invalidate\n              _AVExtAdvEditorScrathGrMouseSnapP.SetShape(_AVExtAdvEditoraptS.Clone)\n              _AVExtAdvEditorScrathGrMouseSnapP.invalidate\n            else\n              if (aSnapReal = 1) then\n                if (_AVExtAdvEditorScrathGrMouseSnapP = nil) then          \n                  _AVExtAdvEditorScrathGrMouseSnapP = GraphicShape.Make(_AVExtAdvEditoraptS.Clone)\n                  _AVExtAdvEditorScrathGrMouseSnapP.SetName(\"_AVExtAdvEditorScrathGrMouseSnapP\")\n             
     _AVExtAdvEditorScrathGrMouseSnapP.SetSymbol(_AVExtAdvEditorScratchP)\n                  agrlist.Add(_AVExtAdvEditorScrathGrMouseSnapP)\n                  _AVExtAdvEditorScrathGrMouseSnapP.invalidate\n                end\n                _AVExtAdvEditorScrathGrMouseSnapP.invalidate\n                _AVExtAdvEditorScrathGrMouseSnapP.SetSymbol(_AVExtAdvEditorScratchP)\n                _AVExtAdvEditorScrathGrMouseSnapP.SetShape(_AVExtAdvEditoraptS.Clone)\n                _AVExtAdvEditorScrathGrMouseSnapP.invalida
te\n              else\n                if (_AVExtAdvEditorScrathGrMouseSnapP <> nil) then\n                  agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouseSnapP)\n                  _AVExtAdvEditorScrathGrMouseSnapP = nil\n                end\n              end\n            end          \n          end\n        end\n        av.DelayedRun(\"AVExtAdvEditor.StartSnapPointEnd\",nil,0)\n      else\n        _AVExtAdvEditorStartSnapRun = false\n        if (_AVExtAdvEditorScrathGrMouseSnapP <> nil) then\n          agrlist.Remo
veGraphic(_AVExtAdvEditorScrathGrMouseSnapP)\n        end\n        _AVExtAdvEditorScrathGrMouseSnapP = nil\n        _AVExtAdvEditoraptS = nil\n      end\n    end\n  else\n    _AVExtAdvEditorStartSnapRun = false\n    if (_AVExtAdvEditorScrathGrMouseSnapP <> nil) then\n      agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouseSnapP)\n    end\n    _AVExtAdvEditorScrathGrMouseSnapP = nil\n    _AVExtAdvEditoraptS = nil\n  end\nelse\n  _AVExtAdvEditorStartSnapRun = false\n  if (_AVExtAdvEditorScrathGrMouseSnapP <> nil) then\n    ag
rlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouseSnapP)\n  end\n  _AVExtAdvEditorScrathGrMouseSnapP = nil\n  _AVExtAdvEditoraptS = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1363
	Owner:	1362
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1364
)

(DocAct.1365
	Doc:	1362
)

(SEd.1366
	Name:	"AVExtAdvEditor.StartSnapPointEnd"
	CreationDate:	"2 Май 2004 г. 11:23:54"
	GUIName:	"Script"
	Win:	1367
	CSMgr:	1368
	DocExts:	1369
	Source:	"_AVExtAdvEditorStartSnapRun = false\nav.Run(\"AVExtAdvEditor.StartSnapPoint\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1367
	Owner:	1366
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1368
)

(DocAct.1369
	Doc:	1366
)

(SEd.1370
	Name:	"AVExtAdvEditor.StBActiveThemesUpd"
	CreationDate:	"02 Июль 2004 г. 08:56:03"
	GUIName:	"Script"
	Win:	1371
	CSMgr:	1372
	DocExts:	1373
	Source:	"SELF.SetEnabled(0 < _AVExtAdvEditorView.GetActiveThemes.Count)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1371
	Owner:	1370
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1372
)

(DocAct.1373
	Doc:	1370
)

(SEd.1374
	Name:	"AVExtAdvEditor.StBAttrThUpd"
	CreationDate:	"3 Июль 2004 г. 7:24:20"
	GUIName:	"Script"
	Win:	1375
	CSMgr:	1376
	DocExts:	1377
	Source:	"for each t in _AVExtAdvEditorView.GetActiveThemes\n  if (t.HasAttributes) then\n    SELF.SetEnabled(TRUE)\n    return nil\n  end\nend\nSELF.SetEnabled(FALSE)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1375
	Owner:	1374
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1376
)

(DocAct.1377
	Doc:	1374
)

(SEd.1378
	Name:	"AVExtAdvEditor.StBFullExtent"
	CreationDate:	"28 Июнь 2004 г. 12:05:29"
	GUIName:	"Script"
	Win:	1379
	CSMgr:	1380
	DocExts:	1381
	Source:	"r = _AVExtAdvEditorView.ReturnExtent\n\nif (r.IsEmpty) then\n  return nil\nelseif ( r.ReturnSize = (0@0) ) then\n  _AVExtAdvEditorView.GetDisplay.PanTo(r.ReturnOrigin)\nelse\n  _AVExtAdvEditorView.GetDisplay.SetExtent(r.Scale(1.1))\n  av.GetProject.SetModified(true)\nend\n"
	SearchStr:	"NotEditNumV"
)

(DocWin.1379
	Owner:	1378
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1380
)

(DocAct.1381
	Doc:	1378
)

(SEd.1382
	Name:	"AVExtAdvEditor.StBPanSketch"
	CreationDate:	"05 Июль 2004 г. 12:16:30"
	GUIName:	"Script"
	Win:	1383
	CSMgr:	1384
	DocExts:	1385
	Source:	"if (_AVExtAdvEditorScratchList <> nil) then\n  apt = nil\n  aLast = _AVExtAdvEditorScratchList.Count - 1\n  if (_AVExtAdvEditorScratchList.Get(aLast).Get(0).Is(Point)) then\n    aPt = _AVExtAdvEditorScratchList.Get(aLast).Get(0).clone\n  else\n    if ((aLast - 1) <> 0) then\n      if (_AVExtAdvEditorScratchList.Get(aLast - 1).Get(0).Is(Point)) then\n        aPt = _AVExtAdvEditorScratchList.Get(aLast - 1).Get(0).clone\n      else\n        if ((aLast - 2) <> 0) then\n          if (_AVExtAdvEditorScratchList.Get(aLast - 
2).Get(0).Is(Point)) then\n            aPt = _AVExtAdvEditorScratchList.Get(aLast - 2).Get(0).clone\n          end\n        end\n      end\n    end\n  end\n  if (aPt <> nil) then\n    _AVExtAdvEditorView.GetDisplay.PanTo(aPt.clone)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1383
	Owner:	1382
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1384
)

(DocAct.1385
	Doc:	1382
)

(SEd.1386
	Name:	"AVExtAdvEditor.StBPanSketchUpd"
	CreationDate:	"05 Июль 2004 г. 12:27:45"
	GUIName:	"Script"
	Win:	1387
	CSMgr:	1388
	DocExts:	1389
	Source:	"self.SetEnabled(false)\nif (_AVExtAdvEditorScratchList <> nil) then\n  SELF.SETENABLED(TRUE)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1387
	Owner:	1386
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1388
)

(DocAct.1389
	Doc:	1386
)

(SEd.1390
	Name:	"AVExtAdvEditor.StBSelectableThemesUpd"
	CreationDate:	"02 Июль 2004 г. 09:04:57"
	GUIName:	"Script"
	Win:	1391
	CSMgr:	1392
	DocExts:	1393
	Source:	"for each t in _AVExtAdvEditorView.GetActiveThemes\n  if (t.CanSelect) then\n    SELF.SetEnabled(TRUE)\n    return nil\n  end\nend\nSELF.SetEnabled(FALSE)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1391
	Owner:	1390
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1392
)

(DocAct.1393
	Doc:	1390
)

(SEd.1394
	Name:	"AVExtAdvEditor.StBUndoZoom"
	CreationDate:	"02 Июль 2004 г. 09:15:19"
	GUIName:	"Script"
	Win:	1395
	CSMgr:	1396
	DocExts:	1397
	Source:	"_AVExtAdvEditorView.GetDisplay.UndoZoom"
	SearchStr:	"NotEditNumV"
)

(DocWin.1395
	Owner:	1394
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1396
)

(DocAct.1397
	Doc:	1394
)

(SEd.1398
	Name:	"AVExtAdvEditor.StBUndoZoomUpd"
	CreationDate:	"02 Июль 2004 г. 09:16:50"
	GUIName:	"Script"
	Win:	1399
	CSMgr:	1400
	DocExts:	1401
	Source:	"SELF.SetEnabled(_AVExtAdvEditorView.GetDisplay.CanUndoZoom)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1399
	Owner:	1398
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1400
)

(DocAct.1401
	Doc:	1398
)

(SEd.1402
	Name:	"AVExtAdvEditor.StBZoomIn"
	CreationDate:	"02 Июль 2004 г. 08:50:44"
	GUIName:	"Script"
	Win:	1403
	CSMgr:	1404
	DocExts:	1405
	Source:	"av.GetProject.SetModified(true)\n_AVExtAdvEditorView.GetDisplay.ZoomIn(125)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1403
	Owner:	1402
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1404
)

(DocAct.1405
	Doc:	1402
)

(SEd.1406
	Name:	"AVExtAdvEditor.StBZoomOut"
	CreationDate:	"02 Июль 2004 г. 08:48:25"
	GUIName:	"Script"
	Win:	1407
	CSMgr:	1408
	DocExts:	1409
	Source:	"av.GetProject.SetModified(true)\n_AVExtAdvEditorView.GetDisplay.ZoomOut(125)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1407
	Owner:	1406
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1408
)

(DocAct.1409
	Doc:	1406
)

(SEd.1410
	Name:	"AVExtAdvEditor.StBZoomSketch"
	CreationDate:	"05 Июль 2004 г. 11:57:52"
	GUIName:	"Script"
	Win:	1411
	CSMgr:	1412
	DocExts:	1413
	Source:	"if (_AVExtAdvEditorScratchList <> nil) then\n  if (_AVExtAdvEditorScrathGr <> nil) then\n    agrlist = _AVExtAdvEditorView.getgraphics\n    r = _AVExtAdvEditorScrathGr.GetBounds\n    if (r.IsEmpty) then\n      return nil\n    elseif ( r.ReturnSize = (0@0) ) then\n      _AVExtAdvEditorView.GetDisplay.PanTo(r.ReturnOrigin)\n    else\n      _AVExtAdvEditorView.GetDisplay.SetExtent(r.clone.Scale(1.1))\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1411
	Owner:	1410
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1412
)

(DocAct.1413
	Doc:	1410
)

(SEd.1414
	Name:	"AVExtAdvEditor.StBZoomSketchUpd"
	CreationDate:	"05 Июль 2004 г. 12:05:32"
	GUIName:	"Script"
	Win:	1415
	CSMgr:	1416
	DocExts:	1417
	Source:	"self.SetEnabled(false)\nif (_AVExtAdvEditorScratchList <> nil) then\n  IF (_AVExtAdvEditorScrathGr <> nil) THEN\n    SELF.SETENABLED(TRUE)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1415
	Owner:	1414
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1416
)

(DocAct.1417
	Doc:	1414
)

(SEd.1418
	Name:	"AVExtAdvEditor.StBZoomThemes"
	CreationDate:	"02 Июль 2004 г. 08:53:03"
	GUIName:	"Script"
	Win:	1419
	CSMgr:	1420
	DocExts:	1421
	Source:	"av.GetProject.SetModified(true)\ntheThemes = _AVExtAdvEditorView.GetActiveThemes\nr = Rect.MakeEmpty\nfor each t in theThemes\n  r = r.UnionWith(t.ReturnExtent)\nend\n\nif (r.IsEmpty) then\n  return nil\nelseif ( r.ReturnSize = (0@0) ) then\n  _AVExtAdvEditorView.GetDisplay.PanTo(r.ReturnOrigin)\nelse\n  _AVExtAdvEditorView.GetDisplay.SetExtent(r.Scale(1.1))\nend\n"
	SearchStr:	"NotEditNumV"
)

(DocWin.1419
	Owner:	1418
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1420
)

(DocAct.1421
	Doc:	1418
)

(SEd.1422
	Name:	"AVExtAdvEditor.StBZoomToSelected"
	CreationDate:	"02 Июль 2004 г. 09:01:17"
	GUIName:	"Script"
	Win:	1423
	CSMgr:	1424
	DocExts:	1425
	Source:	"av.GetProject.SetModified(true)\nr = Rect.MakeEmpty\nfor each t in _AVExtAdvEditorView.GetActiveThemes\n  if (t.CanSelect) then\n    r = r.UnionWith(t.GetSelectedExtent)\n  end\nend\nif (r.IsEmpty) then\n  return nil\nelseif ( r.ReturnSize = (0@0) ) then\n  _AVExtAdvEditorView.GetDisplay.PanTo(r.ReturnOrigin)\nelse\n  _AVExtAdvEditorView.GetDisplay.SetExtent(r.Scale(1.1))\nend\n"
	SearchStr:	"NotEditNumV"
)

(DocWin.1423
	Owner:	1422
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1424
)

(DocAct.1425
	Doc:	1422
)

(SEd.1426
	Name:	"AVExtAdvEditor.StClearSel"
	CreationDate:	"3 Июль 2004 г. 7:26:38"
	GUIName:	"Script"
	Win:	1427
	CSMgr:	1428
	DocExts:	1429
	Source:	"for each t in _AVExtAdvEditorView.GetActiveThemes\n  t.ClearSelection\nend\n_AVExtAdvEditorView.GetDisplay.Invalidate(true)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1427
	Owner:	1426
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1428
)

(DocAct.1429
	Doc:	1426
)

(SEd.1430
	Name:	"AVExtAdvEditor.StCombine"
	CreationDate:	"12 Май 2004 г. 1:47:56"
	GUIName:	"Script"
	Win:	1431
	CSMgr:	1432
	DocExts:	1433
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    _AVExtAdvEditorTheme.GetFtab.BeginTransaction\n    _AVExtAdvEditorTheme.MergeSelected\n    _AVExtAdvEditorTheme.GetFTab.EndTransaction\n    _AVExtAdvEditorTheme.Invalidate( true )\n    av.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)\n    av.GetProject.FindGUI(\"AVExtAdvEditView\").Update\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1431
	Owner:	1430
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1432
)

(DocAct.1433
	Doc:	1430
)

(SEd.1434
	Name:	"AVExtAdvEditor.StCombineUpd"
	CreationDate:	"12 Май 2004 г. 1:43:16"
	GUIName:	"Script"
	Win:	1435
	CSMgr:	1436
	DocExts:	1437
	Source:	"enabled = FALSE\nif (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    fCount = _AVExtAdvEditorTheme.GetFTab.GetSelection.Count\n    theType = _AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType\n    enabled =  ((fcount > 1) and (theType = #FIELD_SHAPEPOLY))\n  end\nend\nSELF.SetEnabled(enabled)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1435
	Owner:	1434
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1436
)

(DocAct.1437
	Doc:	1434
)

(SEd.1438
	Name:	"AVExtAdvEditor.StConvertMulti"
	CreationDate:	"05 Июль 2004 г. 14:33:50"
	GUIName:	"Script"
	Win:	1439
	CSMgr:	1440
	DocExts:	1441
	Source:	"aTL = _AVExtAdvEditorList.ReturnKeys\nfor each i in aTL\n  if (_AVExtAdvEditorList.Get(i) = 1) then\n    aFTAb = i.GetFtab\n    if (aFTAb.IsEditable) then\n      aFS = aFTab.FindField(\"Shape\")\n      if (aFS.GetType = #FIELD_SHAPEPOLY) then\n        aSel = aFTab.GetSelection\n        if (aSel.Count > 0) then\n          if (aFTab.CanAddRecord) then\n            aFList = aFTab.GetFields\n            aRemRec = {}\n            aFTab.BeginTransaction\n            for each y in aSel\n              aShape = aFTab.ReturnValue(aF
S,y)\n              aShList = aShape.AsList\n              if (aShList.Count > 1) then\n                aRemRec.Add(y.clone)\n                aValueList = {}\n                for each z in aFList\n                  if (z.GetName <> \"Shape\") then\n                    aValueList.Add({z,aFtab.ReturnValue(z,y)})\n                  end\n                end\n                for each x in aShLIst\n                  aNRec = aFtab.AddRecord\n                  aNShape = Polygon.Make({x})\n                  aFTab.SetValue(aFS,aNRe
c,aNShape)\n                  for each zz in aValueList\n                    aFTab.SetValue(zz.Get(0),aNRec,zz.Get(1))\n                  end\n                end\n              end\n            end\n            if (aRemRec.Count > 0) then\n              if (aFTab.CanRemoveRecords) then            \n                for each yy in aRemRec\n                  aFTab.RemoveRecord(yy)\n                end\n              end\n            end\n            aFTab.EndTransaction\n            av.DelayedRun(\"AVExtAdvEditor.StopEditSel
Upd\",nil,0)\n            av.GetProject.FindGUI(\"AVExtAdvEditView\").Update\n          end\n        end\n      elseif (aFS.GetType = #FIELD_SHAPELINE) then\n        aSel = aFTab.GetSelection\n        if (aSel.Count > 0) then\n          if (aFTab.CanAddRecord) then\n            aFList = aFTab.GetFields\n            aRemRec = {}\n            aFTab.BeginTransaction\n            for each y in aSel\n              aShape = aFTab.ReturnValue(aFS,y)\n              aShList = aShape.AsList\n              if (aShList.Count > 1) then\n
                aRemRec.Add(y.clone)\n                aValueList = {}\n                for each z in aFList\n                  if (z.GetName <> \"Shape\") then\n                    aValueList.Add({z,aFtab.ReturnValue(z,y)})\n                  end\n                end\n                for each x in aShLIst\n                  aNRec = aFtab.AddRecord\n                  aNShape = PolyLine.Make({x})\n                  aFTab.SetValue(aFS,aNRec,aNShape)\n                  for each zz in aValueList\n                    aFTab.Set
Value(zz.Get(0),aNRec,zz.Get(1))\n                  end\n                end\n              end\n            end\n            if (aRemRec.Count > 0) then\n              if (aFTab.CanRemoveRecords) then            \n                for each yy in aRemRec\n                  aFTab.RemoveRecord(yy)\n                end\n              end\n            end\n            aFTab.EndTransaction\n            av.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)\n            av.GetProject.FindGUI(\"AVExtAdvEditView\").Update\n          e
nd\n        end\n      end\n    end\n  end\nend\n"
	SearchStr:	"NotEditNumV"
)

(DocWin.1439
	Owner:	1438
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1440
)

(DocAct.1441
	Doc:	1438
)

(SEd.1442
	Name:	"AVExtAdvEditor.StConvertMultiUpd"
	CreationDate:	"05 Июль 2004 г. 14:25:15"
	GUIName:	"Script"
	Win:	1443
	CSMgr:	1444
	DocExts:	1445
	Source:	"aValid = false\naTL = _AVExtAdvEditorList.ReturnKeys\nfor each i in aTL\n  if (_AVExtAdvEditorList.Get(i) = 1) then\n    if (i.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n      if (i.GetFTab.GetSelection.Count > 0) then\n        aValid = true\n      end\n    elseif (i.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPELINE) then\n      if (i.GetFTab.GetSelection.Count > 0) then\n        aValid = true\n      end\n    end\n  end\nend\nself.setenabled(aValid)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1443
	Owner:	1442
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1444
)

(DocAct.1445
	Doc:	1442
)

(SEd.1446
	Name:	"AVExtAdvEditor.StCopy"
	CreationDate:	"12 Май 2004 г. 1:26:02"
	GUIName:	"Script"
	Win:	1447
	CSMgr:	1448
	DocExts:	1449
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    _AVExtAdvEditorTheme.CopySelected\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1447
	Owner:	1446
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1448
)

(DocAct.1449
	Doc:	1446
)

(SEd.1450
	Name:	"AVExtAdvEditor.StCopyFrom"
	CreationDate:	"05 Июль 2004 г. 12:38:46"
	GUIName:	"Script"
	Win:	1451
	CSMgr:	1452
	DocExts:	1453
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.CanExportToFTab) then\n    aFTab = _AVExtAdvEditorTheme.GetFTab\n    if (aFTab.IsEditable.Not) then\n      aSF = aFTab.FindField(\"Shape\")\n      if (aSF <> nil) then\n        aSel = aFTAb.GetSelection\n        if (aSel.Count > 0) then\n          aGrL = GraphicList.Make\n          aGrL.SetDisplay(av.FindDoc(\"AVExtAdvEditThemeDoc_NotEditable\").GetDisplay)\n          for each i in aSel\n            aShape = aFtab.ReturnValue(aSf,i)\n            aGr = Graphi
cShape.Make(aShape)\n            aGrL.Add(aGr)\n          end\n          aGrL.SelectAll\n          aGrL.CopySelected      \n        end\n      end\n    end\n  end\nend\nav.GetProject.FindGUI(\"AVExtAdvEditView\").Update"
	SearchStr:	"NotEditNumV"
)

(DocWin.1451
	Owner:	1450
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1452
)

(DocAct.1453
	Doc:	1450
)

(SEd.1454
	Name:	"AVExtAdvEditor.StCopyFromUpd"
	CreationDate:	"05 Июль 2004 г. 12:49:17"
	GUIName:	"Script"
	Win:	1455
	CSMgr:	1456
	DocExts:	1457
	Source:	"self.setenabled(false)\nif (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.CanExportToFTab) then\n    aFTab = _AVExtAdvEditorTheme.GetFTab\n    if (aFTab.IsEditable.Not) then\n      aSF = aFTab.FindField(\"Shape\")\n      if (aSF <> nil) then\n        aSel = aFTAb.GetSelection\n        if (aSel.Count > 0) then\n          self.setenabled(true)\n        end\n      end\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1455
	Owner:	1454
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1456
)

(DocAct.1457
	Doc:	1454
)

(SEd.1458
	Name:	"AVExtAdvEditor.StCopyUpd"
	CreationDate:	"12 Май 2004 г. 1:27:51"
	GUIName:	"Script"
	Win:	1459
	CSMgr:	1460
	DocExts:	1461
	Source:	"gCount = 0\nif (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    gCount = _AVExtAdvEditorTheme.GetFTab.GetSelection.Count\n  end\nend\nSELF.SetEnabled(gCount > 0)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1459
	Owner:	1458
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1460
)

(DocAct.1461
	Doc:	1458
)

(SEd.1462
	Name:	"AVExtAdvEditor.StCut"
	CreationDate:	"12 Май 2004 г. 1:22:38"
	GUIName:	"Script"
	Win:	1463
	CSMgr:	1464
	DocExts:	1465
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    _AVExtAdvEditorTheme.GetFtab.BeginTransaction\n    _AVExtAdvEditorTheme.CutSelected\n    _AVExtAdvEditorTheme.GetFTab.EndTransaction\n    av.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)\n    av.GetProject.FindGUI(\"AVExtAdvEditView\").Update\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1463
	Owner:	1462
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1464
)

(DocAct.1465
	Doc:	1462
)

(SEd.1466
	Name:	"AVExtAdvEditor.StCutUpd"
	CreationDate:	"12 Май 2004 г. 1:19:07"
	GUIName:	"Script"
	Win:	1467
	CSMgr:	1468
	DocExts:	1469
	Source:	"gCount = 0\nif (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    gCount = _AVExtAdvEditorTheme.GetFTab.GetSelection.Count\n  end\nend\nSELF.SetEnabled(gCount > 0)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1467
	Owner:	1466
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1468
)

(DocAct.1469
	Doc:	1466
)

(SEd.1470
	Name:	"AVExtAdvEditor.StDelete"
	CreationDate:	"12 Май 2004 г. 1:33:12"
	GUIName:	"Script"
	Win:	1471
	CSMgr:	1472
	DocExts:	1473
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    _AVExtAdvEditorTheme.GetFtab.BeginTransaction\n    _AVExtAdvEditorTheme.ClearSelected\n    _AVExtAdvEditorTheme.GetFTab.EndTransaction\n    av.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)\n    av.GetProject.FindGUI(\"AVExtAdvEditView\").Update\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1471
	Owner:	1470
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1472
)

(DocAct.1473
	Doc:	1470
)

(SEd.1474
	Name:	"AVExtAdvEditor.StDeleteUpd"
	CreationDate:	"12 Май 2004 г. 1:29:47"
	GUIName:	"Script"
	Win:	1475
	CSMgr:	1476
	DocExts:	1477
	Source:	"gCount = 0\nif (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    gCount = _AVExtAdvEditorTheme.GetFTab.GetSelection.Count\n  end\nend\nSELF.SetEnabled(gCount > 0)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1475
	Owner:	1474
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1476
)

(DocAct.1477
	Doc:	1474
)

(SEd.1478
	Name:	"AVExtAdvEditor.StDelTh"
	CreationDate:	"3 Июль 2004 г. 9:13:18"
	GUIName:	"Script"
	Win:	1479
	CSMgr:	1480
	DocExts:	1481
	Source:	"thmList = {}\nfor each t in _AVExtAdvEditorView.GetActiveThemes\n  if (t.CanDeleteFromView) then\n    if (t.CanEdit) then\n      if (t.GetFTab.IsEditable) then\n        doSave = MsgBox.YesNoCancel(\"Save edits to \"+t.GetName+\"?\",\n                                    \"Stop Editing\",true)\n        if (doSave = nil) then\n          return nil\n        end\n        if (t.StopEditing(doSave).Not) then\n          MsgBox.Info(\"Unable to Save Edits to \" \n                     + t.GetName +\n                     \", please use the
 Save Edits As option\",\"\")\n          return nil\n        else\n          aDoc = _AVExtAdvEditorListDocTh.Get(t)\n          _AVExtAdvEditorList.Set(t,0)\n          aDoc.SetEditableTheme(nil)\n        end  \n      end\n    end \n    thmList.Add(t)\n  end\nend\n\nthmList2 = thmlist.clone\nfor each t in thmList\n  doDelete = MsgBox.AllYesNo(\"Are you sure you want to delete theme \" + \n                            t.asString + \"?\", \"Delete Themes\", true)\n  if (doDelete = nil) then \n    break\n  elseif (doDelete) then\n    _AVExtA
dvEditorView.DeleteTheme(t)\n    _AVExtAdvEditorVisible.Remove(t)\n    _AVExtAdvEditorListSnap.Remove(t)\n    _AVExtAdvEditorSelectableBitmap.Remove(t)\n    _AVExtAdvEditorList.Remove(t)\n    _AVExtAdvEditorSelectable.Remove(t)\n    _AVExtAdvEditorListDocTh.Remove(t)\n    thmList2.RemoveObj(t)\n  else\n    thmList2.RemoveObj(t)\n  end\nend\n\nfor each t in thmList2\n  _AVExtAdvEditorView.DeleteTheme(t)\n  _AVExtAdvEditorVisible.Remove(t)\n  _AVExtAdvEditorListSnap.Remove(t)\n  _AVExtAdvEditorSelectableBitmap.Remove(t)\n  _AV
ExtAdvEditorList.Remove(t)\n  _AVExtAdvEditorSelectable.Remove(t)\n  _AVExtAdvEditorListDocTh.Remove(t)\nend\n\nav.GetProject.SetModified(true)\nav.PurgeObjects\nav.FindDialog(\"AVExtAdvEditor.Target\").FindByName(\"aLBT\").Select\nav.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1479
	Owner:	1478
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1480
)

(DocAct.1481
	Doc:	1478
)

(SEd.1482
	Name:	"AVExtAdvEditor.StDelThUpd"
	CreationDate:	"3 Июль 2004 г. 9:11:53"
	GUIName:	"Script"
	Win:	1483
	CSMgr:	1484
	DocExts:	1485
	Source:	"for each t in _AVExtAdvEditorView.GetActiveThemes\n  if (t.CanDeleteFromView) then\n    SELF.SetEnabled(true)\n    return nil\n  end\nend\n\nSELF.SetEnabled(false)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1483
	Owner:	1482
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1484
)

(DocAct.1485
	Doc:	1482
)

(SEd.1486
	Name:	"AVExtAdvEditor.StExport"
	CreationDate:	"4 Июль 2004 г. 12:25:47"
	GUIName:	"Script"
	Win:	1487
	CSMgr:	1488
	DocExts:	1489
	Source:	"for each t in _AVExtAdvEditorView.GetActiveThemes\n  aDocClone = av.FindDoc(\"AVExtAdvEditThemeDoc_NotEditable\")\n  aThemeList = {}\n  NotEditNum = 0\n  p = FALSE\n  if (t.Is( FTHEME ).Not) then \n    if (t.CanExportToFtab.Not) then\n      continue\n    end  \n    def = av.GetProject.MakeFileName(\"theme\", \"shp\")\n    def = FileDialog.Put(def, \"*.shp\", \"Convert \" + t.getName)\n    if (def = NIL) then\n      return NIL\n    end\n    anFTab = t.ExportToFtab(def)\n    if (anFTab=nil) then\n      MsgBox.Warning(\"Error occurred w
hile converting to shapefile.\"+NL+\n                      \"Shapefile was not created.\", \"Convert \" + t.getName)\n      continue\n    end  \n    shpfld = anFTab.FindField(\"Shape\")\n  else  \n    tbl = t.GetFTab\n    attribVis = FALSE\n    for each f in tbl.GetFields\n      if ((f.IsVisible) and not (f.IsTypeShape)) then\n        attribVis = TRUE\n        break\n      end\n    end\n    shapeVis = tbl.FindField(\"Shape\").IsVisible\n    if ((attribVis and shapeVis).Not) then\n      continue\n    end\n    def = av.GetProject.MakeF
ileName(\"theme\", \"shp\")\n    def = FileDialog.Put(def, \"*.shp\", \"Convert \" + t.getName)\n    if (def = NIL) then\n      return nil\n    end\n    shpfld = (tbl.FindField(\"Shape\"))\n    if (shpfld.IsVisible.Not) then\n      shpfld.SetVisible(shpfld.IsVisible.Not)\n      WasNotVisible = TRUE\n    else\n      WasNotVisible = FALSE\n    end\n    thePrj = _AVExtAdvEditorView.GetProjection\n    if (thePrj.IsNull.Not) then\n      p = MsgBox.YesNoCancel(\"ArcView has detected that your view is projected.\"++\n        \"Do you want th
e new shapefile to be saved in the projected units?\",\n        \"Convert\", FALSE)\n      if (p = Nil) then\n        return nil\n      end\n    end\n    if (p) then\n      anFTab = tbl.ExportProjected(def, thePrj, tbl.GetSelection.Count > 0)\n    else\n      anFTab = tbl.Export(def, Shape, tbl.GetSelection.Count > 0)\n    end\n    if (anFTab.HasError) then\n      if (anFTab.HasLockError) then\n        MsgBox.Error(\"Unable to acquire Write Lock for file \" +\n          def.GetBaseName,\"\")\n      else\n        MsgBox.Error(\"Una
ble to create \" + def.GetBaseName,\"\")\n      end\n      return nil\n    end\n    if (WasNotVisible) then\n      shpfld.SetVisible(FALSE)\n    end  \n  end\n  anFTab.CreateIndex(shpfld)\n  if (p.Not) then\n    if (MsgBox.YesNo(\"Add shapefile as theme to the view?\",\n      \"Convert to Shapefile\",true).Not) then\n      continue\n    end    \n    fthm = FTheme.Make(anFTab)\n    if (fthm.CanEdit) then\n      AdThemeView = aDocClone.Clone\n      AdThemeView.SetGUI(\"AVExtAdvEditTheme\")\n      AdThemeView.SetName(\"AVExtAdvEditThemeD
oc_Start_\" + (_AVExtAdvEditorListDocTh.Count + 1).AsString)\n      aList = AdThemeView.getThemes\n      for each y in aList.Clone\n        AdThemeView.DeleteTheme(y)\n      end\n      fthm.SetActive(false)\n      AdThemeView.AddTheme(fthm)\n      aThemeList.Add(AdThemeView)\n      AdThemeView.GetWin.Close\n      _AVExtAdvEditorListDocTh.Add(AdThemeView.GetThemes.Get(0),AdThemeView)\n    else\n      aNotEdit = av.FindDoc(\"AVExtAdvEditThemeDoc_NotEditable\")\n      fthm.SetActive(false)\n      aNotEdit.AddTheme(fthm)\n     
 aThemeList.Add(NotEditNum)\n      NotEditNum = NotEditNum + 1\n    end\n    for each i in aThemeList\n      if (i.Is(Number)) then\n        aThemeListI = av.FindDoc(\"AVExtAdvEditThemeDoc_NotEditable\").GetThemes.Get(i)\n        _AVExtAdvEditorView.AddTheme(aThemeListI)\n        if (aThemeListI.CanSelect) then\n          if (aThemeListI.IsVisible) then\n            _AVExtAdvEditorVisible.Add(aThemeListI,1)\n          else\n            _AVExtAdvEditorVisible.Add(aThemeListI,0)\n          end\n          _AVExtAdvEditorList
Snap.Add(aThemeListI,{0,0,0,0})\n          _AVExtAdvEditorSelectableBitmap.Add(aThemeListI,aThemeListI.GetFTab.GetSelection.Clone)\n          _AVExtAdvEditorList.Add(aThemeListI,2)\n          _AVExtAdvEditorSelectable.Add(aThemeListI,0)\n        end\n      else\n        _AVExtAdvEditorView.AddTheme(i.GetThemes.Get(0))\n        if (i.GetThemes.Get(0).CanSelect) then\n          if (i.GetThemes.Get(0).IsVisible) then\n            _AVExtAdvEditorVisible.Add(i.GetThemes.Get(0),1)\n          else\n            _AVExtAdvEdito
rVisible.Add(i.GetThemes.Get(0),0)\n          end\n          _AVExtAdvEditorListSnap.Add(i.GetThemes.Get(0),{0,0,0,0})\n          _AVExtAdvEditorSelectableBitmap.Add(i.GetThemes.Get(0),i.GetThemes.Get(0).GetFTab.GetSelection.Clone)\n          if (i.GetThemes.Get(0).CanEdit) then\n            clsName = i.GetThemes.Get(0).GetFTab.GetShapeClass.GetClassName\n            if ((clsName = \"Point\") or (clsName = \"MultiPoint\") or (clsName = \"PolyLine\") or (clsName = \"Polygon\") or (clsName = \"GeoEvent\")) then\n             
 _AVExtAdvEditorList.Add(i.GetThemes.Get(0),0)\n              _AVExtAdvEditorSelectable.Add(i.GetThemes.Get(0),1)\n            else\n              _AVExtAdvEditorList.Add(i.GetThemes.Get(0),2)\n              _AVExtAdvEditorSelectable.Add(i.GetThemes.Get(0),0)\n            end\n          else\n            _AVExtAdvEditorList.Add(i.GetThemes.Get(0),2)\n            _AVExtAdvEditorSelectable.Add(i.GetThemes.Get(0),0)\n          end\n        end\n      end\n    end\n  else\n    MsgBox.Info(\"Since your view is projected, the p
rojected data\" ++\n                \"will not be added to the view. It has been saved on disk.\", \"Convert\")\n  end\n  _AVExtAdvEditorView.GetWin.Activate\n  av.FindDialog(\"AVExtAdvEditor.Target\").FindByName(\"aLBT\").Select\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1487
	Owner:	1486
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1488
)

(DocAct.1489
	Doc:	1486
)

(SEd.1490
	Name:	"AVExtAdvEditor.StExportUpd"
	CreationDate:	"4 Июль 2004 г. 12:37:15"
	GUIName:	"Script"
	Win:	1491
	CSMgr:	1492
	DocExts:	1493
	Source:	"enabled = FALSE\nfor each t in _AVExtAdvEditorView.GetActiveThemes\n  if (t.Is(FTheme)) then \n    tbl = t.GetFTab\n    attribVis = FALSE\n    for each f in tbl.GetFields\n      if ((f.IsVisible) and not (f.IsTypeShape)) then\n        attribVis = TRUE\n        break\n      end\n    end\n    shapeVis = tbl.FindField(\"Shape\").IsVisible\n    enabled = enabled or (attribVis and shapeVis)\n  elseif (t.CanExportToFtab) then\n    enabled = True\n  end\nend\nSELF.SetEnabled(enabled)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1491
	Owner:	1490
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1492
)

(DocAct.1493
	Doc:	1490
)

(SEd.1494
	Name:	"AVExtAdvEditor.StFind"
	CreationDate:	"3 Июль 2004 г. 8:04:31"
	GUIName:	"Script"
	Win:	1495
	CSMgr:	1496
	DocExts:	1497
	Source:	"key = MsgBox.Input(\"Search for:\", \"Find Text in Attributes\", _AVExtAdvEditorView.GetFindString)\nif (key <> nil) then\n  av.UseWaitCursor\n  if (_AVExtAdvEditorView.Find(key).not) then\n    MsgBox.Warning(\"No more matches found.\",\"Find\")\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1495
	Owner:	1494
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1496
)

(DocAct.1497
	Doc:	1494
)

(SEd.1498
	Name:	"AVExtAdvEditor.StHasThUpd"
	CreationDate:	"3 Июль 2004 г. 8:51:15"
	GUIName:	"Script"
	Win:	1499
	CSMgr:	1500
	DocExts:	1501
	Source:	"SELF.SetEnabled(0 < _AVExtAdvEditorView.GetThemes.Count)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1499
	Owner:	1498
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1500
)

(DocAct.1501
	Doc:	1498
)

(SEd.1502
	Name:	"AVExtAdvEditor.StHelpAbout"
	CreationDate:	"3 Июль 2004 г. 6:17:15"
	GUIName:	"Script"
	Win:	1503
	CSMgr:	1504
	DocExts:	1505
	Source:	"av.About"
	SearchStr:	"NotEditNumV"
)

(DocWin.1503
	Owner:	1502
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1504
)

(DocAct.1505
	Doc:	1502
)

(SEd.1506
	Name:	"AVExtAdvEditor.StHelpAboutAE"
	CreationDate:	"3 Июль 2004 г. 6:18:44"
	GUIName:	"Script"
	Win:	1507
	CSMgr:	1508
	DocExts:	1509
	Source:	"aV.FindDialog(\"AVExtAdvEditor.About\").Open"
	SearchStr:	"NotEditNumV"
)

(DocWin.1507
	Owner:	1506
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1508
)

(DocAct.1509
	Doc:	1506
)

(SEd.1510
	Name:	"AVExtAdvEditor.StHelpHelp"
	CreationDate:	"3 Июль 2004 г. 6:16:11"
	GUIName:	"Script"
	Win:	1511
	CSMgr:	1512
	DocExts:	1513
	Source:	"av.Help.SetAVFile\nav.Help.ShowTopic(\"How_to_get_help\")"
	SearchStr:	"NotEditNumV"
)

(DocWin.1511
	Owner:	1510
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1512
)

(DocAct.1513
	Doc:	1510
)

(SEd.1514
	Name:	"AVExtAdvEditor.StHelpHelpAE"
	CreationDate:	"3 Июль 2004 г. 6:24:46"
	GUIName:	"Script"
	Win:	1515
	CSMgr:	1516
	DocExts:	1517
	Source:	"system.execute(\"Explorer\"++(\"$AVEXT\\ExtAdvEdit\\help.htm\".AsFileName.GetFullName))"
	SearchStr:	"NotEditNumV"
)

(DocWin.1515
	Owner:	1514
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1516
)

(DocAct.1517
	Doc:	1514
)

(SEd.1518
	Name:	"AVExtAdvEditor.StHelpHelpTop"
	CreationDate:	"3 Июль 2004 г. 5:27:00"
	GUIName:	"Script"
	Win:	1519
	CSMgr:	1520
	DocExts:	1521
	Source:	"av.Help.SetAVFile\nav.Help.Show"
	SearchStr:	"NotEditNumV"
)

(DocWin.1519
	Owner:	1518
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1520
)

(DocAct.1521
	Doc:	1518
)

(SEd.1522
	Name:	"AVExtAdvEditor.StIntersect"
	CreationDate:	"12 Май 2004 г. 2:04:07"
	GUIName:	"Script"
	Win:	1523
	CSMgr:	1524
	DocExts:	1525
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    _AVExtAdvEditorTheme.GetFTab.BeginTransaction\n    _AVExtAdvEditorTheme.IntersectSelected\n    _AVExtAdvEditorTheme.GetFTab.EndTransaction\n    _AVExtAdvEditorTheme.Invalidate(TRUE)\n    av.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)\n    av.GetProject.FindGUI(\"AVExtAdvEditView\").Update\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1523
	Owner:	1522
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1524
)

(DocAct.1525
	Doc:	1522
)

(SEd.1526
	Name:	"AVExtAdvEditor.StIntersectUpd"
	CreationDate:	"12 Май 2004 г. 2:02:44"
	GUIName:	"Script"
	Win:	1527
	CSMgr:	1528
	DocExts:	1529
	Source:	"enabled = FALSE\nif (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    fCount = _AVExtAdvEditorTheme.GetFTab.GetSelection.Count\n    shapeClass = _AVExtAdvEditorTheme.GetFTab.FindField(\"shape\").GetType\n    enabled =  ((fcount > 1) and (shapeClass = #FIELD_SHAPEPOLY))\n  end\nend\nSELF.SetEnabled(enabled)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1527
	Owner:	1526
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1528
)

(DocAct.1529
	Doc:	1526
)

(SEd.1530
	Name:	"AVExtAdvEditor.StLegend"
	CreationDate:	"3 Июль 2004 г. 8:15:52"
	GUIName:	"Script"
	Win:	1531
	CSMgr:	1532
	DocExts:	1533
	Source:	"for each t in _AVExtAdvEditorView.getActiveThemes\n  s = t.getLegendEditorScript\n  if (s.isnull.not) then\n    av.run(s,t)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1531
	Owner:	1530
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1532
)

(DocAct.1533
	Doc:	1530
)

(SEd.1534
	Name:	"AVExtAdvEditor.StNewTh"
	CreationDate:	"4 Июль 2004 г. 10:53:18"
	GUIName:	"Script"
	Win:	1535
	CSMgr:	1536
	DocExts:	1537
	Source:	"type = MsgBox.ChoiceAsString({\"Point\",\"MultiPoint\",\"Line\", \"Polygon\"}, \"Feature type:\", \"New Theme\")\nif (type = \"Point\") then\n  class = Point\nelseif (type = \"Line\") then\n  class = PolyLine\nelseif (type = \"Polygon\") then\n  class = Polygon\nelseif (type = \"MultiPoint\") then\n  class = MultiPoint\nelse\n  return nil\nend\ndef = av.GetProject.MakeFileName(\"theme\", \"shp\")\ndef = FileDialog.Put(def, \"*.shp\", \"New Theme\")\naDocClone = av.FindDoc(\"AVExtAdvEditThemeDoc_NotEditable\")\nif (def <> nil) then\n  tbl = FTab.MakeNew
(def, class)\n  if (tbl.HasError) then\n     if (tbl.HasLockError) then\n        MsgBox.Error(\"Unable to acquire Write Lock for file \" + def.GetBaseName, \"\")\n     else\n        MsgBox.Error(\"Unable to create \" + def.GetBaseName, \"\")\n     end\n     return nil\n  end\n  fld = Field.Make(\"ID\", #FIELD_DECIMAL, 8, 0)\n  fld.SetVisible( TRUE )\n  tbl.AddFields({fld})\n  tbl.SetEditable(False)\n  theTheme = FTheme.Make(tbl)    \n  aThemeList = {}\n  AdThemeView = aDocClone.Clone\n  AdThemeView.SetGUI(\"AVExtAdvEditTheme\")\n  AdTh
emeView.SetName(\"AVExtAdvEditThemeDoc_Start_\" + (_AVExtAdvEditorListDocTh.Count + 1).AsString)\n  aList = AdThemeView.getThemes\n  for each y in aList.Clone\n    AdThemeView.DeleteTheme(y)\n  end\n  theTheme.SetActive(false)\n  AdThemeView.AddTheme(theTheme)\n  AdThemeView.SetEditableTheme(nil)\n  AdThemeView.SetEditableTheme(theTheme)\n  aThemeList.Add(AdThemeView)\n  AdThemeView.GetWin.Close\n  _AVExtAdvEditorListDocTh.Add(AdThemeView.GetThemes.Get(0),AdThemeView)  \n  if (aThemeList.Count > 0) then\n    for each i in
 aThemeList\n      _AVExtAdvEditorView.AddTheme(i.GetThemes.Get(0))\n      theTheme.SetVisible(TRUE)\n      if (i.GetThemes.Get(0).CanSelect) then\n        if (i.GetThemes.Get(0).IsVisible) then\n          _AVExtAdvEditorVisible.Add(i.GetThemes.Get(0),1)\n        else\n          _AVExtAdvEditorVisible.Add(i.GetThemes.Get(0),0)\n        end\n        _AVExtAdvEditorListSnap.Add(i.GetThemes.Get(0),{0,0,0,0})\n        _AVExtAdvEditorSelectableBitmap.Add(i.GetThemes.Get(0),i.GetThemes.Get(0).GetFTab.GetSelection.Clone)\n  
      if (i.GetThemes.Get(0).CanEdit) then\n          AdThemeView.SetEditableTheme(theTheme)\n          clsName = i.GetThemes.Get(0).GetFTab.GetShapeClass.GetClassName\n          if ((clsName = \"Point\") or (clsName = \"MultiPoint\") or (clsName = \"PolyLine\") or (clsName = \"Polygon\") or (clsName = \"GeoEvent\")) then\n            _AVExtAdvEditorList.Add(i.GetThemes.Get(0),1)\n            _AVExtAdvEditorSelectable.Add(i.GetThemes.Get(0),1)\n          else\n            _AVExtAdvEditorList.Add(i.GetThemes.Get(0),2)\n      
      _AVExtAdvEditorSelectable.Add(i.GetThemes.Get(0),0)\n          end\n        else\n          _AVExtAdvEditorList.Add(i.GetThemes.Get(0),2)\n          _AVExtAdvEditorSelectable.Add(i.GetThemes.Get(0),0)\n        end\n      end\n    end\n  end  \n  av.GetProject.SetModified(true)\nend\nav.FindDialog(\"AVExtAdvEditor.Target\").FindByName(\"aLBT\").Select\nav.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1535
	Owner:	1534
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1536
)

(DocAct.1537
	Doc:	1534
)

(SEd.1538
	Name:	"AVExtAdvEditor.StopEditSelUpd"
	CreationDate:	"5 Июль 2004 г. 0:48:11"
	GUIName:	"Script"
	Win:	1539
	CSMgr:	1540
	DocExts:	1541
	Source:	"thePrjView = _AVExtAdvEditorView.GetProjection\nagrlist = _AVExtAdvEditorView.getgraphics\naListRect = \"\"\naThemesList = _AVExtAdvEditorSelectableBitmap.ReturnKeys\nfor each ithemes in aThemesList\n  if (av.FindDialog(\"AVExtAdvEditor.Attrib\").ISOpen) then\n    av.Run(\"AVExtAdvEditor.AttributUpd\",nil)\n  end\n  _AVExtAdvEditorSelectableBitmap.Set(ithemes,ithemes.GetFTab.GetSelection.clone)\n  aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelecting\")\n  if (aListVertex <> nil) then\n    for each igraph in aListVert
ex\n      if (igraph.getobjecttag.Get(0) = ithemes) then\n        agrlist.RemoveGraphic(igraph)\n      end\n    end\n  end\n  aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelectingCenter\")\n  if (aListVertex <> nil) then\n    for each igraph in aListVertex\n      agrlist.RemoveGraphic(igraph)\n    end\n  end\n  if (ithemes.GetFTab.IsEditable) then\n    if (_AVExtAdvEditorSelectable.GEt(ithemes) = 1) then\n      if (ithemes.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOINT) then\n        aFTab = ithemes.GetFTab\n
        aShapeField = aFTab.FindField(\"Shape\")\n        if (ithemes.IsVisible) then\n          for each ibit in aFTab.GetSelection\n            aShape = aFTab.ReturnValue(aShapeField,ibit)\n            if (thePrjView.IsNull.Not) then\n              aShape = aShape.Returnprojected(thePrjView)\n            end\n            aNewGraph = GraphicShape.Make(aShape)\n            aNewGraph.SetName(\"AVExtAdvEditorSelecting\")\n            aNewGraph.SetObjectTag({ithemes,ibit.clone})\n            aNewGraph.SetSymbol(_AVExtAdvEdi
torSelectionPoint)\n            agrlist.Add(aNewGraph)\n            if (aListRect = \"\") then\n              aListRect = aShape.ReturnExtent\n            else\n              aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n            end\n          end\n        else\n          for each ibit in aFTab.GetSelection\n            aShape = aFTab.ReturnValue(aShapeField,ibit)\n            if (thePrjView.IsNull.Not) then\n              aShape = aShape.Returnprojected(thePrjView)\n            end\n            if (aListRect =
 \"\") then\n              aListRect = aShape.ReturnExtent\n            else\n              aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n            end\n          end\n        end\n      elseif (ithemes.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n        aFTab = ithemes.GetFTab\n        aShapeField = aFTab.FindField(\"Shape\")\n        if (ithemes.IsVisible) then\n          for each ibit in aFTab.GetSelection\n            aShape = aFTab.ReturnValue(aShapeField,ibit)\n            if (thePrjView.IsN
ull.Not) then\n              aShape = aShape.Returnprojected(thePrjView)\n            end\n            aNewGraph = GraphicShape.Make(aShape.AsPolyline)\n            aNewGraph.SetName(\"AVExtAdvEditorSelecting\")\n            aNewGraph.SetObjectTag({ithemes,ibit.clone})\n            aNewGraph.SetSymbol(_AVExtAdvEditorSelectionSketch)\n            agrlist.Add(aNewGraph)\n            if (aListRect = \"\") then\n              aListRect = aShape.ReturnExtent\n            else\n              aListRect = aListRect.UnionWith(aSha
pe.ReturnExtent)\n            end\n          end\n        else\n          for each ibit in aFTab.GetSelection\n            aShape = aFTab.ReturnValue(aShapeField,ibit)\n            if (thePrjView.IsNull.Not) then\n              aShape = aShape.Returnprojected(thePrjView)\n            end\n            if (aListRect = \"\") then\n              aListRect = aShape.ReturnExtent\n            else\n              aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n            end\n          end\n        end\n      elseif (ithemes.
GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPELINE) then\n        aFTab = ithemes.GetFTab\n        aShapeField = aFTab.FindField(\"Shape\")\n        if (ithemes.IsVisible) then\n          for each ibit in aFTab.GetSelection\n            aShape = aFTab.ReturnValue(aShapeField,ibit)\n            if (thePrjView.IsNull.Not) then\n              aShape = aShape.Returnprojected(thePrjView)\n            end\n            aNewGraph = GraphicShape.Make(aShape)\n            aNewGraph.SetName(\"AVExtAdvEditorSelecting\")\n         
   aNewGraph.SetObjectTag({ithemes,ibit.clone})\n            aNewGraph.SetSymbol(_AVExtAdvEditorSelectionSketch)\n            agrlist.Add(aNewGraph)\n            if (aListRect = \"\") then\n              aListRect = aShape.ReturnExtent\n            else\n              aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n            end\n          end\n        else\n          for each ibit in aFTab.GetSelection\n            aShape = aFTab.ReturnValue(aShapeField,ibit)\n            if (thePrjView.IsNull.Not) then\n        
      aShape = aShape.Returnprojected(thePrjView)\n            end\n            if (aListRect = \"\") then\n              aListRect = aShape.ReturnExtent\n            else\n              aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n            end\n          end\n        end\n      elseif(ithemes.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEMULTIPOINT) then\n        aFTab = ithemes.GetFTab\n        aShapeField = aFTab.FindField(\"Shape\")\n        if (ithemes.IsVisible) then\n          for each ibit in aFTab.Ge
tSelection\n            aShape = aFTab.ReturnValue(aShapeField,ibit)\n            if (thePrjView.IsNull.Not) then\n              aShape = aShape.Returnprojected(thePrjView)\n            end\n            aNewGraph = GraphicShape.Make(aShape)\n            aNewGraph.SetName(\"AVExtAdvEditorSelecting\")\n            aNewGraph.SetObjectTag({ithemes,ibit.clone})\n            aNewGraph.SetSymbol(_AVExtAdvEditorSelectionPoint)\n            agrlist.Add(aNewGraph)\n            if (aListRect = \"\") then\n              aListRect = a
Shape.ReturnExtent\n            else\n              aListRect = aListRect.UnionWith(aShape.ReturnExtent)\n            end\n          end\n        else\n          for each ibit in aFTab.GetSelection\n            aShape = aFTab.ReturnValue(aShapeField,ibit)\n            if (thePrjView.IsNull.Not) then\n              aShape = aShape.Returnprojected(thePrjView)\n            end\n            if (aListRect = \"\") then\n              aListRect = aShape.ReturnExtent\n            else\n              aListRect = aListRect.UnionWith
(aShape.ReturnExtent)\n            end\n          end\n        end\n      end\n    end\n  end\n  if (aListRect <> \"\") then\n    aNewGraph = GraphicShape.Make(aListRect.ReturnCenter)\n    aNewGraph.SetName(\"AVExtAdvEditorSelectingCenter\")\n    aNewGraph.SetSymbol(_AVExtAdvEditorSelectionCenter)\n    agrlist.Add(aNewGraph)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1539
	Owner:	1538
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1540
)

(DocAct.1541
	Doc:	1538
)

(SEd.1542
	Name:	"AVExtAdvEditor.StPaste"
	CreationDate:	"12 Май 2004 г. 1:40:13"
	GUIName:	"Script"
	Win:	1543
	CSMgr:	1544
	DocExts:	1545
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    _AVExtAdvEditorTheme.GetFtab.BeginTransaction\n    _AVExtAdvEditorTheme.Paste\n    _AVExtAdvEditorTheme.GetFTab.EndTransaction\n    av.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)\n    av.GetProject.FindGUI(\"AVExtAdvEditView\").Update\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1543
	Owner:	1542
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1544
)

(DocAct.1545
	Doc:	1542
)

(SEd.1546
	Name:	"AVExtAdvEditor.StPasteUpd"
	CreationDate:	"12 Май 2004 г. 1:37:45"
	GUIName:	"Script"
	Win:	1547
	CSMgr:	1548
	DocExts:	1549
	Source:	"self.Setenabled(false)\nif (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorList.Get(_AVExtAdvEditorTheme) = 1) then\n    SELF.SetEnabled(Clipboard.The.HasKindOf(Graphic))\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1547
	Owner:	1546
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1548
)

(DocAct.1549
	Doc:	1546
)

(SEd.1550
	Name:	"AVExtAdvEditor.StQuery"
	CreationDate:	"3 Июль 2004 г. 7:30:49"
	GUIName:	"Script"
	Win:	1551
	CSMgr:	1552
	DocExts:	1553
	Source:	"if (_AVExtAdvEditorTheme.HasAttributes) then\n  _AVExtAdvEditorThemeQueryWin = QueryWin.Make(_AVExtAdvEditorTheme.GEtFTAb)\n  av.Run(\"AVExtAdvEditor.StQueryUpd\",nil)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1551
	Owner:	1550
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1552
)

(DocAct.1553
	Doc:	1550
)

(SEd.1554
	Name:	"AVExtAdvEditor.StQueryUpd"
	CreationDate:	"3 Июль 2004 г. 7:45:16"
	GUIName:	"Script"
	Win:	1555
	CSMgr:	1556
	DocExts:	1557
	Source:	"if (_AVExtAdvEditorThemeQueryWin <> nil) then\n  if (_AVExtAdvEditorThemeQueryWin.IsOpen) then\n    av.Run(\"AVExtAdvEditor.SelectEditUpd\",nil)\n    av.DelayedRun(\"AVExtAdvEditor.StQueryUpdPart2\",nil,0)\n  else\n    _AVExtAdvEditorThemeQueryWin = nil\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1555
	Owner:	1554
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1556
)

(DocAct.1557
	Doc:	1554
)

(SEd.1558
	Name:	"AVExtAdvEditor.StQueryUpdPart2"
	CreationDate:	"3 Июль 2004 г. 7:49:00"
	GUIName:	"Script"
	Win:	1559
	CSMgr:	1560
	DocExts:	1561
	Source:	"av.Run(\"AVExtAdvEditor.StQueryUpd\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1559
	Owner:	1558
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1560
)

(DocAct.1561
	Doc:	1558
)

(SEd.1562
	Name:	"AVExtAdvEditor.StRedoEdit"
	CreationDate:	"12 Май 2004 г. 1:05:25"
	GUIName:	"Script"
	Win:	1563
	CSMgr:	1564
	DocExts:	1565
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    _AVExtAdvEditorTheme.GetFTab.Redo\n    av.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)\n    av.GetProject.FindGUI(\"AVExtAdvEditView\").Update\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1563
	Owner:	1562
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1564
)

(DocAct.1565
	Doc:	1562
)

(SEd.1566
	Name:	"AVExtAdvEditor.StRedoEditUpd"
	CreationDate:	"12 Май 2004 г. 1:07:11"
	GUIName:	"Script"
	Win:	1567
	CSMgr:	1568
	DocExts:	1569
	Source:	"enabled = False\nif (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    if (_AVExtAdvEditorTheme.GetFTab.CanRedo) then\n      enabled = True\n    end \n  end \nend\nself.SetEnabled(enabled)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1567
	Owner:	1566
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1568
)

(DocAct.1569
	Doc:	1566
)

(SEd.1570
	Name:	"AVExtAdvEditor.StSaveEdit"
	CreationDate:	"4 Июль 2004 г. 11:21:23"
	GUIName:	"Script"
	Win:	1571
	CSMgr:	1572
	DocExts:	1573
	Source:	"editThm = _AVExtAdvEditorTheme\nif (editThm <> nil) then\n  if (editThm.GetFTab.IsEditable) then  \n    if (_AVExtAdvEditorConfir) then\n      doSave = MsgBox.YesNoCancel(\"Save edits to \"+editThm.GetName+\n      \"?\",\"Save Edits\",true)\n      if (doSave = nil) then\n        return nil\n      end\n      if (doSave.not) then\n        return nil\n      else\n        if (editThm.StopEditing(TRUE).Not) then\n          MsgBox.Info(\"Unable to Save Edits, please use the Save Edits As option\", \"\")\n          return nil\n        end
\n        aDoc = _AVExtAdvEditorListDocTh.Get(editThm)\n        aDoc.SetEditableTheme(editThm)\n      end\n    else\n      if (editThm.StopEditing(TRUE).Not) then\n        MsgBox.Info(\"Unable to Save Edits, please use the Save Edits As option\", \"\")\n        return nil\n      end\n      aDoc = _AVExtAdvEditorListDocTh.Get(editThm)\n      aDoc.SetEditableTheme(editThm)\n    end\n  end\nend\nav.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)\n\n\n"
	SearchStr:	"NotEditNumV"
)

(DocWin.1571
	Owner:	1570
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1572
)

(DocAct.1573
	Doc:	1570
)

(SEd.1574
	Name:	"AVExtAdvEditor.StSaveEditAs"
	CreationDate:	"4 Июль 2004 г. 11:33:36"
	GUIName:	"Script"
	Win:	1575
	CSMgr:	1576
	DocExts:	1577
	Source:	"editThm = _AVExtAdvEditorTheme\nif (editThm <> nil)  then\n  if (editThm.GetFTab.IsEditable) then\n    def = av.GetProject.MakeFileName(\"theme\", \"shp\")\n    def = FileDialog.Put(def, \"*.shp\", \"Save Edits For Theme \" + editThm.GetName)\n    if (def = NIL) then return nil end\n    aDocClone = av.FindDoc(\"AVExtAdvEditThemeDoc_NotEditable\")\n    newTheme = editThm.SaveEditsAs(def)\n    if ((newTheme <> nil) and (newTheme.GetFTab.HasError.Not)) then\n      aThemeList = {}\n      AdThemeView = aDocClone.Clone\n      AdTheme
View.SetGUI(\"AVExtAdvEditTheme\")\n      AdThemeView.SetName(\"AVExtAdvEditThemeDoc_Start_\" + (_AVExtAdvEditorListDocTh.Count + 1).AsString)\n      aList = AdThemeView.getThemes\n      for each y in aList.Clone\n        AdThemeView.DeleteTheme(y)\n      end\n      newTheme.SetActive(false)\n      AdThemeView.AddTheme(newTheme)\n      aThemeList.Add(AdThemeView)\n      AdThemeView.GetWin.Close\n      _AVExtAdvEditorListDocTh.Add(AdThemeView.GetThemes.Get(0),AdThemeView)  \n      if (aThemeList.Count > 0) then\n        for
 each i in aThemeList\n          _AVExtAdvEditorView.AddTheme(i.GetThemes.Get(0))\n          newTheme.SetVisible(TRUE)\n          if (i.GetThemes.Get(0).CanSelect) then\n            if (i.GetThemes.Get(0).IsVisible) then\n              _AVExtAdvEditorVisible.Add(i.GetThemes.Get(0),1)\n            else\n              _AVExtAdvEditorVisible.Add(i.GetThemes.Get(0),0)\n            end\n            _AVExtAdvEditorListSnap.Add(i.GetThemes.Get(0),{0,0,0,0})\n            _AVExtAdvEditorSelectableBitmap.Add(i.GetThemes.Get(0)
,i.GetThemes.Get(0).GetFTab.GetSelection.Clone)\n            if (i.GetThemes.Get(0).CanEdit) then\n              AdThemeView.SetEditableTheme(newTheme)\n              clsName = i.GetThemes.Get(0).GetFTab.GetShapeClass.GetClassName\n              if ((clsName = \"Point\") or (clsName = \"MultiPoint\") or (clsName = \"PolyLine\") or (clsName = \"Polygon\") or (clsName = \"GeoEvent\")) then\n                _AVExtAdvEditorList.Add(i.GetThemes.Get(0),1)\n                _AVExtAdvEditorSelectable.Add(i.GetThemes.Get(0),1)\n     
         else\n                _AVExtAdvEditorList.Add(i.GetThemes.Get(0),2)\n                _AVExtAdvEditorSelectable.Add(i.GetThemes.Get(0),0)\n              end\n            else\n              _AVExtAdvEditorList.Add(i.GetThemes.Get(0),2)\n              _AVExtAdvEditorSelectable.Add(i.GetThemes.Get(0),0)\n            end\n          end\n        end\n      end\n      _AVExtAdvEditorList.Set(editThm,0)\n      aDoc2 = _AVExtAdvEditorListDocTh.Get(editThm)\n      aDoc2.SetEditableTheme(nil) \n    else\n      MsgBox.Info(
\"Unable to Save Edits As \"\n                   + def.AsString  +\n                   \", please try another file name\", \"\")  \n    end\n  end\nend\nav.FindDialog(\"AVExtAdvEditor.Target\").FindByName(\"aLBT\").Select\nav.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1575
	Owner:	1574
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1576
)

(DocAct.1577
	Doc:	1574
)

(SEd.1578
	Name:	"AVExtAdvEditor.StSaveEditUpd"
	CreationDate:	"4 Июль 2004 г. 11:30:20"
	GUIName:	"Script"
	Win:	1579
	CSMgr:	1580
	DocExts:	1581
	Source:	"SELF.SetEnabled(FALSE)\nif (_AVExtAdvEditorView.GetActiveThemes.Count < 1) then\n  SELF.SetEnabled(FALSE)\n  return nil\nend\nif (_AVExtAdvEditorView.GetActiveThemes.Get(0).CanEdit.Not) then\n  SELF.SetEnabled(FALSE)\n  return nil\nend\nif (_AVExtAdvEditorView.GetActiveThemes.Get(0).GetFTAb.IsEditable) then\n  SELF.SetEnabled(TRUE)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1579
	Owner:	1578
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1580
)

(DocAct.1581
	Doc:	1578
)

(SEd.1582
	Name:	"AVExtAdvEditor.StShowTab"
	CreationDate:	"3 Июль 2004 г. 8:13:35"
	GUIName:	"Script"
	Win:	1583
	CSMgr:	1584
	DocExts:	1585
	Source:	"for each t in _AVExtAdvEditorView.GetActiveThemes\n  if (t.HasTable) then\n    t.EditTable\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1583
	Owner:	1582
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1584
)

(DocAct.1585
	Doc:	1582
)

(SEd.1586
	Name:	"AVExtAdvEditor.StSubtract"
	CreationDate:	"12 Май 2004 г. 1:59:25"
	GUIName:	"Script"
	Win:	1587
	CSMgr:	1588
	DocExts:	1589
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    theFTab = _AVExtAdvEditorTheme.GetFTab\n    theFTab.BeginTransaction\n    fldShape = theFTab.FindField(\"shape\")    \n    r1 = theFTab.GetSelection.GetNextSet(-1)\n    r2 = theFTab.GetSelection.GetNextSet(r1)    \n    if (r1 < r2) then\n      recBack = r1\n      recFront = r2\n    else\n      recBack = r2\n      recFront = r1\n    end    \n    shpBack = theFTab.ReturnValue(fldShape,recBack)\n    shpFront = theFTab.ReturnValue(fl
dShape,recFront)    \n    if (System.IsShiftKeyDown) then\n      shpDiff = shpFront.ReturnDifference(shpBack)\n      theFTab.SetValue(fldShape,recFront,shpDiff)\n    else\n      shpDiff = shpBack.ReturnDifference(shpFront)\n      theFTab.SetValue(fldShape,recBack,shpDiff)\n    end    \n    theFTab.UpdateSelection\n    theFtab.EndTransaction\n    _AVExtAdvEditorTheme.Invalidate(TRUE)\n    av.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)\n    av.GetProject.FindGUI(\"AVExtAdvEditView\").Update\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1587
	Owner:	1586
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1588
)

(DocAct.1589
	Doc:	1586
)

(SEd.1590
	Name:	"AVExtAdvEditor.StSubtractUpd"
	CreationDate:	"12 Май 2004 г. 1:57:19"
	GUIName:	"Script"
	Win:	1591
	CSMgr:	1592
	DocExts:	1593
	Source:	"enabled = FALSE\nif (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    fCount = _AVExtAdvEditorTheme.GetFTab.GetSelection.Count\n    shapeClass = _AVExtAdvEditorTheme.GetFTab.FindField(\"shape\").GetType\n    enabled =  ((fcount = 2) and (shapeClass = #FIELD_SHAPEPOLY))\n  end\nend\nSELF.SetEnabled(enabled)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1591
	Owner:	1590
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1592
)

(DocAct.1593
	Doc:	1590
)

(SEd.1594
	Name:	"AVExtAdvEditor.StTabThUpd"
	CreationDate:	"3 Июль 2004 г. 8:00:49"
	GUIName:	"Script"
	Win:	1595
	CSMgr:	1596
	DocExts:	1597
	Source:	"for each t in _AVExtAdvEditorView.GetActiveThemes\n  if (t.HasTable) then\n    SELF.SetEnabled(TRUE)\n    return nil\n  end\nend\nSELF.SetEnabled(FALSE)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1595
	Owner:	1594
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1596
)

(DocAct.1597
	Doc:	1594
)

(SEd.1598
	Name:	"AVExtAdvEditor.StTAutoComplete"
	CreationDate:	"12 Май 2004 г. 3:17:57"
	GUIName:	"Script"
	Win:	1599
	CSMgr:	1600
	DocExts:	1601
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    l = _AVExtAdvEditorView.ReturnUserPolyLine\n    if (l.IsNull) then\n      return nil\n    else\n      _AVExtAdvEditorTheme.GetFtab.BeginTransaction\n      _AVExtAdvEditorTheme.AutoComplete(l)\n      _AVExtAdvEditorTheme.GetFtab.EndTransaction\n    end\n  end\nend\nav.GetProject.SetModified(true)\nav.GetProject.FindGUI(\"AVExtAdvEditView\").Update"
	SearchStr:	"NotEditNumV"
)

(DocWin.1599
	Owner:	1598
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1600
)

(DocAct.1601
	Doc:	1598
)

(SEd.1602
	Name:	"AVExtAdvEditor.StTCircle"
	CreationDate:	"12 Май 2004 г. 3:13:46"
	GUIName:	"Script"
	Win:	1603
	CSMgr:	1604
	DocExts:	1605
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    ll = _AVExtAdvEditorView.ReturnUserCircle\n    if (ll.IsNull) then\n      return nil\n    else\n      l = ll.AsPolygon\n      _AVExtAdvEditorTheme.GetFtab.BeginTransaction\n      thePrj = _AVExtAdvEditorView.GetProjection\n      if (thePrj.IsNull.Not) then\n        l = l.ReturnUnprojected(thePrj)\n      end\n      theField = _AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\")\n      rec = _AVExtAdvEditorTheme.GetFTab.AddRecord\n  
    _AVExtAdvEditorTheme.GetFTab.SetValue(theField, rec, l)\n      _AVExtAdvEditorTheme.GetFTab.GetSelection.ClearAll\n      _AVExtAdvEditorTheme.GetFTab.GetSelection.Set(rec)\n      _AVExtAdvEditorTheme.GetFTab.UpdateSelection\n      _AVExtAdvEditorTheme.GetFtab.EndTransaction\n    end\n  end\nend\nav.GetProject.SetModified(true)\nav.GetProject.FindGUI(\"AVExtAdvEditView\").Update"
	SearchStr:	"NotEditNumV"
)

(DocWin.1603
	Owner:	1602
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1604
)

(DocAct.1605
	Doc:	1602
)

(SEd.1606
	Name:	"AVExtAdvEditor.StThOff"
	CreationDate:	"3 Июль 2004 г. 8:52:59"
	GUIName:	"Script"
	Win:	1607
	CSMgr:	1608
	DocExts:	1609
	Source:	"for each t in _AVExtAdvEditorView.GetThemes\n  if (t.IsVisible) then\n    t.SetVisible(FALSE)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1607
	Owner:	1606
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1608
)

(DocAct.1609
	Doc:	1606
)

(SEd.1610
	Name:	"AVExtAdvEditor.StThOn"
	CreationDate:	"3 Июль 2004 г. 8:54:06"
	GUIName:	"Script"
	Win:	1611
	CSMgr:	1612
	DocExts:	1613
	Source:	"for each t in _AVExtAdvEditorView.GetThemes\n  if (t.IsVisible.not) then\n    t.SetVisible(TRUE)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1611
	Owner:	1610
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1612
)

(DocAct.1613
	Doc:	1610
)

(SEd.1614
	Name:	"AVExtAdvEditor.StThProp"
	CreationDate:	"3 Июль 2004 г. 8:20:56"
	GUIName:	"Script"
	Win:	1615
	CSMgr:	1616
	DocExts:	1617
	Source:	"for each t in _AVExtAdvEditorView.GetActiveThemes\n  t.EditProps\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1615
	Owner:	1614
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1616
)

(DocAct.1617
	Doc:	1614
)

(SEd.1618
	Name:	"AVExtAdvEditor.StTIdentify"
	CreationDate:	"12 Май 2004 г. 2:13:58"
	GUIName:	"Script"
	Win:	1619
	CSMgr:	1620
	DocExts:	1621
	Source:	"found = FALSE\np = _AVExtAdvEditorView.GetDisplay.ReturnUserPoint\nfor each t in _AVExtAdvEditorView.GetActiveThemes\n  if (t.CanFindByPoint) then\n    thmClass = t.GetClass.GetClassName\n    scriptName = thmClass+\".Identify\"\n    if (av.FindScript(scriptName) <> nil) then\n      found = av.run(scriptName, {p,t,found})\n    else\n      keys = t.FindByPoint(p)\n      for each key in keys\n        found = TRUE\n        idlabel = t.GetName++\"-\"\n        f = NIL\n        if (t.CanLabel) then\n           f = t.GetLabelField\n  
      end\n        if (f = NIL) then\n          if (key.Is(Number)) then\n           idlabel = idlabel++key.SetFormat(\"d\").AsString\n          else\n           idlabel = idlabel++\" X :\"++key.GetX.AsString++\" Y :\"++key.GetY.AsString\n          end\n        else\n          s = t.ReturnValueString(f.GetName, key)\n          idlabel = idlabel++s\n        end\n        t.Identify(key, idlabel)\n      end\n    end       \n  end\nend\nif (not found) then\n  System.Beep\nend\nav.GetProject.FindGUI(\"AVExtAdvEditView\").Update"
	SearchStr:	"NotEditNumV"
)

(DocWin.1619
	Owner:	1618
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1620
)

(DocAct.1621
	Doc:	1618
)

(SEd.1622
	Name:	"AVExtAdvEditor.StTIdentifyUpd"
	CreationDate:	"12 Май 2004 г. 2:16:51"
	GUIName:	"Script"
	Win:	1623
	CSMgr:	1624
	DocExts:	1625
	Source:	"for each t in _AVExtAdvEditorView.GetThemes\n  if (t.CanFindByPoint) then\n    SELF.SetEnabled(TRUE)\n    return nil\n  end\nend\nSELF.SetEnabled(FALSE)\n"
	SearchStr:	"NotEditNumV"
)

(DocWin.1623
	Owner:	1622
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1624
)

(DocAct.1625
	Doc:	1622
)

(SEd.1626
	Name:	"AVExtAdvEditor.StTLine"
	CreationDate:	"12 Май 2004 г. 2:53:38"
	GUIName:	"Script"
	Win:	1627
	CSMgr:	1628
	DocExts:	1629
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    l = _AVExtAdvEditorView.ReturnUserLine\n    if (l.IsNull) then\n      return nil\n    else\n      ll = l.AsPolyLine\n      _AVExtAdvEditorTheme.GetFtab.BeginTransaction\n      thePrj = _AVExtAdvEditorView.GetProjection\n      if (thePrj.IsNull.Not) then\n        ll = ll.ReturnUnprojected(thePrj)\n      end\n      theField = _AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\")\n      rec = _AVExtAdvEditorTheme.GetFTab.AddRecord\n   
   _AVExtAdvEditorTheme.GetFTab.SetValue(theField, rec,ll)\n      _AVExtAdvEditorTheme.GetFTab.GetSelection.ClearAll\n      _AVExtAdvEditorTheme.GetFTab.GetSelection.Set(rec)\n      _AVExtAdvEditorTheme.GetFTab.UpdateSelection\n      _AVExtAdvEditorTheme.GetFtab.EndTransaction\n    end\n  end\nend\nav.GetProject.SetModified(true)\nav.GetProject.FindGUI(\"AVExtAdvEditView\").Update"
	SearchStr:	"NotEditNumV"
)

(DocWin.1627
	Owner:	1626
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1628
)

(DocAct.1629
	Doc:	1626
)

(SEd.1630
	Name:	"AVExtAdvEditor.StTMeasure"
	CreationDate:	"12 Май 2004 г. 2:25:35"
	GUIName:	"Script"
	Win:	1631
	CSMgr:	1632
	DocExts:	1633
	Source:	"p = _AVExtAdvEditorView.ReturnUserPolyLine\nav.GetProject.FindGUI(\"AVExtAdvEditView\").Update"
	SearchStr:	"NotEditNumV"
)

(DocWin.1631
	Owner:	1630
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1632
)

(DocAct.1633
	Doc:	1630
)

(SEd.1634
	Name:	"AVExtAdvEditor.StToogleEdit"
	CreationDate:	"04 Июль 2004 г. 19:26:56"
	GUIName:	"Script"
	Win:	1635
	CSMgr:	1636
	DocExts:	1637
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorList.Get(_AVExtAdvEditorTheme) <> 2) then\n    if (_AVExtAdvEditorTheme.GetFTAb.IsEditable) then\n      if (_AVExtAdvEditorConfir) then\n        doSave = MsgBox.YesNoCancel(\"Save Edits to \"+_AVExtAdvEditorTheme.GetName+\n                                    \"?\", \"Stop Editing\", true)\n        if (doSave = nil) then\n          return nil\n        end\n        if (_AVExtAdvEditorTheme.StopEditing(doSave).Not) then\n          MsgBox.Info (\"Unable to Save Edits t
o \"\n                        + _AVExtAdvEditorTheme.GetName  +\n                        \", please use the Save Edits As option\", \"\")\n          return nil\n        end\n        aDoc = _AVExtAdvEditorListDocTh.Get(_AVExtAdvEditorTheme)\n        _AVExtAdvEditorList.Set(_AVExtAdvEditorTheme,0)\n        aDoc.SetEditableTheme(nil)\n      else    \n        aDoc = _AVExtAdvEditorListDocTh.Get(_AVExtAdvEditorTheme)\n        _AVExtAdvEditorList.Set(_AVExtAdvEditorTheme,0)\n        _AVExtAdvEditorTheme.StopEditing(true)\n       
 aDoc.SetEditableTheme(nil)\n      end  \n    else\n      if (_AVExtAdvEditorTheme.GetFTab.IsBeingEditedWithRecovery) then\n        doSave = MsgBox.YesNoCancel(\"Save Edits to the table for \"+\n                                    _AVExtAdvEditorTheme.GetName+\"?\", \"Stop Editing\", True)\n        if (doSave = nil) then\n          return nil\n        end\n        if (_AVExtAdvEditorTheme.GetFTab.StopEditingWithRecovery(doSave).Not) then\n          MsgBox.Info (\"Unable to Save Edits, please use the Save Edits As option\", \"
\")\n          return nil\n        end\n      end\n      aNetPovtor = true\n      for each z in _AVExtAdvEditorListDocTh.ReturnKeys\n        if (z <> _AVExtAdvEditorTheme) then\n          if (z.GetSrcName.GetFileName = _AVExtAdvEditorTheme.GetSrcName.GetFileName) then\n            if (_AVExtAdvEditorList.GEt(z) = 1) then\n              aNetPovtor = false\n              break\n            end        \n          end\n        end\n      end\n      if (aNetPovtor) then\n        aDoc = _AVExtAdvEditorListDocTh.Get(_AVExtAdvEdito
rTheme)\n        _AVExtAdvEditorList.Set(_AVExtAdvEditorTheme,1)\n        aDoc.SetEditableTheme(_AVExtAdvEditorTheme)\n      else\n        msgbox.warning(\"Simultaneous editing of several themes based on the same shapefile will lead to its damage.\",\"\")\n      end    \n    end\n  end \nend\nav.FindDialog(\"AVExtAdvEditor.Target\").FindByName(\"aLBT\").Select\nav.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1635
	Owner:	1634
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1636
)

(DocAct.1637
	Doc:	1634
)

(SEd.1638
	Name:	"AVExtAdvEditor.StToogleEditUpd"
	CreationDate:	"04 Июль 2004 г. 19:19:43"
	GUIName:	"Script"
	Win:	1639
	CSMgr:	1640
	DocExts:	1641
	Source:	"SELF.SetLabel(\"Start &Editing\")\nSELF.SetEnabled(FALSE) \nif (_AVExtAdvEditorView.GetActiveThemes.Count < 1) then\n  SELF.SetLabel(\"Start &Editing\")\n  SELF.SetEnabled(FALSE)\n  return nil\nend\nif (_AVExtAdvEditorView.GetActiveThemes.Get(0).CanEdit.Not) then\n  SELF.SetLabel(\"Start &Editing\")\n  SELF.SetEnabled(FALSE)\n  return nil\nend\nclsName = _AVExtAdvEditorView.GetActiveThemes.Get(0).GetFTab.GetShapeClass.GetClassName\nif ((clsName = \"Point\") or (clsName = \"MultiPoint\") or (clsName = \"PolyLine\") or (clsName = \"Po
lygon\") or (clsName = \"GeoEvent\")) then\n  SELF.SetLabel(\"Start &Editing\")\n  SELF.SetEnabled(TRUE)\nend\nif (_AVExtAdvEditorView.GetActiveThemes.Get(0).GetFTAb.IsEditable) then\n  SELF.SetLabel(\"Stop &Editing\")\nelse\n  SELF.SetLabel(\"Start &Editing\")\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1639
	Owner:	1638
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1640
)

(DocAct.1641
	Doc:	1638
)

(SEd.1642
	Name:	"AVExtAdvEditor.StToogleLeg"
	CreationDate:	"3 Июль 2004 г. 8:23:40"
	GUIName:	"Script"
	Win:	1643
	CSMgr:	1644
	DocExts:	1645
	Source:	"for each t in _AVExtAdvEditorView.GetActiveThemes\n  t.SetLegendVisible(not (t.IsLegendVisible))\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1643
	Owner:	1642
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1644
)

(DocAct.1645
	Doc:	1642
)

(SEd.1646
	Name:	"AVExtAdvEditor.StTPan"
	CreationDate:	"12 Май 2004 г. 2:32:25"
	GUIName:	"Script"
	Win:	1647
	CSMgr:	1648
	DocExts:	1649
	Source:	"av.GetProject.SetModified(true)\n_AVExtAdvEditorView.GetDisplay.Pan\nav.GetProject.FindGUI(\"AVExtAdvEditView\").Update"
	SearchStr:	"NotEditNumV"
)

(DocWin.1647
	Owner:	1646
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1648
)

(DocAct.1649
	Doc:	1646
)

(SEd.1650
	Name:	"AVExtAdvEditor.StTPoint"
	CreationDate:	"12 Май 2004 г. 2:40:47"
	GUIName:	"Script"
	Win:	1651
	CSMgr:	1652
	DocExts:	1653
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    pt = _AVExtAdvEditorView.GetDisplay.ReturnUserPoint\n    thePrj = _AVExtAdvEditorView.GetProjection\n    if (thePrj.IsNull.Not) then\n      pt = pt.ReturnUnprojected(thePrj)\n    end\n    theField = _AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\")\n    _AVExtAdvEditorTheme.GetFTab.BeginTransaction\n    rec = _AVExtAdvEditorTheme.GetFTab.AddRecord\n    _AVExtAdvEditorTheme.GetFTab.SetValue(theField, rec, pt)\n    _AVExtAdvEdi
torTheme.GetFTab.EndTransaction\n    _AVExtAdvEditorTheme.GetFTab.GetSelection.ClearAll\n    _AVExtAdvEditorTheme.GetFTab.GetSelection.Set(rec)\n    _AVExtAdvEditorTheme.GetFTab.UpdateSelection\n  end\nend\nav.GetProject.SetModified(true)\nav.GetProject.FindGUI(\"AVExtAdvEditView\").Update"
	SearchStr:	"NotEditNumV"
)

(DocWin.1651
	Owner:	1650
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1652
)

(DocAct.1653
	Doc:	1650
)

(SEd.1654
	Name:	"AVExtAdvEditor.StTPointUpd"
	CreationDate:	"12 Май 2004 г. 2:35:12"
	GUIName:	"Script"
	Win:	1655
	CSMgr:	1656
	DocExts:	1657
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    SELF.SetEnabled(_AVExtAdvEditorTheme.GetFTab.GetShapeClass.GetClassName = \"Point\")\n  else\n    SELF.SetEnabled(false)\n  end\nelse\n  SELF.SetEnabled(false)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1655
	Owner:	1654
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1656
)

(DocAct.1657
	Doc:	1654
)

(SEd.1658
	Name:	"AVExtAdvEditor.StTPoly"
	CreationDate:	"12 Май 2004 г. 3:16:31"
	GUIName:	"Script"
	Win:	1659
	CSMgr:	1660
	DocExts:	1661
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    l = _AVExtAdvEditorView.ReturnUserPolygon\n    if (l.IsNull) then\n      return nil\n    else\n      _AVExtAdvEditorTheme.GetFtab.BeginTransaction\n      thePrj = _AVExtAdvEditorView.GetProjection\n      if (thePrj.IsNull.Not) then\n        l = l.ReturnUnprojected(thePrj)\n      end\n      theField = _AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\")\n      rec = _AVExtAdvEditorTheme.GetFTab.AddRecord\n      _AVExtAdvEditorTheme
.GetFTab.SetValue(theField, rec, l)\n      _AVExtAdvEditorTheme.GetFTab.GetSelection.ClearAll\n      _AVExtAdvEditorTheme.GetFTab.GetSelection.Set(rec)\n      _AVExtAdvEditorTheme.GetFTab.UpdateSelection\n      _AVExtAdvEditorTheme.GetFtab.EndTransaction\n    end\n  end\nend\nav.GetProject.SetModified(true)\nav.GetProject.FindGUI(\"AVExtAdvEditView\").Update"
	SearchStr:	"NotEditNumV"
)

(DocWin.1659
	Owner:	1658
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1660
)

(DocAct.1661
	Doc:	1658
)

(SEd.1662
	Name:	"AVExtAdvEditor.StTPolyLine"
	CreationDate:	"12 Май 2004 г. 2:49:27"
	GUIName:	"Script"
	Win:	1663
	CSMgr:	1664
	DocExts:	1665
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    l = _AVExtAdvEditorView.ReturnUserPolyLine\n    if (l.IsNull) then\n      return nil\n    else\n      _AVExtAdvEditorTheme.GetFtab.BeginTransaction\n      thePrj = _AVExtAdvEditorView.GetProjection\n      if (thePrj.IsNull.Not) then\n        l = l.ReturnUnprojected(thePrj)\n      end\n      theField = _AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\")\n      rec = _AVExtAdvEditorTheme.GetFTab.AddRecord\n      _AVExtAdvEditorThem
e.GetFTab.SetValue(theField, rec, l)\n      _AVExtAdvEditorTheme.GetFTab.GetSelection.ClearAll\n      _AVExtAdvEditorTheme.GetFTab.GetSelection.Set(rec)\n      _AVExtAdvEditorTheme.GetFTab.UpdateSelection\n      _AVExtAdvEditorTheme.GetFtab.EndTransaction\n    end\n  end\nend\nav.GetProject.SetModified(true)\nav.GetProject.FindGUI(\"AVExtAdvEditView\").Update"
	SearchStr:	"NotEditNumV"
)

(DocWin.1663
	Owner:	1662
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1664
)

(DocAct.1665
	Doc:	1662
)

(SEd.1666
	Name:	"AVExtAdvEditor.StTPolyLineUpd"
	CreationDate:	"12 Май 2004 г. 2:45:24"
	GUIName:	"Script"
	Win:	1667
	CSMgr:	1668
	DocExts:	1669
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    theType = _AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType\n    SELF.SetEnabled(theType = #FIELD_SHAPELINE)\n  else\n    SELF.SetEnabled(false)\n  end\nelse\n  SELF.SetEnabled(false)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1667
	Owner:	1666
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1668
)

(DocAct.1669
	Doc:	1666
)

(SEd.1670
	Name:	"AVExtAdvEditor.StTPolyUpd"
	CreationDate:	"12 Май 2004 г. 3:05:28"
	GUIName:	"Script"
	Win:	1671
	CSMgr:	1672
	DocExts:	1673
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    theType = _AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType\n    SELF.SetEnabled(theType = #FIELD_SHAPEPOLY)\n  else\n    SELF.SetEnabled(false)\n  end\nelse\n  SELF.SetEnabled(false)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1671
	Owner:	1670
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1672
)

(DocAct.1673
	Doc:	1670
)

(SEd.1674
	Name:	"AVExtAdvEditor.StTRect"
	CreationDate:	"12 Май 2004 г. 3:10:45"
	GUIName:	"Script"
	Win:	1675
	CSMgr:	1676
	DocExts:	1677
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    r = _AVExtAdvEditorView.ReturnUserRect\n    if (r.IsNull) then\n      return nil\n    else\n      l = r.AsPolygon\n      _AVExtAdvEditorTheme.GetFtab.BeginTransaction\n      thePrj = _AVExtAdvEditorView.GetProjection\n      if (thePrj.IsNull.Not) then\n        l = l.ReturnUnprojected(thePrj)\n      end\n      theField = _AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\")\n      rec = _AVExtAdvEditorTheme.GetFTab.AddRecord\n      _
AVExtAdvEditorTheme.GetFTab.SetValue(theField, rec, l)\n      _AVExtAdvEditorTheme.GetFTab.GetSelection.ClearAll\n      _AVExtAdvEditorTheme.GetFTab.GetSelection.Set(rec)\n      _AVExtAdvEditorTheme.GetFTab.UpdateSelection\n      _AVExtAdvEditorTheme.GetFtab.EndTransaction\n    end\n  end\nend\nav.GetProject.SetModified(true)\nav.GetProject.FindGUI(\"AVExtAdvEditView\").Update"
	SearchStr:	"NotEditNumV"
)

(DocWin.1675
	Owner:	1674
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1676
)

(DocAct.1677
	Doc:	1674
)

(SEd.1678
	Name:	"AVExtAdvEditor.StTSplit"
	CreationDate:	"12 Май 2004 г. 2:59:55"
	GUIName:	"Script"
	Win:	1679
	CSMgr:	1680
	DocExts:	1681
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    l = _AVExtAdvEditorView.ReturnUserPolyLine\n    if (l.IsNull) then\n      return nil\n    else\n      _AVExtAdvEditorTheme.GetFtab.BeginTransaction\n      theField = _AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\")\n      theType = theField.GetType\n      if ((theType = #FIELD_SHAPEPOLY) or (theType = #FIELD_SHAPELINE)) then\n        _AVExtAdvEditorTheme.Split(l)\n      end\n      _AVExtAdvEditorTheme.GetFtab.EndTransaction\n 
   end\n  end\nend\nav.GetProject.SetModified(true)\nav.GetProject.FindGUI(\"AVExtAdvEditView\").Update"
	SearchStr:	"NotEditNumV"
)

(DocWin.1679
	Owner:	1678
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1680
)

(DocAct.1681
	Doc:	1678
)

(SEd.1682
	Name:	"AVExtAdvEditor.StTZoomInTool"
	CreationDate:	"12 Май 2004 г. 2:28:44"
	GUIName:	"Script"
	Win:	1683
	CSMgr:	1684
	DocExts:	1685
	Source:	"av.GetProject.SetModified(true)\nr = _AVExtAdvEditorView.ReturnUserRect\nd = _AVExtAdvEditorView.GetDisplay\nif (r.IsNull) then\n  d.ZoomIn(125)\n  d.PanTo(d.ReturnUserPoint)\nelse\n  d.ZoomToRect(r)  \nend\nav.GetProject.FindGUI(\"AVExtAdvEditView\").Update"
	SearchStr:	"NotEditNumV"
)

(DocWin.1683
	Owner:	1682
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1684
)

(DocAct.1685
	Doc:	1682
)

(SEd.1686
	Name:	"AVExtAdvEditor.StTZoomOutTool"
	CreationDate:	"12 Май 2004 г. 2:30:46"
	GUIName:	"Script"
	Win:	1687
	CSMgr:	1688
	DocExts:	1689
	Source:	"av.GetProject.SetModified(true)\nr = _AVExtAdvEditorView.ReturnUserRect\nd = _AVExtAdvEditorView.GetDisplay\nif (r.IsNull.not) then\n  ext = d.ReturnExtent\n  ext.Scale(ext.GetWidth / r.GetWidth)\n  d.ZoomToRect(ext)\nelse\n  d.ZoomOut(125)\n  d.PanTo(d.ReturnUserPoint)\nend\nav.GetProject.FindGUI(\"AVExtAdvEditView\").Update"
	SearchStr:	"NotEditNumV"
)

(DocWin.1687
	Owner:	1686
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1688
)

(DocAct.1689
	Doc:	1686
)

(SEd.1690
	Name:	"AVExtAdvEditor.StUndoEdit"
	CreationDate:	"10 Май 2004 г. 3:38:51"
	GUIName:	"Script"
	Win:	1691
	CSMgr:	1692
	DocExts:	1693
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    _AVExtAdvEditorTheme.GetFTab.Undo\n    av.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)\n    av.GetProject.FindGUI(\"AVExtAdvEditView\").Update\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1691
	Owner:	1690
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1692
)

(DocAct.1693
	Doc:	1690
)

(SEd.1694
	Name:	"AVExtAdvEditor.StUndoEditUpd"
	CreationDate:	"12 Май 2004 г. 1:00:11"
	GUIName:	"Script"
	Win:	1695
	CSMgr:	1696
	DocExts:	1697
	Source:	"enabled = False\nif (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    if (_AVExtAdvEditorTheme.GetFTab.CanUndo) then\n      enabled = True\n    end\n  end\nend\nself.SetEnabled(enabled)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1695
	Owner:	1694
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1696
)

(DocAct.1697
	Doc:	1694
)

(SEd.1698
	Name:	"AVExtAdvEditor.StUnion"
	CreationDate:	"12 Май 2004 г. 1:52:50"
	GUIName:	"Script"
	Win:	1699
	CSMgr:	1700
	DocExts:	1701
	Source:	"if (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    _AVExtAdvEditorTheme.GetFTab.BeginTransaction\n    _AVExtAdvEditorTheme.UnionSelected \n    _AVExtAdvEditorTheme.GetFTab.EndTransaction \n    _AVExtAdvEditorTheme.Invalidate(TRUE)\n    av.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)\n    av.GetProject.FindGUI(\"AVExtAdvEditView\").Update\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1699
	Owner:	1698
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1700
)

(DocAct.1701
	Doc:	1698
)

(SEd.1702
	Name:	"AVExtAdvEditor.StUnionUpd"
	CreationDate:	"12 Май 2004 г. 1:50:47"
	GUIName:	"Script"
	Win:	1703
	CSMgr:	1704
	DocExts:	1705
	Source:	"enabled = FALSE\nif (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    fCount = _AVExtAdvEditorTheme.GetFTab.GetSelection.Count\n    theType = _AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType\n    enabled =  ((fcount > 1) and ((theType = #FIELD_SHAPEPOLY) or\n                   (theType = #FIELD_SHAPELINE)))\n  end\nend\nSELF.SetEnabled(enabled)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1703
	Owner:	1702
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1704
)

(DocAct.1705
	Doc:	1702
)

(SEd.1706
	Name:	"AVExtAdvEditor.StViewProp"
	CreationDate:	"3 Июль 2004 г. 8:25:45"
	GUIName:	"Script"
	Win:	1707
	CSMgr:	1708
	DocExts:	1709
	Source:	"aLIst = {}\naLIst.Add(_AVExtAdvEditorView.GetProjection)\naLIst.Add(_AVExtAdvEditorView.ReturnAOI)\naLIst.Add(_AVExtAdvEditorView.GetBackgroundSymbol)\naLIst.Add(_AVExtAdvEditorView.GetUnits)\naLIst.Add(_AVExtAdvEditorView.GetDisplay.GetDistanceUnits)\n_AVExtAdvEditorView.Edit\nav.DelayedRun(\"AVExtAdvEditor.StViewPropPart2\",aLIst,0)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1707
	Owner:	1706
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1708
)

(DocAct.1709
	Doc:	1706
)

(SEd.1710
	Name:	"AVExtAdvEditor.StViewPropPart2"
	CreationDate:	"3 Июль 2004 г. 8:28:06"
	GUIName:	"Script"
	Win:	1711
	CSMgr:	1712
	DocExts:	1713
	Source:	"aProject = av.GetProject\naGUI2 = aProject.FindGUI(\"AVExtAdvEditTheme\")\naList2 = aProject.GetDocsWithGUI(aGUI2)\n\naAOI = _AVExtAdvEditorView.ReturnAOI\nif (self.Get(1) <> aAOI) then  \n  for each i in aList2\n    i.SetAOI(aAOI)\n  end\nend\n\naSel = _AVExtAdvEditorView.GetBackgroundSymbol\nif (self.Get(2) <> aSel) then  \n  for each i in aList2\n    i.SetBackgroundSymbol(aSel)\n  end\nend\n\naUn = _AVExtAdvEditorView.GetUnits\nif (self.Get(3) <> aUn) then  \n  for each i in aList2\n    i.SetUnits(aUn)\n  end\nend\n\naPr = _AVExtA
dvEditorView.GetProjection\nif (self.Get(0) <> aPr) then  \n  for each i in aList2\n    i.SetProjection(aPr)\n  end\nend\n\naDUn = _AVExtAdvEditorView.GetDisplay.GetDistanceUnits\nif (self.Get(4) <> aDUn) then  \n  for each i in aList2\n    _AVExtAdvEditorView.GetDisplay.SetDistanceUnits.SetProjection(aDUn)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1711
	Owner:	1710
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1712
)

(DocAct.1713
	Doc:	1710
)

(SEd.1714
	Name:	"AVExtAdvEditor.StViewPropUpd"
	CreationDate:	"3 Июль 2004 г. 8:47:12"
	GUIName:	"Script"
	Win:	1715
	CSMgr:	1716
	DocExts:	1717
	Source:	"self.SetEnabled(true)\nif (_AVExtAdvEditorScratchList <> nil) then\n  self.SetEnabled(false)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1715
	Owner:	1714
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1716
)

(DocAct.1717
	Doc:	1714
)

(SEd.1718
	Name:	"AVExtAdvEditor.StWinActivate"
	CreationDate:	"3 Июль 2004 г. 6:35:05"
	GUIName:	"Script"
	Win:	1719
	CSMgr:	1720
	DocExts:	1721
	Source:	"menulabel = self.GetLabel\noff = menulabel.Extract(0).Count + 1\ndocname=menulabel.Middle(off,menulabel.Count - off)\ntheDoc = av.GetProject.FindDoc(docname)\nif (theDoc = nil) then\n  av.GetProject.GetWin.Open\nelseif (theDoc.GetWin.IsOpen) then\n  theDoc.GetWin.Open\nend\n\n\n"
	SearchStr:	"NotEditNumV"
)

(DocWin.1719
	Owner:	1718
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1720
)

(DocAct.1721
	Doc:	1718
)

(SEd.1722
	Name:	"AVExtAdvEditor.StWinArr"
	CreationDate:	"3 Июль 2004 г. 6:30:42"
	GUIName:	"Script"
	Win:	1723
	CSMgr:	1724
	DocExts:	1725
	Source:	"av.ArrangeIcons"
	SearchStr:	"NotEditNumV"
)

(DocWin.1723
	Owner:	1722
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1724
)

(DocAct.1725
	Doc:	1722
)

(SEd.1726
	Name:	"AVExtAdvEditor.StWinCasc"
	CreationDate:	"3 Июль 2004 г. 6:30:04"
	GUIName:	"Script"
	Win:	1727
	CSMgr:	1728
	DocExts:	1729
	Source:	"av.CascadeWindows"
	SearchStr:	"NotEditNumV"
)

(DocWin.1727
	Owner:	1726
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1728
)

(DocAct.1729
	Doc:	1726
)

(SEd.1730
	Name:	"AVExtAdvEditor.StWinTile"
	CreationDate:	"3 Июль 2004 г. 6:28:51"
	GUIName:	"Script"
	Win:	1731
	CSMgr:	1732
	DocExts:	1733
	Source:	"av.TileWindows"
	SearchStr:	"NotEditNumV"
)

(DocWin.1731
	Owner:	1730
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1732
)

(DocAct.1733
	Doc:	1730
)

(SEd.1734
	Name:	"AVExtAdvEditor.StWinUpd"
	CreationDate:	"3 Июль 2004 г. 6:31:46"
	GUIName:	"Script"
	Win:	1735
	CSMgr:	1736
	DocExts:	1737
	Source:	"names = av.GetProject.GetName\ndoclist = {av.GetProject}\nfor each d in av.GetProject.GetDocs\n  if (d.GetWin.IsOpen) then\n    doclist.Add( d )\n    names = names++d.GetName\n  end\nend  \noldNames = self.GetObjectTag\nif (oldNames = nil) then\n  oldNames = \"\"  \nelseif (names = oldNames) then\n  return nil   \nend\nself.SetObjectTag(names)\nScript.The.SetNumberFormat(\"d\")\nctlset = self.GetControlSet\nl = ctlset.GetControls\nlast = l.get(l.count - 1)\nwhile (last <> self)\n  ctlset.Remove(last)\n  last = l.get(l.count- 1)\nend
\ncount = 1\nfor each d in doclist\n  n= ctlset.New(l.Count)\n  n.setLabel(\"&\"+count.AsString++d.GetName)\n  n.setClick(\"AVExtAdvEditor.StWinActivate\")\n  n.SetHelp(d.GetName)\n  count=count+1\nend\n"
	SearchStr:	"NotEditNumV"
)

(DocWin.1735
	Owner:	1734
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1736
)

(DocAct.1737
	Doc:	1734
)

(DEd.1738
	Name:	"AVExtAdvEditor.Target"
	CreationDate:	"26 Апрель 2004 г. 0:46:38"
	GUIName:	"DialogEditor"
	Win:	1739
	CSMgr:	1740
	DocExts:	1742
	DocExts:	1743
	Graphics:	1744
	Dpy:	1750
	Dialog:	1753
	DialogExtent:	1760
	Compiled:	1
)

(DocWin.1739
	Owner:	1738
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1740
	Client:	1741
)

(CSClient.1741
	Client:	1742
	ReqName:	"ClientNfy"
)

(PanMgr.1742
	Doc:	1738
)

(DocAct.1743
	Doc:	1738
)

(GList.1744
	Child:	1745
	Dpy:	1750
	FormatNumb:	1752
)

(GCtrl.1745
	Name:	"aLBT"
	Bounds:	1746
	Control:	1747
	Editable:	1
)

(RectD.1746
	Left:	0.10763888888889
	Top:	5.52777777777778
	Right:	2.14930555555556
	Bottom:	4.07986111111111
)

(AVLBox.1747
	InternalName:	"aLBT"
	UseGraphicNfy:	1
	NextControl:	1748
	ContentKind:	4
	Constraints:	0x55
	ColumnCount:	1
	Listening:	1
	VerticalScroll:	1
	Select:	"AVExtAdvEditor.TOCSelect"
	SelectionStyle:	1749
)

(Nil.1748
)

(AVEnum.1749
	Name:	"LISTBOX_SELECTION_SINGLEROW"
)

(PageDpy.1750
	Top:	7.43750000000000
	Right:	12.03125000000000
	ReportUnits:	1
	Units:	1
	Scale:	1751
	ZoomRight:	12.03125000000000
	ZoomTop:	7.43750000000000
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.1751
	N:	0.08311688311688
)

(Numb.1752
)

(AVDLog.1753
	Name:	"AVExtAdvEditor.Target"
	X:	9
	Y:	201
	W:	200
	H:	145
	Server:	32
	ControlPanel:	1754
	Title:	"Target"
	EscapeEnabled:	1
	Resizable:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	Close:	"AVExtAdvEditor.DialogClose"
	Open:	"AVExtAdvEditor.TOCOpen"
	DefaultButton:	1759
)

(CPanel.1754
	Child:	1755
	ResBox:	1758
	Listening:	1
)

(AVLBox.1755
	InternalName:	"aLBT"
	NextControl:	1756
	ContentKind:	4
	ColumnCount:	1
	Listening:	1
	VerticalScroll:	1
	Select:	"AVExtAdvEditor.TOCSelect"
	SelectionStyle:	1757
)

(Nil.1756
)

(AVEnum.1757
	Name:	"LISTBOX_SELECTION_SINGLEROW"
)

(RectD.1758
	Left:	4.00000000000000
	Top:	143.00000000000000
	Right:	200.00000000000000
	Bottom:	4.00000000000000
)

(Nil.1759
)

(RectD.1760
	Left:	0.06250000000000
	Top:	5.57291666666667
	Right:	2.14583333333333
	Bottom:	4.06250000000000
)

(DEd.1761
	Name:	"AVExtAdvEditor.Task"
	CreationDate:	"3 Июль 2004 г. 9:46:16"
	GUIName:	"DialogEditor"
	Win:	1762
	CSMgr:	1763
	DocExts:	1765
	DocExts:	1766
	Graphics:	1767
	Dpy:	1772
	Dialog:	1775
	DialogExtent:	1781
	Compiled:	1
)

(DocWin.1762
	Owner:	1761
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1763
	Client:	1764
)

(CSClient.1764
	Client:	1765
	ReqName:	"ClientNfy"
)

(PanMgr.1765
	Doc:	1761
)

(DocAct.1766
	Doc:	1761
)

(GList.1767
	Child:	1768
	Dpy:	1772
	FormatNumb:	1774
)

(GCtrl.1768
	Name:	"aCBTask"
	Bounds:	1769
	Control:	1770
	Editable:	1
)

(RectD.1769
	Left:	0.11458333333333
	Top:	6.19791666666667
	Right:	2.12500000000000
	Bottom:	4.18750000000000
)

(AVCBBox.1770
	InternalName:	"aCBTask"
	UseGraphicNfy:	1
	NextControl:	1771
	ContentKind:	4
	Constraints:	0x55
	Listening:	1
	Select:	"AVExtAdvEditor.ToolUpd"
)

(Nil.1771
)

(PageDpy.1772
	Top:	7.43750000000000
	Right:	12.03125000000000
	ReportUnits:	1
	Units:	1
	Scale:	1773
	ZoomRight:	12.03125000000000
	ZoomTop:	7.43750000000000
	GridSpacingX:	0.10000000000000
	GridSpacingY:	0.10000000000000
)

(Numb.1773
	N:	0.08311688311688
)

(Numb.1774
)

(AVDLog.1775
	Name:	"AVExtAdvEditor.Task"
	X:	9
	Y:	129
	W:	202
	H:	40
	Server:	32
	ControlPanel:	1776
	Title:	"Task"
	EscapeEnabled:	1
	AlwaysOnTop:	1
	HasTitleBar:	1
	Closeable:	1
	Close:	"AVExtAdvEditor.DialogCloseEmpty"
	DefaultButton:	1780
)

(CPanel.1776
	Child:	1777
	ResBox:	1779
	Listening:	1
)

(AVCBBox.1777
	InternalName:	"aCBTask"
	NextControl:	1778
	ContentKind:	4
	Listening:	1
	Select:	"AVExtAdvEditor.ToolUpd"
)

(Nil.1778
)

(RectD.1779
	Left:	5.00000000000000
	Top:	205.00000000000000
	Right:	198.00000000000000
	Bottom:	12.00000000000000
)

(Nil.1780
)

(RectD.1781
	Left:	0.06250000000000
	Top:	6.32291666666667
	Right:	2.16666666666667
	Bottom:	5.90625000000000
)

(SEd.1782
	Name:	"AVExtAdvEditor.TOCOpen"
	CreationDate:	"26 Апрель 2004 г. 1:08:03"
	GUIName:	"Script"
	Win:	1783
	CSMgr:	1784
	DocExts:	1785
	Source:	"aLBT = self.FindByName(\"aLBT\")\naList = {}\naLIstK = _AVExtAdvEditorView.GetThemes\naList.Add({\"Themes\",\"Target\",\"Edit\",\"On/Off\"})\nfor each i in aListK  \n  aListE = _AVExtAdvEditorList.Get(i)\n  if (aLIstE <> nil) then\n    if (_AVExtAdvEditorTheme = i) then\n      y = _AVExtAdvEditorIced\n    else\n      y = _AVExtAdvEditorIcedf\n    end\n    if (aListE = 1) then\n      x = _AVExtAdvEditorIceb\n    elseif (aListE = 2) then\n      x = _AVExtAdvEditorIcebn\n    else\n      x = _AVExtAdvEditorIcebf\n    end\n    if (i.IsVisib
le) then\n      z = _AVExtAdvEditorIcvis\n    else\n      z = _AVExtAdvEditorIcvisf\n    end\n    aList.Add({i,y,x,z})\n  else\n    if (_AVExtAdvEditorTheme = i) then\n      y = _AVExtAdvEditorIced\n    else\n      y = _AVExtAdvEditorIcedf\n    end\n    x = _AVExtAdvEditorIcebn\n    if (i.IsVisible) then\n      z = _AVExtAdvEditorIcvis\n    else\n      z = _AVExtAdvEditorIcvisf\n    end\n    aList.Add({i,y,x,z})\n  end\nend\naLBT.DefineFromList(aList)\naLBT.GoColumn(0)\naLBT.SetColumnWidth(35)\naLBT.GoColumn(1)\naLBT.SetColumnWidth
(24)\naLBT.GoColumn(2)\naLBT.SetColumnWidth(17)\naLBT.GoColumn(3)\naLBT.SetColumnWidth(24)\nav.GetProject.FindGUI(\"AVExtAdvEditView\").Update"
	SearchStr:	"NotEditNumV"
)

(DocWin.1783
	Owner:	1782
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1784
)

(DocAct.1785
	Doc:	1782
)

(SEd.1786
	Name:	"AVExtAdvEditor.TOCSelect"
	CreationDate:	"26 Апрель 2004 г. 0:52:27"
	GUIName:	"Script"
	Win:	1787
	CSMgr:	1788
	DocExts:	1789
	Source:	"aPoint = self.GetCurrentLocation\nif (aPoint.GetX = 2) then\n  if (self.GetSelection.Count > 0) then\n    if (self.GetSelection.Get(1) = \"Edit\") then\n      self.SetSelection(Rect.MakeEmpty,false)\n      return nil\n    end\n    aTheme = self.GetSelection.Get(0)\n    aVal = _AVExtAdvEditorList.Get(aTheme)\n    if (aVal <> nil) then\n      aDoc = _AVExtAdvEditorListDocTh.Get(aTheme)\n      if (aVal <> 2) then\n        if (aVal = 0) then        \n          aNetPovtor = true\n          for each z in _AVExtAdvEditorListDocTh
.ReturnKeys\n            if (z <> aTheme) then            \n              if (z.GetSrcName.GetFileName = aTheme.GetSrcName.GetFileName) then\n                if (_AVExtAdvEditorList.GEt(z) = 1) then\n                  aNetPovtor = false\n                  break\n                end\n              end\n            end\n          end\n          if (aNetPovtor) then\n            _AVExtAdvEditorList.Set(aTheme,1)\n            aDoc.SetEditableTheme(aTheme)\n          else\n            msgbox.warning(\"Simultaneous editing of s
everal themes based on the same shapefile will lead to its damage.\",\"\")\n          end\n        else\n          if (_AVExtAdvEditorConfir) then        \n            doSave = MsgBox.YesNoCancel(\"Save Edits to \"+aTheme.GetName+\n                                    \"?\", \"Stop Editing\", true)\n            if (doSave <> nil) then\n              if (aTheme.StopEditing(doSave).Not) then\n                MsgBox.Info (\"Unable to Save Edits to \"\n                              + aTheme.GetName  +\n                              
\", please use the Save Edits As option\", \"\")\n              else\n                _AVExtAdvEditorList.Set(aTheme,0)\n                aDoc.SetEditableTheme(nil)\n              end\n            end        \n          else\n            if (aTheme.StopEditing(true).Not) then\n                MsgBox.Info (\"Unable to Save Edits to \"\n                              + aTheme.GetName  +\n                              \", please use the Save Edits As option\", \"\")\n            else\n              _AVExtAdvEditorList.Set(aTheme,0)\n 
             aDoc.SetEditableTheme(nil)\n            end\n          end\n        end\n      end\n    end\n  end\n  aList = {}\n  aLIstK = _AVExtAdvEditorView.GetThemes\n  aList.Add({\"Themes\",\"Target\",\"Edit\",\"On-Off\"})\n  for each i in aListK\n    aListE = _AVExtAdvEditorList.Get(i)\n    if (aLIstE <> nil) then\n      if (_AVExtAdvEditorTheme = i) then\n        y = _AVExtAdvEditorIced\n      else\n        y = _AVExtAdvEditorIcedf\n      end\n      if (aListE = 1) then\n        x = _AVExtAdvEditorIceb\n      elseif (aListE = 2) 
then\n        x = _AVExtAdvEditorIcebn\n      else\n        x = _AVExtAdvEditorIcebf\n      end\n      if (i.IsVisible) then\n        z = _AVExtAdvEditorIcvis\n      else\n        z = _AVExtAdvEditorIcvisf\n      end\n      aList.Add({i,y,x,z})\n    else\n      if (_AVExtAdvEditorTheme = i) then\n        y = _AVExtAdvEditorIced\n      else\n        y = _AVExtAdvEditorIcedf\n      end\n      x = _AVExtAdvEditorIcebn\n      if (i.IsVisible) then\n        z = _AVExtAdvEditorIcvis\n      else\n        z = _AVExtAdvEditorIcvisf\n    
  end\n      aList.Add({i,y,x,z})\n    end\n  end\n  self.DefineFromList(aList)\n  self.GoColumn(0)\n  self.SetColumnWidth(35)\n  self.GoColumn(1)\n  self.SetColumnWidth(24)\n  self.GoColumn(2)\n  self.SetColumnWidth(17)\n  self.GoColumn(3)\n  self.SetColumnWidth(24)\n  av.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)\nelseif (aPoint.GetX = 1) then\n  if (self.GetSelection.Count > 0) then\n    if (self.GetSelection.Get(1) = \"Edit\") then\n      self.SetSelection(Rect.MakeEmpty,false)\n      return nil\n    end\n    aTheme =
 self.GetSelection.Get(0)\n    aValT = _AVExtAdvEditorList.Get(aTheme)\n    if (aValT <> nil) then\n      aVal = self.GetSelection.Get(1)\n      if (aVal = _AVExtAdvEditorIcedf) then\n        if (_AVExtAdvEditorTheme <> nil) then\n          _AVExtAdvEditorTheme.SetActive(false)\n        end\n        _AVExtAdvEditorTheme = aTheme\n        _AVExtAdvEditorTheme.SetActive(true)\n      else\n        _AVExtAdvEditorTheme.SetActive(false)\n        _AVExtAdvEditorTheme = nil\n      end\n    else\n      if (aTheme.IsActive) then\n 
       aTheme.SetActive(false)\n      else\n        aTheme.SetActive(true)\n      end\n    end\n  end\n  aList = {}\n  aLIstK = _AVExtAdvEditorView.GetThemes\n  aList.Add({\"Themes\",\"Target\",\"Edit\",\"On-Off\"})\n  for each i in aListK\n    aListE = _AVExtAdvEditorList.Get(i)\n    if (aLIstE <> nil) then\n      if (_AVExtAdvEditorTheme = i) then\n        y = _AVExtAdvEditorIced\n      else\n        y = _AVExtAdvEditorIcedf\n      end\n      if (aListE = 1) then\n        x = _AVExtAdvEditorIceb\n      elseif (aListE = 2) then\n    
    x = _AVExtAdvEditorIcebn\n      else\n        x = _AVExtAdvEditorIcebf\n      end\n      if (i.IsVisible) then\n        z = _AVExtAdvEditorIcvis\n      else\n        z = _AVExtAdvEditorIcvisf\n      end\n      aList.Add({i,y,x,z})\n    else\n      if (_AVExtAdvEditorTheme = i) then\n        y = _AVExtAdvEditorIced\n      else\n        y = _AVExtAdvEditorIcedf\n      end\n      x = _AVExtAdvEditorIcebn\n      if (i.IsVisible) then\n        z = _AVExtAdvEditorIcvis\n      else\n        z = _AVExtAdvEditorIcvisf\n      end\n   
   aList.Add({i,y,x,z})\n    end\n  end\n  self.DefineFromList(aList)\n  self.GoColumn(0)\n  self.SetColumnWidth(35)\n  self.GoColumn(1)\n  self.SetColumnWidth(24)\n  self.GoColumn(2)\n  self.SetColumnWidth(17)\n  self.GoColumn(3)\n  self.SetColumnWidth(24)\nelse\n  if (self.GetSelection.Count > 0) then\n    if (self.GetSelection.Get(1) = \"Edit\") then\n      self.SetSelection(Rect.MakeEmpty,false)\n      return nil\n    end\n    aTheme = self.GetSelection.Get(0)\n    aVal = self.GetSelection.Get(3)\n    if (aVal = _AVExtAdvEdi
torIcedf) then\n      aTheme.SetVisible(true)\n    else\n      aTheme.SetVisible(false)\n    end\n  end\n  aList = {}\n  aLIstK = _AVExtAdvEditorView.GetThemes\n  aList.Add({\"Themes\",\"Target\",\"Edit\",\"On-Off\"})\n  for each i in aListK\n    aListE = _AVExtAdvEditorList.Get(i)\n    if (aLIstE <> nil) then\n      if (_AVExtAdvEditorTheme = i) then\n        y = _AVExtAdvEditorIced\n      else\n        y = _AVExtAdvEditorIcedf\n      end\n      if (aListE = 1) then\n        x = _AVExtAdvEditorIceb\n      elseif (aListE = 2) then\n  
      x = _AVExtAdvEditorIcebn\n      else\n        x = _AVExtAdvEditorIcebf\n      end\n      if (i.IsVisible) then\n        z = _AVExtAdvEditorIcvis\n      else\n        z = _AVExtAdvEditorIcvisf\n      end\n      aList.Add({i,y,x,z})\n    else\n      if (_AVExtAdvEditorTheme = i) then\n        y = _AVExtAdvEditorIced\n      else\n        y = _AVExtAdvEditorIcedf\n      end\n      x = _AVExtAdvEditorIcebn\n      if (i.IsVisible) then\n        z = _AVExtAdvEditorIcvis\n      else\n        z = _AVExtAdvEditorIcvisf\n      end\n 
     aList.Add({i,y,x,z})\n    end\n  end\n  self.DefineFromList(aList)\n  self.GoColumn(0)\n  self.SetColumnWidth(35)\n  self.GoColumn(1)\n  self.SetColumnWidth(24)\n  self.GoColumn(2)\n  self.SetColumnWidth(17)\n  self.GoColumn(3)\n  self.SetColumnWidth(24)\nend\nav.GetProject.FindGUI(\"AVExtAdvEditView\").Update\n_AVExtAdvEditorView.GetWin.Activate"
	SearchStr:	"NotEditNumV"
)

(DocWin.1787
	Owner:	1786
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1788
)

(DocAct.1789
	Doc:	1786
)

(SEd.1790
	Name:	"AVExtAdvEditor.TOCShow"
	CreationDate:	"26 Апрель 2004 г. 20:10:23"
	GUIName:	"Script"
	Win:	1791
	CSMgr:	1792
	DocExts:	1793
	Source:	"aView = av.GetActiveDoc\nif (aView.IsTOCUnResizable) then\n  aView.SetTOCUnResizable(false)\n  aView.SetTOCWidth(150)\nelse\n  aView.SetTOCWidth(0)\n  aView.SetTOCUnResizable(true)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1791
	Owner:	1790
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1792
)

(DocAct.1793
	Doc:	1790
)

(SEd.1794
	Name:	"AVExtAdvEditor.ToolArcPolygon"
	CreationDate:	"22 Июнь 2004 г. 5:03:56"
	GUIName:	"Script"
	Win:	1795
	CSMgr:	1796
	DocExts:	1797
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScratchList <> nil) then\n  if (_AVExtAdvEditorView = av.Getactivedoc) then\n    if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEArc\").IsSelected) then\n      if ( _AVExtAdvEditorDrawClass = \"polygon\") then\n        apt = _AVExtAdvEditorView.getdisplay.returnuserpoint\n        if (_AVExtAdvEditorPan) then\n          aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n          aDisapt = aViewRect.GetWidth / 100\n          if
 (aViewRect.AsPolygon.AsPolyline.Distance(apt).Abs < aDisapt) then\n            aptpan = Polyline.Make({{aViewRect.ReturnCenter,apt}}).Along(10)\n            _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n          end\n        end\n        if (apt <> _AVExtAdvEditoraptL) then\n          _AVExtAdvEditoraptL = apt.Clone\n          _AVExtAdvEditorapt = apt.Clone\n          aSnapReal = 0\n          if (_AVExtAdvEditorSnapEnb) then\n            if (_AVExtAdvEditorSnapTU = \"pixels\") then\n              aSnapTolerance = (_AV
ExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.GetWin.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\n            else\n              aSnapTolerance = _AVExtAdvEditorSnapT\n            end\n            aListK = _AVExtAdvEditorView.GetThemes\n            for each aThemeView in aLIstK  \n              aListE = _AVExtAdvEditorListSnap.Get(aThemeView)\n              if (aListE <> nil) then\n                for each aThemeSnapeI in 0..3\n                  aThemeS
nape = aListE.Get(aThemeSnapeI)\n                  if (aThemeSnape <> 0) then\n                    aUserSnapPoint = _AVExtAdvEditorapt.Clone\n                    aThemeView.SetInteractiveSnapTolerance(aSnapTolerance)\n                    if (aThemeSnapeI = 0) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_VERTEX,aUserSnapPoint)\n                    elseif (aThemeSnapeI = 1) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_BOUNDARY,aUserSnapPoint)\n                    elseif (aTheme
SnapeI = 2) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_ENDPOINT,aUserSnapPoint)\n                    else\n                      aThemeView.UserSnapPoint(#POINT_SNAP_INTERSECTION,aUserSnapPoint)\n                    end\n                    if (aUserSnapPoint <> _AVExtAdvEditorapt) then\n                      _AVExtAdvEditorapt = aUserSnapPoint.Clone\n                      aSnapReal = 1\n                      break\n                    end\n                  end\n                end\n             
 end\n              if (aSnapReal = 1) then\n                if (_AVExtAdvEditorSnapOff <> 0) then\n                  aDis1 = _AVExtAdvEditorapt.Distance(apt)\n                  aptPx = apt.GetX - _AVExtAdvEditorapt.GetX\n                  aptPy = apt.GetY - _AVExtAdvEditorapt.GetY\n                  aCosA = aptPx / aDis1.Abs\n                  aSinA = aptPy / aDis1.Abs\n                  aNewPx = _AVExtAdvEditorSnapOff * aCosA\n                  aNewPy = _AVExtAdvEditorSnapOff * aSinA\n                  aNewPtX = aN
ewPx + _AVExtAdvEditorapt.GetX\n                  aNewPtY = aNewPy + _AVExtAdvEditorapt.GetY\n                  _AVExtAdvEditorapt = aNewPtX@aNewPtY\n                end\n                break\n              end\n            end\n          end        \n          if (_AVExtAdvEditorShowCurP) then\n            if (_AVExtAdvEditorCurGr = nil) then\n              _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n              if (aSnapRea
l = 1) then\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              else\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n              end\n              agrlist.Add(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr.invalidate\n            end\n            if (aSnapReal = 1) then\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            else\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n            en
d\n            _AVExtAdvEditorCurGr.invalidate\n            _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.clone)\n            _AVExtAdvEditorCurGr.invalidate\n          else\n            if (aSnapReal = 1) then\n              if (_AVExtAdvEditorCurGr = nil) then\n                _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n                agrlist.Add(
_AVExtAdvEditorCurGr)\n                _AVExtAdvEditorCurGr.invalidate\n              end\n              _AVExtAdvEditorCurGr.invalidate\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.invalidate\n            else\n              if (_AVExtAdvEditorCurGr <> nil) then\n                agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n                _AVExtAdvEditorCurGr = nil\n              end\n  
          end\n          end\n          if (_AVExtAdvEditorScratchListPart) then\n            if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) = \"Part\") then\n              adrsh = PolyLine.MakeEmpty\n            else\n              aLastNumber = _AVExtAdvEditorScratchList.Count - 1\n              if (_AVExtAdvEditorScratchList.Get(aLastNumber).Get(0) = nil) then\n                adrshlist = list.make\n                P0 = _AVExtAdvEditorScratchList.Get(aLastNumber - 1).Get(0)\n        
        Pt = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(2)\n                P2 = _AVExtAdvEditorapt\n                P1x = (Pt.GetX - ((0.25 * P0.GetX) + (0.25 * P2.GetX))) / 0.5\n                P1y = (Pt.GetY - ((0.25 * P0.GetY) + (0.25 * P2.GetY))) / 0.5\n                for each t in 0..1 by _AVExtAdvEditorArcT\n                  Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n                  Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) *
 P2.GetY) \n                  adrshlist.Add(Ptx@Pty)\n                end\n              else    \n                adrshlist = list.make\n                alastpointV = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(0).Clone\n                adrshlist.add(alastpointV)\n                adrshlist.add(_AVExtAdvEditorapt)\n              end\n              if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.count - 2).Get(0) <> \"Part\") then\n                aPartNumber = _AVExtAdvEditorScratchListPartNumber.Get(
_AVExtAdvEditorScratchListPartNumber.Count -1) + 1\n                adrshlist.add(_AVExtAdvEditorScratchList.Get(aPartNumber).Get(0).Clone)\n              end\n              adrsh = Polyline.Make({adrshlist})\n            end\n          else\n            aLastNumber = _AVExtAdvEditorScratchList.Count - 1\n            if (_AVExtAdvEditorScratchList.Get(aLastNumber).Get(0) = nil) then\n              adrshlist = list.make\n              P0 = _AVExtAdvEditorScratchList.Get(aLastNumber - 1).Get(0)\n              Pt = _AVE
xtAdvEditorScratchList.Get(aLastNumber).Get(2)\n              P2 = _AVExtAdvEditorapt\n              P1x = (Pt.GetX - ((0.25 * P0.GetX) + (0.25 * P2.GetX))) / 0.5\n              P1y = (Pt.GetY - ((0.25 * P0.GetY) + (0.25 * P2.GetY))) / 0.5\n              for each t in 0..1 by _AVExtAdvEditorArcT\n                Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n                Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY) \n                ad
rshlist.Add(Ptx@Pty)\n              end      \n            else    \n              adrshlist = list.make\n              alastpointV = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(0).Clone\n              adrshlist.add(alastpointV)\n              adrshlist.add(_AVExtAdvEditorapt.clone)\n            end\n            if (_AVExtAdvEditorScratchList.count > 1) then\n              adrshlist.add(_AVExtAdvEditorScratchList.Get(0).Get(0).clone)\n            end\n            adrsh = Polyline.Make({adrshlist})\n          end\n  
        if (_AVExtAdvEditorScrathGrMouse = nil) then\n            _AVExtAdvEditorScrathGrMouse = GraphicShape.Make(adrsh)\n            _AVExtAdvEditorScrathGrMouse.SetName(\"_AVExtAdvEditorScrathGrMouse\")\n            _AVExtAdvEditorScrathGrMouse.SetSymbol(_AVExtAdvEditorScratchLE)\n            agrlist.Add(_AVExtAdvEditorScrathGrMouse)\n            _AVExtAdvEditorScrathGrMouse.invalidate\n          end\n          _AVExtAdvEditorScrathGrMouse.invalidate\n          _AVExtAdvEditorScrathGrMouse.SetShape(adrsh)\n        
  _AVExtAdvEditorScrathGrMouse.invalidate\n        end\n        if (System.IsDoubleClick) then\n          av.Run(\"AVExtAdvEditor.ToolDrawingStop\",nil)\n        elseif (_AVExtAdvEditorClick = 1) then\n          _AVExtAdvEditorClick = nil\n          if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.Pan\n          elseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          else\n        
    aLastNumber = _AVExtAdvEditorScratchList.Count - 1\n            if (_AVExtAdvEditorScratchListPart) then\n              if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) = \"Part\") then\n                _AVExtAdvEditorScratchListPartPoint = _AVExtAdvEditorapt.clone\n                _AVExtAdvEditorScratchList.add({_AVExtAdvEditorapt.clone,\"line\"})\n                aVertexAdded = 3\n              else\n                if (_AVExtAdvEditorScratchList.Get(aLastNumber).Get(0) = nil) then
\n                  aVertexAdded = 1\n                  P0 = _AVExtAdvEditorScratchList.Get(aLastNumber - 1).Get(0)\n                  Pt = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(2)\n                  P2 = _AVExtAdvEditorapt\n                  P1x = (Pt.GetX - ((0.25 * P0.GetX) + (0.25 * P2.GetX))) / 0.5\n                  P1y = (Pt.GetY - ((0.25 * P0.GetY) + (0.25 * P2.GetY))) / 0.5\n                  for each t in 0..1 by _AVExtAdvEditorArcT\n                    Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t
) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n                    Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY) \n                    _AVExtAdvEditorScratchList.add({Ptx@Pty,\"stream\"})\n                  end\n                  _AVExtAdvEditorScratchList.Remove(aLastNumber)\n                  av.Run(\"AVExtAdvEditor.ToolDrawingPolygon\",nil)\n                else\n                  aVertexAdded = 0\n                  _AVExtAdvEditorScratchList.add({nil,\"arc\",_AVExtAdvEditorapt})\n    
            end\n              end\n            else\n              if (_AVExtAdvEditorScratchList.Get(aLastNumber).Get(0) = nil) then\n                aVertexAdded = 1\n                P0 = _AVExtAdvEditorScratchList.Get(aLastNumber - 1).Get(0)\n                Pt = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(2)\n                P2 = _AVExtAdvEditorapt\n                P1x = (Pt.GetX - ((0.25 * P0.GetX) + (0.25 * P2.GetX))) / 0.5\n                P1y = (Pt.GetY - ((0.25 * P0.GetY) + (0.25 * P2.GetY))) / 0.5\n   
             for each t in 0..1 by _AVExtAdvEditorArcT\n                  Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n                  Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY) \n                  _AVExtAdvEditorScratchList.add({Ptx@Pty,\"stream\"})\n                end\n                _AVExtAdvEditorScratchList.Remove(aLastNumber)\n                av.Run(\"AVExtAdvEditor.ToolDrawingPolygon\",nil)\n              else\n                a
VertexAdded = 0\n                _AVExtAdvEditorScratchList.add({nil,\"arc\",_AVExtAdvEditorapt})\n              end\n            end\n            if (_AVExtAdvEditorShowVer) then\n              if (aVertexAdded = 1) then\n                aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n                if (aVertexEnd <> nil) then\n                  if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertexCurv
e\")\n                  else\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n                  end\n                  aVertexEnd.invalidate\n                  aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n                  aVertexEnd.invalidate\n                  for each aVeri in aLastNumber..(_AVExtAdvEditorScratchList.Count - 1) by 1\n                    if (aVeri <> (_AVExtAdvEditorScratchList.Count - 1)) then\n                      aVertex = GraphicShape.Make(_AVExtAdvEditorScratchList.Get(aVeri)
.Get(0))\n                      aVertex.SetName(\"AVExtAdvEditorVertex\")\n                      aVertex.SetSymbol(_AVExtAdvEditorVertex)\n                      aVertex.SetObjectTag(aVeri.clone)\n                      agrlist.Add(aVertex)\n                    elseif (aVeri = (_AVExtAdvEditorScratchList.Count - 1)) then\n                      aVertex = GraphicShape.Make(_AVExtAdvEditorScratchList.Get(aVeri).Get(0))\n                      aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n                      aVertex.SetSymb
ol(_AVExtAdvEditorVertexEnd)\n                      aVertex.SetObjectTag(aVeri.clone)\n                      agrlist.Add(aVertex)\n                    end\n                  end\n                end\n              elseif (aVertexAdded = 3) then\n                aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n                if (aVertexEnd <> nil) then\n                  if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n                    aVertexEnd.SetName(\"
AVExtAdvEditorVertexCurve\")\n                  else\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n                  end\n                  aVertexEnd.invalidate\n                  aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n                  aVertexEnd.invalidate\n                  aVertex = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                  aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n                  aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n                  aVertex.SetObjectTag(
_AVExtAdvEditorScratchList.Count - 1)\n                  agrlist.Add(aVertex)\n                end\n              end        \n            end\n            if (_AVExtAdvEditorPanClick) then\n              _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n            end\n          end\n          av.DelayedRun(\"AVExtAdvEditor.ToolArcPolygonStart\",nil,0)\n        else\n          av.DelayedRun(\"AVExtAdvEditor.ToolArcPolygonEnd\",nil,0)\n        end\n      else\n        _AVExtAdvEditorClick = nil\n        if (_AVExtAdv
EditorScrathGrMouse <> nil) then\n          agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n        end\n        _AVExtAdvEditorScrathGrMouse = nil\n        if (_AVExtAdvEditorCurGr <> nil) then\n           agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n        end\n        _AVExtAdvEditorCurGr = nil\n        _AVExtAdvEditoraptL = nil\n        _AVExtAdvEditorapt = nil\n      end\n    else\n      _AVExtAdvEditorClick = nil\n      if (_AVExtAdvEditorScrathGrMouse <> nil) then\n        agrlist.RemoveGraphic(_AVExtAdvEdit
orScrathGrMouse)\n      end\n      _AVExtAdvEditorScrathGrMouse = nil\n      if (_AVExtAdvEditorCurGr <> nil) then\n         agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n      end\n      _AVExtAdvEditorCurGr = nil\n      _AVExtAdvEditoraptL = nil\n      _AVExtAdvEditorapt = nil\n    end\n  else\n    _AVExtAdvEditorClick = nil\n    if (_AVExtAdvEditorScrathGrMouse <> nil) then\n      agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n    end\n    _AVExtAdvEditorScrathGrMouse = nil\n    if (_AVExtAdvEditorCurGr <> nil) the
n\n       agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n    end\n    _AVExtAdvEditorCurGr = nil\n    _AVExtAdvEditoraptL = nil\n    _AVExtAdvEditorapt = nil\n  end\nelse\n  _AVExtAdvEditorClick = nil\n  if (_AVExtAdvEditorScrathGrMouse <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n  end\n  _AVExtAdvEditorScrathGrMouse = nil\n  if (_AVExtAdvEditorCurGr <> nil) then\n     agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n  end\n  if (_AVExtAdvEditorScrathGr <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvE
ditorScrathGr)\n  end\n  _AVExtAdvEditorScrathGr = nil\n  _AVExtAdvEditorCurGr = nil\n  _AVExtAdvEditoraptL = nil\n  _AVExtAdvEditorapt = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1795
	Owner:	1794
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1796
)

(DocAct.1797
	Doc:	1794
)

(SEd.1798
	Name:	"AVExtAdvEditor.ToolArcPolygonEnd"
	CreationDate:	"22 Июнь 2004 г. 5:12:04"
	GUIName:	"Script"
	Win:	1799
	CSMgr:	1800
	DocExts:	1801
	Source:	"av.Run(\"AVExtAdvEditor.ToolArcPolygon\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1799
	Owner:	1798
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1800
)

(DocAct.1801
	Doc:	1798
)

(SEd.1802
	Name:	"AVExtAdvEditor.ToolArcPolygonStart"
	CreationDate:	"22 Июнь 2004 г. 5:12:58"
	GUIName:	"Script"
	Win:	1803
	CSMgr:	1804
	DocExts:	1805
	Source:	"if (_AVExtAdvEditorStartSnapPan.Not) then\n  if (System.IsDoubleClick) then\n    av.DelayedRun(\"AVExtAdvEditor.ToolDrawingStop\",nil,0)\n  else\n    if (_AVExtAdvEditorScratchList = nil) then\n      _AVExtAdvEditorScratchListPart = false\n      _AVExtAdvEditorScratchList = List.Make\n      adis = _AVExtAdvEditorView.getdisplay\n      agrlist = _AVExtAdvEditorView.getgraphics\n      if (_AVExtAdvEditoraptS = nil) then\n        _AVExtAdvEditoraptS = adis.returnuserpoint\n      else\n        _AVExtAdvEditorapt = adis.retur
nuserpoint\n      end    \n      _AVExtAdvEditorScratchList.Add({_AVExtAdvEditoraptS.Clone,\"line\"})\n      if (_AVExtAdvEditorShowVer) then\n        aVertex = GraphicShape.Make(_AVExtAdvEditoraptS.Clone)\n        aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n        aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n        aVertex.SetObjectTag(0)\n        agrlist.Add(aVertex)    \n      end\n      _AVExtAdvEditoraptS = nil    \n    end\n    if (_AVExtAdvEditorClick = nil) then\n      _AVExtAdvEditorClick = 2\n      av.Run(\"AVEx
tAdvEditor.ToolArcPolygon\",nil)\n    else\n      _AVExtAdvEditorClick = 1\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1803
	Owner:	1802
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1804
)

(DocAct.1805
	Doc:	1802
)

(SEd.1806
	Name:	"AVExtAdvEditor.ToolArcPolyline"
	CreationDate:	"30 Апрель 2004 г. 3:46:35"
	GUIName:	"Script"
	Win:	1807
	CSMgr:	1808
	DocExts:	1809
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScratchList <> nil) then\n  if (_AVExtAdvEditorView = av.Getactivedoc) then\n    if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEArc\").IsSelected) then\n      if ((_AVExtAdvEditorDrawClass = \"polyline\") or (_AVExtAdvEditorDrawClass = \"multi\")) then\n        apt = _AVExtAdvEditorView.getdisplay.returnuserpoint\n        if (_AVExtAdvEditorPan) then\n          aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n          aDisa
pt = aViewRect.GetWidth / 100\n          if (aViewRect.AsPolygon.AsPolyline.Distance(apt).Abs < aDisapt) then\n            aptpan = Polyline.Make({{aViewRect.ReturnCenter,apt}}).Along(10)\n            _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n          end\n        end\n        if (apt <> _AVExtAdvEditoraptL) then\n          _AVExtAdvEditoraptL = apt.Clone\n          _AVExtAdvEditorapt = apt.Clone\n          aSnapReal = 0\n          if (_AVExtAdvEditorSnapEnb) then\n            if (_AVExtAdvEditorSnapTU = \"pixels\"
) then\n              aSnapTolerance = (_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.GetWin.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\n            else\n              aSnapTolerance = _AVExtAdvEditorSnapT\n            end\n            aListK = _AVExtAdvEditorView.GetThemes\n            for each aThemeView in aLIstK  \n              aListE = _AVExtAdvEditorListSnap.Get(aThemeView)\n              if (aListE <> nil) then\n                for each aThe
meSnapeI in 0..3\n                  aThemeSnape = aListE.Get(aThemeSnapeI)\n                  if (aThemeSnape <> 0) then\n                    aUserSnapPoint = _AVExtAdvEditorapt.Clone\n                    aThemeView.SetInteractiveSnapTolerance(aSnapTolerance)\n                    if (aThemeSnapeI = 0) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_VERTEX,aUserSnapPoint)\n                    elseif (aThemeSnapeI = 1) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_BOUNDARY,aUserSna
pPoint)\n                    elseif (aThemeSnapeI = 2) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_ENDPOINT,aUserSnapPoint)\n                    else\n                      aThemeView.UserSnapPoint(#POINT_SNAP_INTERSECTION,aUserSnapPoint)\n                    end\n                    if (aUserSnapPoint <> _AVExtAdvEditorapt) then\n                      _AVExtAdvEditorapt = aUserSnapPoint.Clone\n                      aSnapReal = 1\n                      break\n                    end\n             
     end\n                end\n              end\n              if (aSnapReal = 1) then\n                if (_AVExtAdvEditorSnapOff <> 0) then\n                  aDis1 = _AVExtAdvEditorapt.Distance(apt)\n                  aptPx = apt.GetX - _AVExtAdvEditorapt.GetX\n                  aptPy = apt.GetY - _AVExtAdvEditorapt.GetY\n                  aCosA = aptPx / aDis1.Abs\n                  aSinA = aptPy / aDis1.Abs\n                  aNewPx = _AVExtAdvEditorSnapOff * aCosA\n                  aNewPy = _AVExtAdvEditorSnap
Off * aSinA\n                  aNewPtX = aNewPx + _AVExtAdvEditorapt.GetX\n                  aNewPtY = aNewPy + _AVExtAdvEditorapt.GetY\n                  _AVExtAdvEditorapt = aNewPtX@aNewPtY\n                end\n                break\n              end\n            end\n          end        \n          if (_AVExtAdvEditorShowCurP) then\n            if (_AVExtAdvEditorCurGr = nil) then\n              _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.SetName(\"_AVExtA
dvEditorCurGr\")\n              if (aSnapReal = 1) then\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              else\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n              end\n              agrlist.Add(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr.invalidate\n            end\n            if (aSnapReal = 1) then\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            else\n              _AVExtAdvEditorCurGr.SetSymbo
l(_AVExtAdvEditorScratchP2)\n            end\n            _AVExtAdvEditorCurGr.invalidate\n            _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.clone)\n            _AVExtAdvEditorCurGr.invalidate\n          else\n            if (aSnapReal = 1) then\n              if (_AVExtAdvEditorCurGr = nil) then\n                _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEd
itorScratchP)\n                agrlist.Add(_AVExtAdvEditorCurGr)\n                _AVExtAdvEditorCurGr.invalidate\n              end\n              _AVExtAdvEditorCurGr.invalidate\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.invalidate\n            else\n              if (_AVExtAdvEditorCurGr <> nil) then\n                agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n                _AVEx
tAdvEditorCurGr = nil\n              end\n            end\n          end\n          if (_AVExtAdvEditorScratchListPart) then\n            if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) = \"Part\") then\n              adrsh = PolyLine.MakeEmpty\n            else\n              aLastNumber = _AVExtAdvEditorScratchList.Count - 1\n              if (_AVExtAdvEditorScratchList.Get(aLastNumber).Get(0) = nil) then\n                adrshlist = list.make\n                P0 = _AVExtAdvEditorScratc
hList.Get(aLastNumber - 1).Get(0)\n                Pt = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(2)\n                P2 = _AVExtAdvEditorapt\n                P1x = (Pt.GetX - ((0.25 * P0.GetX) + (0.25 * P2.GetX))) / 0.5\n                P1y = (Pt.GetY - ((0.25 * P0.GetY) + (0.25 * P2.GetY))) / 0.5\n                for each t in 0..1 by _AVExtAdvEditorArcT\n                  Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n                  Pty = (((1 - t) ^ 2) * P0.GetY) 
+ (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY) \n                  adrshlist.Add(Ptx@Pty)\n                end\n              else    \n                adrshlist = list.make\n                alastpointV = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(0).Clone\n                adrshlist.add(alastpointV)\n                adrshlist.add(_AVExtAdvEditorapt)\n              end\n              adrsh = Polyline.Make({adrshlist})\n            end\n          else\n            aLastNumber = _AVExtAdvEditorScratchList.Count 
- 1\n            if (_AVExtAdvEditorScratchList.Get(aLastNumber).Get(0) = nil) then\n              adrshlist = list.make\n              P0 = _AVExtAdvEditorScratchList.Get(aLastNumber - 1).Get(0)\n              Pt = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(2)\n              P2 = _AVExtAdvEditorapt\n              P1x = (Pt.GetX - ((0.25 * P0.GetX) + (0.25 * P2.GetX))) / 0.5\n              P1y = (Pt.GetY - ((0.25 * P0.GetY) + (0.25 * P2.GetY))) / 0.5\n              for each t in 0..1 by _AVExtAdvEditorArcT\n   
             Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n                Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY) \n                adrshlist.Add(Ptx@Pty)\n              end      \n            else    \n              adrshlist = list.make\n              alastpointV = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(0).Clone\n              adrshlist.add(alastpointV)\n              adrshlist.add(_AVExtAdvEditorapt.clone)\n            en
d\n            adrsh = Polyline.Make({adrshlist})\n          end\n          if (_AVExtAdvEditorScrathGrMouse = nil) then\n            _AVExtAdvEditorScrathGrMouse = GraphicShape.Make(adrsh)\n            _AVExtAdvEditorScrathGrMouse.SetName(\"_AVExtAdvEditorScrathGrMouse\")\n            _AVExtAdvEditorScrathGrMouse.SetSymbol(_AVExtAdvEditorScratchLE)\n            agrlist.Add(_AVExtAdvEditorScrathGrMouse)\n            _AVExtAdvEditorScrathGrMouse.invalidate\n          end\n          _AVExtAdvEditorScrathGrMouse.invalidat
e\n          _AVExtAdvEditorScrathGrMouse.SetShape(adrsh)\n          _AVExtAdvEditorScrathGrMouse.invalidate\n        end\n        if (System.IsDoubleClick) then\n          av.Run(\"AVExtAdvEditor.ToolDrawingStop\",nil)\n        elseif (_AVExtAdvEditorClick = 1) then\n          _AVExtAdvEditorClick = nil\n          if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.Pan\n          elseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n            _AVExtAdvEditor
View.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          else\n            aLastNumber = _AVExtAdvEditorScratchList.Count - 1\n            if (_AVExtAdvEditorScratchListPart) then\n              if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) = \"Part\") then\n                _AVExtAdvEditorScratchListPartPoint = _AVExtAdvEditorapt.clone\n                _AVExtAdvEditorScratchList.add({_AVExtAdvEditorapt.clone,\"line\"})\n                aVertexAdded = 3\n              else\n                i
f (_AVExtAdvEditorScratchList.Get(aLastNumber).Get(0) = nil) then\n                  aVertexAdded = 1\n                  P0 = _AVExtAdvEditorScratchList.Get(aLastNumber - 1).Get(0)\n                  Pt = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(2)\n                  P2 = _AVExtAdvEditorapt\n                  P1x = (Pt.GetX - ((0.25 * P0.GetX) + (0.25 * P2.GetX))) / 0.5\n                  P1y = (Pt.GetY - ((0.25 * P0.GetY) + (0.25 * P2.GetY))) / 0.5\n                  for each t in 0..1 by _AVExtAdvEditorAr
cT\n                    Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n                    Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY) \n                    _AVExtAdvEditorScratchList.add({Ptx@Pty,\"stream\"})\n                  end\n                  _AVExtAdvEditorScratchList.Remove(aLastNumber)\n                  av.Run(\"AVExtAdvEditor.ToolDrawing\",nil)\n                else\n                  aVertexAdded = 0\n                  _AVExtAdv
EditorScratchList.add({nil,\"arc\",_AVExtAdvEditorapt})\n                end\n              end\n            else\n              if (_AVExtAdvEditorScratchList.Get(aLastNumber).Get(0) = nil) then\n                aVertexAdded = 1\n                P0 = _AVExtAdvEditorScratchList.Get(aLastNumber - 1).Get(0)\n                Pt = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(2)\n                P2 = _AVExtAdvEditorapt\n                P1x = (Pt.GetX - ((0.25 * P0.GetX) + (0.25 * P2.GetX))) / 0.5\n                P1y = (
Pt.GetY - ((0.25 * P0.GetY) + (0.25 * P2.GetY))) / 0.5\n                for each t in 0..1 by _AVExtAdvEditorArcT\n                  Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n                  Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY) \n                  _AVExtAdvEditorScratchList.add({Ptx@Pty,\"stream\"})\n                end\n                _AVExtAdvEditorScratchList.Remove(aLastNumber)\n                av.Run(\"AVExtAdvEditor.Too
lDrawing\",nil)\n              else\n                aVertexAdded = 0\n                _AVExtAdvEditorScratchList.add({nil,\"arc\",_AVExtAdvEditorapt})\n              end\n            end\n            if (_AVExtAdvEditorShowVer) then\n              if (aVertexAdded = 1) then\n                aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n                if (aVertexEnd <> nil) then\n                  if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n             
       aVertexEnd.SetName(\"AVExtAdvEditorVertexCurve\")\n                  else\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n                  end\n                  aVertexEnd.invalidate\n                  aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n                  aVertexEnd.invalidate\n                  for each aVeri in aLastNumber..(_AVExtAdvEditorScratchList.Count - 1) by 1\n                    if (aVeri <> (_AVExtAdvEditorScratchList.Count - 1)) then\n                      aVertex = Grap
hicShape.Make(_AVExtAdvEditorScratchList.Get(aVeri).Get(0))\n                      aVertex.SetName(\"AVExtAdvEditorVertex\")\n                      aVertex.SetSymbol(_AVExtAdvEditorVertex)\n                      aVertex.SetObjectTag(aVeri.clone)\n                      agrlist.Add(aVertex)\n                    elseif (aVeri = (_AVExtAdvEditorScratchList.Count - 1)) then\n                      aVertex = GraphicShape.Make(_AVExtAdvEditorScratchList.Get(aVeri).Get(0))\n                      aVertex.SetName(\"AVExtAdvEdit
orVertexEnd\")\n                      aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n                      aVertex.SetObjectTag(aVeri.clone)\n                      agrlist.Add(aVertex)\n                    end\n                  end\n                end\n              elseif (aVertexAdded = 3) then\n                aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n                if (aVertexEnd <> nil) then\n                  if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"cu
rve\") then\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertexCurve\")\n                  else\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n                  end\n                  aVertexEnd.invalidate\n                  aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n                  aVertexEnd.invalidate\n                  aVertex = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                  aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n                  aVertex.SetSymbol(_AVExtAdvEdito
rVertexEnd)\n                  aVertex.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n                  agrlist.Add(aVertex)\n                end\n              end        \n            end\n            if (_AVExtAdvEditorPanClick) then\n              _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n            end\n          end\n          av.DelayedRun(\"AVExtAdvEditor.ToolArcPolylineStart\",nil,0)\n        else\n          av.DelayedRun(\"AVExtAdvEditor.ToolArcPolylineEnd\",nil,0)\n        end\n      else\n   
     _AVExtAdvEditorClick = nil\n        if (_AVExtAdvEditorScrathGrMouse <> nil) then\n          agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n        end\n        _AVExtAdvEditorScrathGrMouse = nil\n        if (_AVExtAdvEditorCurGr <> nil) then\n           agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n        end\n        _AVExtAdvEditorCurGr = nil\n        _AVExtAdvEditoraptL = nil\n        _AVExtAdvEditorapt = nil\n      end\n    else\n      _AVExtAdvEditorClick = nil\n      if (_AVExtAdvEditorScrathGrMouse <> 
nil) then\n        agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n      end\n      _AVExtAdvEditorScrathGrMouse = nil\n      if (_AVExtAdvEditorCurGr <> nil) then\n         agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n      end\n      _AVExtAdvEditorCurGr = nil\n      _AVExtAdvEditoraptL = nil\n      _AVExtAdvEditorapt = nil\n    end\n  else\n    _AVExtAdvEditorClick = nil\n    if (_AVExtAdvEditorScrathGrMouse <> nil) then\n      agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n    end\n    _AVExtAdvEditorScrathG
rMouse = nil\n    if (_AVExtAdvEditorCurGr <> nil) then\n       agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n    end\n    _AVExtAdvEditorCurGr = nil\n    _AVExtAdvEditoraptL = nil\n    _AVExtAdvEditorapt = nil\n  end\nelse\n  _AVExtAdvEditorClick = nil\n  if (_AVExtAdvEditorScrathGrMouse <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n  end\n  _AVExtAdvEditorScrathGrMouse = nil\n  if (_AVExtAdvEditorCurGr <> nil) then\n     agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n  end\n  if (_AVExtAdvEditorScrat
hGr <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGr)\n  end\n  _AVExtAdvEditorScrathGr = nil\n  _AVExtAdvEditorCurGr = nil\n  _AVExtAdvEditoraptL = nil\n  _AVExtAdvEditorapt = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1807
	Owner:	1806
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1808
)

(DocAct.1809
	Doc:	1806
)

(SEd.1810
	Name:	"AVExtAdvEditor.ToolArcPolylineClick"
	CreationDate:	"7 Май 2004 г. 4:03:30"
	GUIName:	"Script"
	Win:	1811
	CSMgr:	1812
	DocExts:	1813
	Source:	"if (_AVExtAdvEditorScratchList = nil) then\n  if (_AVExtAdvEditorStartSnapRun.Not) then\n    av.Run(\"AVExtAdvEditor.StartSnapPointEnd\",nil)\n  end\nelse\n  if (_AVExtAdvEditorShowVer.Not) then\n    agrlist = _AVExtAdvEditorView.getgraphics\n    aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorVertex\")\n    if (aListVertex <> nil) then\n      for each iaListVertex in aListVertex\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexEnd = agrlist.FindAllByName(\"AVExtAdvEditorVertexEnd\")\n    if
 (aListVertexEnd <> nil) then\n      for each iaListVertexEnd in aListVertexEnd\n        agrlist.RemoveGraphic(iaListVertexEnd)\n      end\n    end\n    aListVertexCurve = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurve\")\n    if (aListVertexCurve <> nil) then\n      for each iaListVertex in aListVertexCurve\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexCurveP1 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP1\")\n    if (aListVertexCurveP1 <> nil) then\n      for each iaListVertex 
in aListVertexCurveP1\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexCurveP2 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP2\")\n    if (aListVertexCurveP2 <> nil) then\n      for each iaListVertex in aListVertexCurveP2\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1811
	Owner:	1810
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1812
)

(DocAct.1813
	Doc:	1810
)

(SEd.1814
	Name:	"AVExtAdvEditor.ToolArcPolylineEnd"
	CreationDate:	"30 Апрель 2004 г. 4:02:34"
	GUIName:	"Script"
	Win:	1815
	CSMgr:	1816
	DocExts:	1817
	Source:	"av.Run(\"AVExtAdvEditor.ToolArcPolyline\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1815
	Owner:	1814
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1816
)

(DocAct.1817
	Doc:	1814
)

(SEd.1818
	Name:	"AVExtAdvEditor.ToolArcPolylineStart"
	CreationDate:	"30 Апрель 2004 г. 3:45:38"
	GUIName:	"Script"
	Win:	1819
	CSMgr:	1820
	DocExts:	1821
	Source:	"if (_AVExtAdvEditorStartSnapPan.Not) then\n  if (System.IsDoubleClick) then\n    av.DelayedRun(\"AVExtAdvEditor.ToolDrawingStop\",nil,0)\n  else\n    if (_AVExtAdvEditorScratchList = nil) then\n      _AVExtAdvEditorScratchListPart = false\n      _AVExtAdvEditorScratchList = List.Make\n      adis = _AVExtAdvEditorView.getdisplay\n      agrlist = _AVExtAdvEditorView.getgraphics\n      if (_AVExtAdvEditoraptS = nil) then\n        _AVExtAdvEditoraptS = adis.returnuserpoint\n      else\n        _AVExtAdvEditorapt = adis.retur
nuserpoint\n      end    \n      _AVExtAdvEditorScratchList.Add({_AVExtAdvEditoraptS.Clone,\"line\"})\n      if (_AVExtAdvEditorShowVer) then\n        aVertex = GraphicShape.Make(_AVExtAdvEditoraptS.Clone)\n        aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n        aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n        aVertex.SetObjectTag(0)\n        agrlist.Add(aVertex)    \n      end\n      _AVExtAdvEditoraptS = nil    \n    end\n    if (_AVExtAdvEditorClick = nil) then\n      _AVExtAdvEditorClick = 2\n      av.Run(\"AVEx
tAdvEditor.ToolArcPolyline\",nil)\n    else\n      _AVExtAdvEditorClick = 1\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1819
	Owner:	1818
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1820
)

(DocAct.1821
	Doc:	1818
)

(SEd.1822
	Name:	"AVExtAdvEditor.ToolArcUpd"
	CreationDate:	"22 Июнь 2004 г. 4:27:08"
	GUIName:	"Script"
	Win:	1823
	CSMgr:	1824
	DocExts:	1825
	Source:	"self.SetEnabled(true)\naTask = av.FindDialog(\"AVExtAdvEditor.Task\").FindByName(\"aCBTask\").GetCurrentValue\nif (aTask = \"Create New Feature\") then\n  if (_AVExtAdvEditorTheme = nil) then\n    self.SetEnabled(false)\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n        self.SetApply(\"AVExtAdvEditor.ToolArcPolygonStart\")\n        _AVExtAdvEditorDrawClass = \"polygon\"\n      elseif (_AVExtAdvEditorTheme.GetFTab.Fi
ndField(\"Shape\").GetType = #FIELD_SHAPELINE) then\n        self.SetApply(\"AVExtAdvEditor.ToolArcPolylineStart\")\n        _AVExtAdvEditorDrawClass = \"polyline\"\n      elseif (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEMULTIPOINT) then\n        self.SetApply(\"AVExtAdvEditor.ToolArcPolylineStart\")\n        _AVExtAdvEditorDrawClass = \"multi\"\n      elseif (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOINT) then\n        self.SetEnabled(false)\n        _AVExtAdvEditor
DrawClass = \"point\"\n      end\n    else\n      self.SetEnabled(false)\n    end\n  end\nelseif (aTask = \"Auto Complete Polygon\") then\n  if (_AVExtAdvEditorTheme = nil) then\n    self.SetEnabled(false)\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n        self.SetApply(\"AVExtAdvEditor.ToolArcPolylineStart\")\n        _AVExtAdvEditorDrawClass = \"polyline\"\n      else\n        self.SetEnabled(false)\n      end\n    els
e\n      self.SetEnabled(false)\n    end\n  end\nelseif (aTask = \"Cut Polygon\") then\n  if (_AVExtAdvEditorTheme = nil) then\n    self.SetEnabled(false)\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n        self.SetApply(\"AVExtAdvEditor.ToolArcPolylineStart\")\n        _AVExtAdvEditorDrawClass = \"polyline\"\n      else\n        self.SetEnabled(false)\n      end\n    else\n      self.SetEnabled(false)\n    end\n  end\nel
seif (aTask = \"Split Polyline\") then\n  if (_AVExtAdvEditorTheme = nil) then\n    self.SetEnabled(false)\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPELINE) then\n        self.SetApply(\"AVExtAdvEditor.ToolArcPolylineStart\")\n        _AVExtAdvEditorDrawClass = \"polyline\"\n      else\n        self.SetEnabled(false)\n      end\n    else\n      self.SetEnabled(false)\n    end\n  end  \nelseif (aTask = \"Modify Feature\") then\n  \nel
seif (aTask = \"Resape Feature\") then\n  self.SetApply(\"AVExtAdvEditor.ToolArcPolylineStart\")\n  _AVExtAdvEditorDrawClass = \"polyline\"\n  aValid = false\n  aTL = _AVExtAdvEditorList.ReturnKeys\n  for each i in aTL\n    if (_AVExtAdvEditorList.Get(i) = 1) then\n      if (i.GetFTab.IsEditable) then\n        if ((i.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) or (i.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPELINE)) then\n          if (i.GetFTab.GetSelection.Count > 0) then\n            aValid = true\n      
      break\n          end\n        end\n      end\n    end\n  end\n  self.setenabled(aValid)\nelseif (aTask = \"Select Features Using an Area\") then\n  self.SetApply(\"AVExtAdvEditor.ToolArcPolygonStart\")\n  _AVExtAdvEditorDrawClass = \"polygon\"\nelseif (aTask = \"Select Features Using a Line\") then\n  self.SetApply(\"AVExtAdvEditor.ToolArcPolylineStart\")\n  _AVExtAdvEditorDrawClass = \"polyline\"\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1823
	Owner:	1822
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1824
)

(DocAct.1825
	Doc:	1822
)

(SEd.1826
	Name:	"AVExtAdvEditor.ToolCurvePolygon"
	CreationDate:	"22 Июнь 2004 г. 22:06:40"
	GUIName:	"Script"
	Win:	1827
	CSMgr:	1828
	DocExts:	1829
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScratchList <> nil) then\n  if (_AVExtAdvEditorView = av.Getactivedoc) then\n    if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AECurve\").IsSelected) then\n      if ( _AVExtAdvEditorDrawClass = \"polygon\") then\n        apt = _AVExtAdvEditorView.getdisplay.returnuserpoint\n        if (_AVExtAdvEditorPan) then\n          aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n          aDisapt = aViewRect.GetWidth / 100\n          
if (aViewRect.AsPolygon.AsPolyline.Distance(apt).Abs < aDisapt) then\n            aptpan = Polyline.Make({{aViewRect.ReturnCenter,apt}}).Along(10)\n            _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n          end\n        end\n        if (apt <> _AVExtAdvEditoraptL) then\n          _AVExtAdvEditoraptL = apt.Clone\n          _AVExtAdvEditorapt = apt.Clone\n          aSnapReal = 0\n          if (_AVExtAdvEditorSnapEnb) then\n            if (_AVExtAdvEditorSnapTU = \"pixels\") then\n              aSnapTolerance = (_
AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.GetWin.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\n            else\n              aSnapTolerance = _AVExtAdvEditorSnapT\n            end\n            aListK = _AVExtAdvEditorView.GetThemes\n            for each aThemeView in aLIstK  \n              aListE = _AVExtAdvEditorListSnap.Get(aThemeView)\n              if (aListE <> nil) then\n                for each aThemeSnapeI in 0..3\n                  aThem
eSnape = aListE.Get(aThemeSnapeI)\n                  if (aThemeSnape <> 0) then\n                    aUserSnapPoint = _AVExtAdvEditorapt.Clone\n                    aThemeView.SetInteractiveSnapTolerance(aSnapTolerance)\n                    if (aThemeSnapeI = 0) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_VERTEX,aUserSnapPoint)\n                    elseif (aThemeSnapeI = 1) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_BOUNDARY,aUserSnapPoint)\n                    elseif (aThe
meSnapeI = 2) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_ENDPOINT,aUserSnapPoint)\n                    else\n                      aThemeView.UserSnapPoint(#POINT_SNAP_INTERSECTION,aUserSnapPoint)\n                    end\n                    if (aUserSnapPoint <> _AVExtAdvEditorapt) then\n                      _AVExtAdvEditorapt = aUserSnapPoint.Clone\n                      aSnapReal = 1\n                      break\n                    end\n                  end\n                end\n           
   end\n              if (aSnapReal = 1) then\n                if (_AVExtAdvEditorSnapOff <> 0) then\n                  aDis1 = _AVExtAdvEditorapt.Distance(apt)\n                  aptPx = apt.GetX - _AVExtAdvEditorapt.GetX\n                  aptPy = apt.GetY - _AVExtAdvEditorapt.GetY\n                  aCosA = aptPx / aDis1.Abs\n                  aSinA = aptPy / aDis1.Abs\n                  aNewPx = _AVExtAdvEditorSnapOff * aCosA\n                  aNewPy = _AVExtAdvEditorSnapOff * aSinA\n                  aNewPtX = 
aNewPx + _AVExtAdvEditorapt.GetX\n                  aNewPtY = aNewPy + _AVExtAdvEditorapt.GetY\n                  _AVExtAdvEditorapt = aNewPtX@aNewPtY\n                end\n                break\n              end\n            end\n          end        \n          if (_AVExtAdvEditorShowCurP) then\n            if (_AVExtAdvEditorCurGr = nil) then\n              _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n              if (aSnapR
eal = 1) then\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              else\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n              end\n              agrlist.Add(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr.invalidate\n            end\n            if (aSnapReal = 1) then\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            else\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n            
end\n            _AVExtAdvEditorCurGr.invalidate\n            _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.clone)\n            _AVExtAdvEditorCurGr.invalidate\n          else\n            if (aSnapReal = 1) then\n              if (_AVExtAdvEditorCurGr = nil) then\n                _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n                agrlist.Ad
d(_AVExtAdvEditorCurGr)\n                _AVExtAdvEditorCurGr.invalidate\n              end\n              _AVExtAdvEditorCurGr.invalidate\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.invalidate\n            else\n              if (_AVExtAdvEditorCurGr <> nil) then\n                agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n                _AVExtAdvEditorCurGr = nil\n              end\n
            end\n          end\n          if (_AVExtAdvEditorScratchListPart) then\n            if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) = \"Part\") then\n              adrsh = PolyLine.MakeEmpty\n            else\n              adrshlist = list.make \n              adrshlist.add(_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.count - 1).Get(0).Clone)\n              adrshlist.add(_AVExtAdvEditorapt.clone)\n              if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditor
ScratchList.count - 2).Get(0) <> \"Part\") then\n                aPartNumber = _AVExtAdvEditorScratchListPartNumber.Get(_AVExtAdvEditorScratchListPartNumber.Count -1) + 1\n                adrshlist.add(_AVExtAdvEditorScratchList.Get(aPartNumber).Get(0).Clone)\n              end\n              adrsh = Polyline.Make({adrshlist})\n            end\n          else        \n            adrshlist = list.make \n            adrshlist.add(_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.count - 1).Get(0).Clone)\n      
      adrshlist.add(_AVExtAdvEditorapt.clone)\n            if (_AVExtAdvEditorScratchList.count > 1) then\n              adrshlist.add(_AVExtAdvEditorScratchList.Get(0).Get(0).clone)\n            end\n            adrsh = Polyline.Make({adrshlist})\n          end\n          if (_AVExtAdvEditorScrathGrMouse = nil) then\n            _AVExtAdvEditorScrathGrMouse = GraphicShape.Make(adrsh)\n            _AVExtAdvEditorScrathGrMouse.SetName(\"_AVExtAdvEditorScrathGrMouse\")\n            _AVExtAdvEditorScrathGrMouse.SetSymbol
(_AVExtAdvEditorScratchLE)\n            agrlist.Add(_AVExtAdvEditorScrathGrMouse)\n            _AVExtAdvEditorScrathGrMouse.invalidate\n          end\n          _AVExtAdvEditorScrathGrMouse.invalidate\n          _AVExtAdvEditorScrathGrMouse.SetShape(adrsh)\n          _AVExtAdvEditorScrathGrMouse.invalidate\n        end\n        if (System.IsDoubleClick) then\n          av.Run(\"AVExtAdvEditor.ToolDrawingStop\",nil)\n        elseif (_AVExtAdvEditorClick = 1) then\n          _AVExtAdvEditorClick = nil\n          if (_AVExt
AdvEditorPanSh and System.IsShiftKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.Pan\n          elseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          else\n            if (_AVExtAdvEditorScratchListPart) then\n              if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) = \"Part\") then\n                _AVExtAdvEditorScratchListPartPoint = _AVExtAdvEditorapt.clone\n                _AV
ExtAdvEditorScratchList.add({_AVExtAdvEditorapt.clone,\"line\"})\n                aVertexAdded = 1\n              else\n                aCurveAdd = Polyline.Make({{_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0),_AVExtAdvEditorapt}})\n                aCurveP1 = aCurveAdd.Along(40)\n                aCurveP2 = aCurveAdd.Along(60)\n                _AVExtAdvEditorScratchList.add({_AVExtAdvEditorapt.clone,\"curve\",aCurveP1,aCurveP2})\n                aVertexAdded = 0\n                av.Run(\"AVE
xtAdvEditor.ToolDrawingPolygon\",nil)\n              end            \n            else            \n              aCurveAdd = Polyline.Make({{_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0),_AVExtAdvEditorapt}})\n              aCurveP1 = aCurveAdd.Along(40)\n              aCurveP2 = aCurveAdd.Along(60)\n              _AVExtAdvEditorScratchList.add({_AVExtAdvEditorapt.clone,\"curve\",aCurveP1,aCurveP2})\n              aVertexAdded = 0\n              av.Run(\"AVExtAdvEditor.ToolDrawingPolygon\"
,nil)\n            end\n            if (_AVExtAdvEditorShowVer) then\n              if (aVertexAdded = 0) then\n                aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n                if (aVertexEnd <> nil) then\n                  if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertexCurve\")\n                  else\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n                 
 end\n                  aVertexEnd.invalidate\n                  aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n                  aVertexEnd.invalidate\n                  aVertex = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                  aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n                  aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n                  aVertex.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n                  agrlist.Add(aVertex)\n                  aVertex1 = GraphicShape.Make(_AVExtA
dvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(2).Clone)\n                  aVertex1.SetName(\"AVExtAdvEditorVertexCurveP1\")\n                  aVertex1.SetSymbol(_AVExtAdvEditorVertexArc)\n                  aVertex1.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n                  agrlist.Add(aVertex1)\n                  aVertex2 = GraphicShape.Make(_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(3).Clone)\n                  aVertex2.SetName(\"AVExtAdvEditorVertexCur
veP2\")\n                  aVertex2.SetSymbol(_AVExtAdvEditorVertexArc)\n                  aVertex2.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n                  agrlist.Add(aVertex2)\n                end\n              else\n                aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n                if (aVertexEnd <> nil) then\n                  if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n                    aVertexEnd.SetName(\"AVExtAdvEdit
orVertexCurve\")\n                  else\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n                  end\n                  aVertexEnd.invalidate\n                  aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n                  aVertexEnd.invalidate\n                  aVertex = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                  aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n                  aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n                  aVertex.SetObjectTag(_AVExtAdvEdi
torScratchList.Count - 1)\n                  agrlist.Add(aVertex)\n                end\n              end\n            end\n            if (_AVExtAdvEditorPanClick) then\n              _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n            end\n          end\n          av.DelayedRun(\"AVExtAdvEditor.ToolCurvePolygonStart\",nil,0)\n        else\n          av.DelayedRun(\"AVExtAdvEditor.ToolCurvePolygonEnd\",nil,0)\n        end\n      else\n        _AVExtAdvEditorClick = nil\n        if (_AVExtAdvEditorScrathGrMo
use <> nil) then\n          agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n        end\n        _AVExtAdvEditorScrathGrMouse = nil\n        if (_AVExtAdvEditorCurGr <> nil) then\n           agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n        end\n        _AVExtAdvEditorCurGr = nil\n        _AVExtAdvEditoraptL = nil\n        _AVExtAdvEditorapt = nil\n      end\n    else\n      _AVExtAdvEditorClick = nil\n      if (_AVExtAdvEditorScrathGrMouse <> nil) then\n        agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)
\n      end\n      _AVExtAdvEditorScrathGrMouse = nil\n      if (_AVExtAdvEditorCurGr <> nil) then\n         agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n      end\n      _AVExtAdvEditorCurGr = nil\n      _AVExtAdvEditoraptL = nil\n      _AVExtAdvEditorapt = nil\n    end\n  else\n    _AVExtAdvEditorClick = nil\n    if (_AVExtAdvEditorScrathGrMouse <> nil) then\n      agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n    end\n    _AVExtAdvEditorScrathGrMouse = nil\n    if (_AVExtAdvEditorCurGr <> nil) then\n       agrlist
.RemoveGraphic(_AVExtAdvEditorCurGr)\n    end\n    _AVExtAdvEditorCurGr = nil\n    _AVExtAdvEditoraptL = nil\n    _AVExtAdvEditorapt = nil\n  end\nelse\n  _AVExtAdvEditorClick = nil\n  if (_AVExtAdvEditorScrathGrMouse <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n  end\n  _AVExtAdvEditorScrathGrMouse = nil\n  if (_AVExtAdvEditorCurGr <> nil) then\n     agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n  end\n  if (_AVExtAdvEditorScrathGr <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGr)\n 
 end\n  _AVExtAdvEditorScrathGr = nil\n  _AVExtAdvEditorCurGr = nil\n  _AVExtAdvEditoraptL = nil\n  _AVExtAdvEditorapt = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1827
	Owner:	1826
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1828
)

(DocAct.1829
	Doc:	1826
)

(SEd.1830
	Name:	"AVExtAdvEditor.ToolCurvePolygonEnd"
	CreationDate:	"22 Июнь 2004 г. 22:09:51"
	GUIName:	"Script"
	Win:	1831
	CSMgr:	1832
	DocExts:	1833
	Source:	"av.Run(\"AVExtAdvEditor.ToolCurvePolygon\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1831
	Owner:	1830
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1832
)

(DocAct.1833
	Doc:	1830
)

(SEd.1834
	Name:	"AVExtAdvEditor.ToolCurvePolygonStart"
	CreationDate:	"22 Июнь 2004 г. 22:10:47"
	GUIName:	"Script"
	Win:	1835
	CSMgr:	1836
	DocExts:	1837
	Source:	"if (_AVExtAdvEditorStartSnapPan.Not) then\n  if (System.IsDoubleClick) then\n    av.DelayedRun(\"AVExtAdvEditor.ToolDrawingStop\",nil,0)\n  else\n    if (_AVExtAdvEditorScratchList = nil) then\n      _AVExtAdvEditorScratchListPart = false\n      _AVExtAdvEditorScratchList = List.Make\n      adis = _AVExtAdvEditorView.getdisplay\n      agrlist = _AVExtAdvEditorView.getgraphics\n      if (_AVExtAdvEditoraptS = nil) then\n        _AVExtAdvEditoraptS = adis.returnuserpoint\n      else\n        _AVExtAdvEditorapt = adis.retur
nuserpoint\n      end\n      _AVExtAdvEditorScratchList.Add({_AVExtAdvEditoraptS.Clone,\"line\"})\n      if (_AVExtAdvEditorShowVer) then\n        aVertex = GraphicShape.Make(_AVExtAdvEditoraptS.Clone)\n        aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n        aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n        aVertex.SetObjectTag(0)\n        agrlist.Add(aVertex)    \n      end\n      _AVExtAdvEditoraptS = nil\n    end\n    if (_AVExtAdvEditorClick = nil) then\n      _AVExtAdvEditorClick = 2\n      av.Run(\"AVExtAdvEdit
or.ToolCurvePolygon\",nil)\n    else\n      _AVExtAdvEditorClick = 1\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1835
	Owner:	1834
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1836
)

(DocAct.1837
	Doc:	1834
)

(SEd.1838
	Name:	"AVExtAdvEditor.ToolCurvePolyline"
	CreationDate:	"6 Май 2004 г. 3:02:33"
	GUIName:	"Script"
	Win:	1839
	CSMgr:	1840
	DocExts:	1841
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScratchList <> nil) then\n  if (_AVExtAdvEditorView = av.Getactivedoc) then\n    if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AECurve\").IsSelected) then\n      if ((_AVExtAdvEditorDrawClass = \"polyline\") or (_AVExtAdvEditorDrawClass = \"multi\")) then\n        apt = _AVExtAdvEditorView.getdisplay.returnuserpoint\n        if (_AVExtAdvEditorPan) then\n          aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n          aDi
sapt = aViewRect.GetWidth / 100\n          if (aViewRect.AsPolygon.AsPolyline.Distance(apt).Abs < aDisapt) then\n            aptpan = Polyline.Make({{aViewRect.ReturnCenter,apt}}).Along(10)\n            _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n          end\n        end\n        if (apt <> _AVExtAdvEditoraptL) then\n          _AVExtAdvEditoraptL = apt.Clone\n          _AVExtAdvEditorapt = apt.Clone\n          aSnapReal = 0\n          if (_AVExtAdvEditorSnapEnb) then\n            if (_AVExtAdvEditorSnapTU = \"pixel
s\") then\n              aSnapTolerance = (_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.GetWin.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\n            else\n              aSnapTolerance = _AVExtAdvEditorSnapT\n            end\n            aListK = _AVExtAdvEditorView.GetThemes\n            for each aThemeView in aLIstK  \n              aListE = _AVExtAdvEditorListSnap.Get(aThemeView)\n              if (aListE <> nil) then\n                for each aT
hemeSnapeI in 0..3\n                  aThemeSnape = aListE.Get(aThemeSnapeI)\n                  if (aThemeSnape <> 0) then\n                    aUserSnapPoint = _AVExtAdvEditorapt.Clone\n                    aThemeView.SetInteractiveSnapTolerance(aSnapTolerance)\n                    if (aThemeSnapeI = 0) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_VERTEX,aUserSnapPoint)\n                    elseif (aThemeSnapeI = 1) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_BOUNDARY,aUserS
napPoint)\n                    elseif (aThemeSnapeI = 2) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_ENDPOINT,aUserSnapPoint)\n                    else\n                      aThemeView.UserSnapPoint(#POINT_SNAP_INTERSECTION,aUserSnapPoint)\n                    end\n                    if (aUserSnapPoint <> _AVExtAdvEditorapt) then\n                      _AVExtAdvEditorapt = aUserSnapPoint.Clone\n                      aSnapReal = 1\n                      break\n                    end\n           
       end\n                end\n              end\n              if (aSnapReal = 1) then\n                if (_AVExtAdvEditorSnapOff <> 0) then\n                  aDis1 = _AVExtAdvEditorapt.Distance(apt)\n                  aptPx = apt.GetX - _AVExtAdvEditorapt.GetX\n                  aptPy = apt.GetY - _AVExtAdvEditorapt.GetY\n                  aCosA = aptPx / aDis1.Abs\n                  aSinA = aptPy / aDis1.Abs\n                  aNewPx = _AVExtAdvEditorSnapOff * aCosA\n                  aNewPy = _AVExtAdvEditorSn
apOff * aSinA\n                  aNewPtX = aNewPx + _AVExtAdvEditorapt.GetX\n                  aNewPtY = aNewPy + _AVExtAdvEditorapt.GetY\n                  _AVExtAdvEditorapt = aNewPtX@aNewPtY\n                end\n                break\n              end\n            end\n          end        \n          if (_AVExtAdvEditorShowCurP) then\n            if (_AVExtAdvEditorCurGr = nil) then\n              _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.SetName(\"_AVEx
tAdvEditorCurGr\")\n              if (aSnapReal = 1) then\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              else\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n              end\n              agrlist.Add(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr.invalidate\n            end\n            if (aSnapReal = 1) then\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            else\n              _AVExtAdvEditorCurGr.SetSym
bol(_AVExtAdvEditorScratchP2)\n            end\n            _AVExtAdvEditorCurGr.invalidate\n            _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.clone)\n            _AVExtAdvEditorCurGr.invalidate\n          else\n            if (aSnapReal = 1) then\n              if (_AVExtAdvEditorCurGr = nil) then\n                _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdv
EditorScratchP)\n                agrlist.Add(_AVExtAdvEditorCurGr)\n                _AVExtAdvEditorCurGr.invalidate\n              end\n              _AVExtAdvEditorCurGr.invalidate\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.invalidate\n            else\n              if (_AVExtAdvEditorCurGr <> nil) then\n                agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n                _AV
ExtAdvEditorCurGr = nil\n              end\n            end\n          end\n          if (_AVExtAdvEditorScratchListPart) then\n            if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) = \"Part\") then\n              adrsh = PolyLine.MakeEmpty\n            else\n              adrshlist = list.make \n              adrshlist.add(_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.count - 1).Get(0).Clone)\n              adrshlist.add(_AVExtAdvEditorapt.clone)\n              adrsh = 
Polyline.Make({adrshlist})\n            end\n          else        \n            adrshlist = list.make \n            adrshlist.add(_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.count - 1).Get(0).Clone)\n            adrshlist.add(_AVExtAdvEditorapt.clone)\n            adrsh = Polyline.Make({adrshlist})\n          end\n          if (_AVExtAdvEditorScrathGrMouse = nil) then\n            _AVExtAdvEditorScrathGrMouse = GraphicShape.Make(adrsh)\n            _AVExtAdvEditorScrathGrMouse.SetName(\"_AVExtAdvEditorS
crathGrMouse\")\n            _AVExtAdvEditorScrathGrMouse.SetSymbol(_AVExtAdvEditorScratchLE)\n            agrlist.Add(_AVExtAdvEditorScrathGrMouse)\n            _AVExtAdvEditorScrathGrMouse.invalidate\n          end\n          _AVExtAdvEditorScrathGrMouse.invalidate\n          _AVExtAdvEditorScrathGrMouse.SetShape(adrsh)\n          _AVExtAdvEditorScrathGrMouse.invalidate\n        end\n        if (System.IsDoubleClick) then\n          av.Run(\"AVExtAdvEditor.ToolDrawingStop\",nil)\n        elseif (_AVExtAdvEditorClick = 
1) then\n          _AVExtAdvEditorClick = nil\n          if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.Pan\n          elseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          else\n            if (_AVExtAdvEditorScratchListPart) then\n              if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) = \"Part\") then\n                _AVExtAdvEditorSc
ratchListPartPoint = _AVExtAdvEditorapt.clone\n                _AVExtAdvEditorScratchList.add({_AVExtAdvEditorapt.clone,\"line\"})\n                aVertexAdded = 1\n              else\n                aCurveAdd = Polyline.Make({{_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0),_AVExtAdvEditorapt}})\n                aCurveP1 = aCurveAdd.Along(40)\n                aCurveP2 = aCurveAdd.Along(60)\n                _AVExtAdvEditorScratchList.add({_AVExtAdvEditorapt.clone,\"curve\",aCurveP1,aCurve
P2})\n                aVertexAdded = 0\n                av.Run(\"AVExtAdvEditor.ToolDrawing\",nil)\n              end            \n            else            \n              aCurveAdd = Polyline.Make({{_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0),_AVExtAdvEditorapt}})\n              aCurveP1 = aCurveAdd.Along(40)\n              aCurveP2 = aCurveAdd.Along(60)\n              _AVExtAdvEditorScratchList.add({_AVExtAdvEditorapt.clone,\"curve\",aCurveP1,aCurveP2})\n              aVertexAdded = 
0\n              av.Run(\"AVExtAdvEditor.ToolDrawing\",nil)\n            end\n            if (_AVExtAdvEditorShowVer) then\n              if (aVertexAdded = 0) then\n                aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n                if (aVertexEnd <> nil) then\n                  if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertexCurve\")\n                  else\n                    aVertexEn
d.SetName(\"AVExtAdvEditorVertex\")\n                  end\n                  aVertexEnd.invalidate\n                  aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n                  aVertexEnd.invalidate\n                  aVertex = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                  aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n                  aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n                  aVertex.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n                  agrlist.Add(aVertex)\n   
               aVertex1 = GraphicShape.Make(_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(2).Clone)\n                  aVertex1.SetName(\"AVExtAdvEditorVertexCurveP1\")\n                  aVertex1.SetSymbol(_AVExtAdvEditorVertexArc)\n                  aVertex1.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n                  agrlist.Add(aVertex1)\n                  aVertex2 = GraphicShape.Make(_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(3).Clone)\n        
          aVertex2.SetName(\"AVExtAdvEditorVertexCurveP2\")\n                  aVertex2.SetSymbol(_AVExtAdvEditorVertexArc)\n                  aVertex2.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n                  agrlist.Add(aVertex2)\n                end\n              else\n                aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n                if (aVertexEnd <> nil) then\n                  if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n 
                   aVertexEnd.SetName(\"AVExtAdvEditorVertexCurve\")\n                  else\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n                  end\n                  aVertexEnd.invalidate\n                  aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n                  aVertexEnd.invalidate\n                  aVertex = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                  aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n                  aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n
                  aVertex.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n                  agrlist.Add(aVertex)\n                end\n              end\n            end\n            if (_AVExtAdvEditorPanClick) then\n              _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n            end\n          end\n          av.DelayedRun(\"AVExtAdvEditor.ToolCurvePolylineStart\",nil,0)\n        else\n          av.DelayedRun(\"AVExtAdvEditor.ToolCurvePolylineEnd\",nil,0)\n        end\n      else\n        _AVExtAdvEd
itorClick = nil\n        if (_AVExtAdvEditorScrathGrMouse <> nil) then\n          agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n        end\n        _AVExtAdvEditorScrathGrMouse = nil\n        if (_AVExtAdvEditorCurGr <> nil) then\n           agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n        end\n        _AVExtAdvEditorCurGr = nil\n        _AVExtAdvEditoraptL = nil\n        _AVExtAdvEditorapt = nil\n      end\n    else\n      _AVExtAdvEditorClick = nil\n      if (_AVExtAdvEditorScrathGrMouse <> nil) then\n      
  agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n      end\n      _AVExtAdvEditorScrathGrMouse = nil\n      if (_AVExtAdvEditorCurGr <> nil) then\n         agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n      end\n      _AVExtAdvEditorCurGr = nil\n      _AVExtAdvEditoraptL = nil\n      _AVExtAdvEditorapt = nil\n    end\n  else\n    _AVExtAdvEditorClick = nil\n    if (_AVExtAdvEditorScrathGrMouse <> nil) then\n      agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n    end\n    _AVExtAdvEditorScrathGrMouse = nil\n   
 if (_AVExtAdvEditorCurGr <> nil) then\n       agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n    end\n    _AVExtAdvEditorCurGr = nil\n    _AVExtAdvEditoraptL = nil\n    _AVExtAdvEditorapt = nil\n  end\nelse\n  _AVExtAdvEditorClick = nil\n  if (_AVExtAdvEditorScrathGrMouse <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n  end\n  _AVExtAdvEditorScrathGrMouse = nil\n  if (_AVExtAdvEditorCurGr <> nil) then\n     agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n  end\n  if (_AVExtAdvEditorScrathGr <> nil) then
\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGr)\n  end\n  _AVExtAdvEditorScrathGr = nil\n  _AVExtAdvEditorCurGr = nil\n  _AVExtAdvEditoraptL = nil\n  _AVExtAdvEditorapt = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1839
	Owner:	1838
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1840
)

(DocAct.1841
	Doc:	1838
)

(SEd.1842
	Name:	"AVExtAdvEditor.ToolCurvePolylineClick"
	CreationDate:	"7 Май 2004 г. 4:05:32"
	GUIName:	"Script"
	Win:	1843
	CSMgr:	1844
	DocExts:	1845
	Source:	"if (_AVExtAdvEditorScratchList <> nil) then\n  aNum = _AVExtAdvEditorScratchList.Count - 1\n  if (_AVExtAdvEditorScratchList.Get(aNum).Get(0) = nil) then\n    _AVExtAdvEditorScratchList.Remove(aNum)\n  end\n  if (_AVExtAdvEditorShowVer.Not) then\n    agrlist = _AVExtAdvEditorView.getgraphics\n    aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorVertex\")\n    if (aListVertex <> nil) then\n      for each iaListVertex in aListVertex\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexEnd = ag
rlist.FindAllByName(\"AVExtAdvEditorVertexEnd\")\n    if (aListVertexEnd <> nil) then\n      for each iaListVertexEnd in aListVertexEnd\n        agrlist.RemoveGraphic(iaListVertexEnd)\n      end\n    end\n    aListVertexCurve = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurve\")\n    if (aListVertexCurve <> nil) then\n      for each iaListVertex in aListVertexCurve\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexCurveP1 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP1\")\n    if (aListVe
rtexCurveP1 <> nil) then\n      for each iaListVertex in aListVertexCurveP1\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexCurveP2 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP2\")\n    if (aListVertexCurveP2 <> nil) then\n      for each iaListVertex in aListVertexCurveP2\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n  end\nelse\n  if (_AVExtAdvEditorStartSnapRun.Not) then\n    av.Run(\"AVExtAdvEditor.StartSnapPointEnd\",nil)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1843
	Owner:	1842
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1844
)

(DocAct.1845
	Doc:	1842
)

(SEd.1846
	Name:	"AVExtAdvEditor.ToolCurvePolylineEnd"
	CreationDate:	"6 Май 2004 г. 3:07:20"
	GUIName:	"Script"
	Win:	1847
	CSMgr:	1848
	DocExts:	1849
	Source:	"av.Run(\"AVExtAdvEditor.ToolCurvePolyline\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1847
	Owner:	1846
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1848
)

(DocAct.1849
	Doc:	1846
)

(SEd.1850
	Name:	"AVExtAdvEditor.ToolCurvePolylineStart"
	CreationDate:	"6 Май 2004 г. 3:05:56"
	GUIName:	"Script"
	Win:	1851
	CSMgr:	1852
	DocExts:	1853
	Source:	"if (_AVExtAdvEditorStartSnapPan.Not) then\n  if (System.IsDoubleClick) then\n    av.DelayedRun(\"AVExtAdvEditor.ToolDrawingStop\",nil,0)\n  else\n    if (_AVExtAdvEditorScratchList = nil) then\n      _AVExtAdvEditorScratchListPart = false\n      _AVExtAdvEditorScratchList = List.Make\n      adis = _AVExtAdvEditorView.getdisplay\n      agrlist = _AVExtAdvEditorView.getgraphics\n      if (_AVExtAdvEditoraptS = nil) then\n        _AVExtAdvEditoraptS = adis.returnuserpoint\n      else\n        _AVExtAdvEditorapt = adis.retur
nuserpoint\n      end\n      _AVExtAdvEditorScratchList.Add({_AVExtAdvEditoraptS.Clone,\"line\"})\n      if (_AVExtAdvEditorShowVer) then\n        aVertex = GraphicShape.Make(_AVExtAdvEditoraptS.Clone)\n        aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n        aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n        aVertex.SetObjectTag(0)\n        agrlist.Add(aVertex)    \n      end\n      _AVExtAdvEditoraptS = nil\n    end\n    if (_AVExtAdvEditorClick = nil) then\n      _AVExtAdvEditorClick = 2\n      av.Run(\"AVExtAdvEdit
or.ToolCurvePolyline\",nil)\n    else\n      _AVExtAdvEditorClick = 1\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1851
	Owner:	1850
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1852
)

(DocAct.1853
	Doc:	1850
)

(SEd.1854
	Name:	"AVExtAdvEditor.ToolCurveUpd"
	CreationDate:	"22 Июнь 2004 г. 22:01:35"
	GUIName:	"Script"
	Win:	1855
	CSMgr:	1856
	DocExts:	1857
	Source:	"self.SetEnabled(true)\naTask = av.FindDialog(\"AVExtAdvEditor.Task\").FindByName(\"aCBTask\").GetCurrentValue\nif (aTask = \"Create New Feature\") then\n  if (_AVExtAdvEditorTheme = nil) then\n    self.SetEnabled(false)\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n        self.SetApply(\"AVExtAdvEditor.ToolCurvePolygonStart\")\n        _AVExtAdvEditorDrawClass = \"polygon\"\n      elseif (_AVExtAdvEditorTheme.GetFTab.
FindField(\"Shape\").GetType = #FIELD_SHAPELINE) then\n        self.SetApply(\"AVExtAdvEditor.ToolCurvePolylineStart\")\n        _AVExtAdvEditorDrawClass = \"polyline\"\n      elseif (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEMULTIPOINT) then\n        self.SetApply(\"AVExtAdvEditor.ToolCurvePolylineStart\")\n        _AVExtAdvEditorDrawClass = \"multi\"\n      elseif (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOINT) then\n        self.SetEnabled(false)\n        _AVExtAdv
EditorDrawClass = \"point\"\n      end\n    else\n      self.SetEnabled(false)\n    end\n  end\nelseif (aTask = \"Auto Complete Polygon\") then\n  if (_AVExtAdvEditorTheme = nil) then\n    self.SetEnabled(false)\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n        self.SetApply(\"AVExtAdvEditor.ToolCurvePolylineStart\")\n        _AVExtAdvEditorDrawClass = \"polyline\"\n      else\n        self.SetEnabled(false)\n      end
\n    else\n      self.SetEnabled(false)\n    end\n  end\nelseif (aTask = \"Cut Polygon\") then\n  if (_AVExtAdvEditorTheme = nil) then\n    self.SetEnabled(false)\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n        self.SetApply(\"AVExtAdvEditor.ToolCurvePolylineStart\")\n        _AVExtAdvEditorDrawClass = \"polyline\"\n      else\n        self.SetEnabled(false)\n      end\n    else\n      self.SetEnabled(false)\n    en
d\n  end\nelseif (aTask = \"Split Polyline\") then\n  if (_AVExtAdvEditorTheme = nil) then\n    self.SetEnabled(false)\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPELINE) then\n        self.SetApply(\"AVExtAdvEditor.ToolCurvePolylineStart\")\n        _AVExtAdvEditorDrawClass = \"polyline\"\n      else\n        self.SetEnabled(false)\n      end\n    else\n      self.SetEnabled(false)\n    end\n  end  \nelseif (aTask = \"Modify Feature\"
) then\n  \nelseif (aTask = \"Resape Feature\") then\n  self.SetApply(\"AVExtAdvEditor.ToolCurvePolylineStart\")\n  _AVExtAdvEditorDrawClass = \"polyline\"\n  aValid = false\n  aTL = _AVExtAdvEditorList.ReturnKeys\n  for each i in aTL\n    if (_AVExtAdvEditorList.Get(i) = 1) then\n      if (i.GetFTab.IsEditable) then\n        if ((i.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) or (i.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPELINE)) then\n          if (i.GetFTab.GetSelection.Count > 0) then\n            aValid
 = true\n            break\n          end\n        end\n      end\n    end\n  end\n  self.setenabled(aValid)\nelseif (aTask = \"Select Features Using an Area\") then\n  self.SetApply(\"AVExtAdvEditor.ToolCurvePolygonStart\")\n  _AVExtAdvEditorDrawClass = \"polygon\"\nelseif (aTask = \"Select Features Using a Line\") then\n  self.SetApply(\"AVExtAdvEditor.ToolCurvePolylineStart\")\n  _AVExtAdvEditorDrawClass = \"polyline\"\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1855
	Owner:	1854
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1856
)

(DocAct.1857
	Doc:	1854
)

(SEd.1858
	Name:	"AVExtAdvEditor.ToolDrawing"
	CreationDate:	"11 Май 2004 г. 0:30:03"
	GUIName:	"Script"
	Win:	1859
	CSMgr:	1860
	DocExts:	1861
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nadrgraddShL = {}\nadrgraddShLL = {}\niSLN = 0\naddPartPoint =  _AVExtAdvEditorScratchList.Get(0).Get(0)\nfor each iSL in _AVExtAdvEditorScratchList\n  addPart = true\n  if (iSL.Get(1) = \"line\") then\n    adrgraddShL.Add(iSL.Get(0).Clone)\n  elseif (iSL.Get(1) = \"Stream\") then\n    adrgraddShL.Add(iSL.Get(0).Clone)\n  elseif (iSL.Get(1) = \"Curve\") then\n    P0 = _AVExtAdvEditorScratchList.Get(iSLN - 1).Get(0)\n    P1 = iSL.Get(2)\n    P2 = iSL.Get(3)\n    P3 = iSL.Get(0)\n    for e
ach t in 0..1 by _AVExtAdvEditorCurveT\n      Ptx = (((1 - t) ^ 3) * P0.GetX) + ((3 * t * ((1 - t) ^ 2)) * P1.GetX) + ((3 * (t ^ 2) * (1 - t)) * P2.GetX) + ((t ^ 3) * P3.GetX)\n      Pty = (((1 - t) ^ 3) * P0.GetY) + ((3 * t * ((1 - t) ^ 2)) * P1.GetY) + ((3 * (t ^ 2) * (1 - t)) * P2.GetY) + ((t ^ 3) * P3.GetY)\n      adrgraddShL.Add(Ptx@Pty)\n    end\n  elseif (iSL.Get(0) = \"Part\") then      \n    adrgraddShLL.Add(adrgraddShL.Clone)\n    adrgraddShL = {}\n    addPart = false\n  end\n  if (iSLN = (_AVExtAdvEditorScra
tchList.Count - 1)) then\n    if (addPart) then\n      if (adrgraddShL.Count > 1) then\n        adrgraddShLL.Add(adrgraddShL.Clone)\n      end\n    end\n  end\n  iSLN = iSLN + 1\nend          \nadrgraddSh = Polyline.Make(adrgraddShLL)\nif (_AVExtAdvEditorScrathGr = nil) then    \n  _AVExtAdvEditorScrathGr = GraphicShape.Make(adrgraddSh)\n  _AVExtAdvEditorScrathGr.SetName(\"_AVExtAdvEditorScrathGr\")\n  _AVExtAdvEditorScrathGr.SetSymbol(_AVExtAdvEditorScratchL)\n  agrlist.Add(_AVExtAdvEditorScrathGr)\n  _AVExtAdvEditorScrath
Gr.invalidate\nend\n_AVExtAdvEditorScrathGr.invalidate\n_AVExtAdvEditorScrathGr.SetShape(adrgraddSh)\n_AVExtAdvEditorScrathGr.invalidate\n"
	SearchStr:	"NotEditNumV"
)

(DocWin.1859
	Owner:	1858
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1860
)

(DocAct.1861
	Doc:	1858
)

(SEd.1862
	Name:	"AVExtAdvEditor.ToolDrawingPolygon"
	CreationDate:	"20 Июнь 2004 г. 5:04:18"
	GUIName:	"Script"
	Win:	1863
	CSMgr:	1864
	DocExts:	1865
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nadrgraddShL = {}\nadrgraddShLL = {}\niSLN = 0\nfor each iSL in _AVExtAdvEditorScratchList\n  addPart = true\n  if (iSL.Get(1) = \"line\") then\n    adrgraddShL.Add(iSL.Get(0).Clone)\n  elseif (iSL.Get(1) = \"Stream\") then\n    adrgraddShL.Add(iSL.Get(0).Clone)\n  elseif (iSL.Get(1) = \"Curve\") then\n    P0 = _AVExtAdvEditorScratchList.Get(iSLN - 1).Get(0)\n    P1 = iSL.Get(2)\n    P2 = iSL.Get(3)\n    P3 = iSL.Get(0)\n    for each t in 0..1 by _AVExtAdvEditorCurveT\n      Ptx = (((1 -
 t) ^ 3) * P0.GetX) + ((3 * t * ((1 - t) ^ 2)) * P1.GetX) + ((3 * (t ^ 2) * (1 - t)) * P2.GetX) + ((t ^ 3) * P3.GetX)\n      Pty = (((1 - t) ^ 3) * P0.GetY) + ((3 * t * ((1 - t) ^ 2)) * P1.GetY) + ((3 * (t ^ 2) * (1 - t)) * P2.GetY) + ((t ^ 3) * P3.GetY)\n      adrgraddShL.Add(Ptx@Pty)\n    end\n  elseif (iSL.Get(0) = \"Part\") then\n    aPartNumber = 0\n    if (_AVExtAdvEditorScratchListPartNumber.FindByValue(iSLN) = 0) then\n      aPartNumber = 0\n    else\n      aPartNumber = _AVExtAdvEditorScratchListPartNumber.Ge
t(_AVExtAdvEditorScratchListPartNumber.FindByValue(iSLN) - 1) + 1\n    end\n    adrgraddShL.Add(_AVExtAdvEditorScratchList.Get(aPartNumber).Get(0))\n    adrgraddShLL.Add(adrgraddShL.Clone)\n    adrgraddShL = {}\n    addPart = false\n  end\n  if (iSLN = (_AVExtAdvEditorScratchList.Count - 1)) then\n    if (addPart) then\n      if (adrgraddShL.Count > 1) then\n        adrgraddShLL.Add(adrgraddShL.Clone)\n      end\n    end\n  end\n  iSLN = iSLN + 1\nend          \nadrgraddSh = Polyline.Make(adrgraddShLL)\nif (_AVExtAdvEditorS
crathGr = nil) then    \n  _AVExtAdvEditorScrathGr = GraphicShape.Make(adrgraddSh)\n  _AVExtAdvEditorScrathGr.SetName(\"_AVExtAdvEditorScrathGr\")\n  _AVExtAdvEditorScrathGr.SetSymbol(_AVExtAdvEditorScratchL)\n  agrlist.Add(_AVExtAdvEditorScrathGr)\n  _AVExtAdvEditorScrathGr.invalidate\nend\n_AVExtAdvEditorScrathGr.invalidate\n_AVExtAdvEditorScrathGr.SetShape(adrgraddSh)\n_AVExtAdvEditorScrathGr.invalidate"
	SearchStr:	"NotEditNumV"
)

(DocWin.1863
	Owner:	1862
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1864
)

(DocAct.1865
	Doc:	1862
)

(SEd.1866
	Name:	"AVExtAdvEditor.ToolDrawingStop"
	CreationDate:	"30 Апрель 2004 г. 2:35:57"
	GUIName:	"Script"
	Win:	1867
	CSMgr:	1868
	DocExts:	1869
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScrathGrMouse <> nil) then\n  agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\nend\nif (_AVExtAdvEditorScrathGr <> nil) then\n  agrlist.RemoveGraphic(_AVExtAdvEditorScrathGr)\nend\nif (_AVExtAdvEditorCurGr <> nil) then\n  agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\nend\naListVertex = agrlist.FindAllByName(\"AVExtAdvEditorVertex\")\nif (aListVertex <> nil) then\n  for each iaListVertex in aListVertex\n    agrlist.RemoveGraphic(iaListVertex)\n  end\nend\naListV
ertexEnd = agrlist.FindAllByName(\"AVExtAdvEditorVertexEnd\")\nif (aListVertexEnd <> nil) then\n  for each iaListVertexEnd in aListVertexEnd\n    agrlist.RemoveGraphic(iaListVertexEnd)\n  end\nend\naListVertexCurve = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurve\")\nif (aListVertexCurve <> nil) then\n  for each iaListVertex in aListVertexCurve\n    agrlist.RemoveGraphic(iaListVertex)\n  end\nend\naListVertexCurveP1 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP1\")\nif (aListVertexCurveP1 <> nil) then\n  for each iaL
istVertex in aListVertexCurveP1\n    agrlist.RemoveGraphic(iaListVertex)\n  end\nend\naListVertexCurveP2 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP2\")\nif (aListVertexCurveP2 <> nil) then\n  for each iaListVertex in aListVertexCurveP2\n    agrlist.RemoveGraphic(iaListVertex)\n  end\nend\nif (_AVExtAdvEditorScratchList <> nil) then\n  aNum = _AVExtAdvEditorScratchList.Count - 1\n  if (_AVExtAdvEditorScratchList.Get(aNum).Get(0) = nil) then\n    _AVExtAdvEditorScratchList.Remove(aNum)\n  end\n  adrgraddShL = {}\n  a
drgraddShLL = {}\n  iSLN = 0\n  addPartPoint =  _AVExtAdvEditorScratchList.Get(0).Get(0)\n  for each iSL in _AVExtAdvEditorScratchList\n    addPart = true\n    if (iSL.Get(1) = \"line\") then\n      adrgraddShL.Add(iSL.Get(0).Clone)\n    elseif (iSL.Get(1) = \"Stream\") then\n      adrgraddShL.Add(iSL.Get(0).Clone)\n    elseif (iSL.Get(1) = \"Curve\") then\n      P0 = _AVExtAdvEditorScratchList.Get(iSLN - 1).Get(0)\n      P1 = iSL.Get(2)\n      P2 = iSL.Get(3)\n      P3 = iSL.Get(0)\n      for each t in 0..1 by _AVExtAdvEditor
CurveT\n        Ptx = (((1 - t) ^ 3) * P0.GetX) + ((3 * t * ((1 - t) ^ 2)) * P1.GetX) + ((3 * (t ^ 2) * (1 - t)) * P2.GetX) + ((t ^ 3) * P3.GetX)\n        Pty = (((1 - t) ^ 3) * P0.GetY) + ((3 * t * ((1 - t) ^ 2)) * P1.GetY) + ((3 * (t ^ 2) * (1 - t)) * P2.GetY) + ((t ^ 3) * P3.GetY)\n        adrgraddShL.Add(Ptx@Pty)\n      end\n    elseif (iSL.Get(0) = \"Part\") then             \n      adrgraddShLL.Add(adrgraddShL.Clone)\n      adrgraddShL = {}\n      addPart = false\n    end\n    if (iSLN = (_AVExtAdvEditorScratchLi
st.Count - 1)) then\n      if (addPart) then\n        if (adrgraddShL.Count > 1) then\n          adrgraddShLL.Add(adrgraddShL.Clone)\n        end\n      end\n    end\n    iSLN = iSLN + 1\n  end\nend \naTask = av.FindDialog(\"AVExtAdvEditor.Task\").FindByName(\"aCBTask\").GetCurrentValue\nif (aTask = \"Create New Feature\") then\n  if (_AVExtAdvEditorScratchList <> nil) then\n    _AVExtAdvEditorScratchRestore = {_AVExtAdvEditorScratchList,_AVExtAdvEditorScratchListPartNumber,\n                                   _AVExtAdvEditorS
cratchListPart,_AVExtAdvEditorScratchListPartPoint}\n  end\n  if (_AVExtAdvEditorTheme = nil) then\n    msgbox.warning(\"Select Target Theme!\",\"warning\")\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n      if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n        adrgraddSh = Polygon.Make(adrgraddShLL)\n        _AVExtAdvEditorTheme.GetFtab.BeginTransaction\n        thePrj = _AVExtAdvEditorView.GetProjection\n        if (thePrj.IsNull.Not) then\n          adrgraddSh 
= adrgraddSh.ReturnUnprojected(thePrj)\n        end\n        theField = _AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\")\n        rec = _AVExtAdvEditorTheme.GetFTab.AddRecord\n        _AVExtAdvEditorTheme.GetFTab.SetValue(theField, rec,adrgraddSh)\n        _AVExtAdvEditorTheme.GetFTab.GetSelection.ClearAll\n        _AVExtAdvEditorTheme.GetFTab.GetSelection.Set(rec)\n        _AVExtAdvEditorTheme.GetFTab.UpdateSelection\n        _AVExtAdvEditorTheme.GetFtab.EndTransaction\n      else\n         msgbox.warning(\"Target The
me Is Not Editable!\",\"warning\")\n      end        \n    elseif (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPELINE) then\n      if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n        adrgraddSh = Polyline.Make(adrgraddShLL)\n        _AVExtAdvEditorTheme.GetFtab.BeginTransaction\n        thePrj = _AVExtAdvEditorView.GetProjection\n        if (thePrj.IsNull.Not) then\n          adrgraddSh = adrgraddSh.ReturnUnprojected(thePrj)\n        end\n        theField = _AVExtAdvEditorTheme.GetFTab.Fin
dField(\"Shape\")\n        rec = _AVExtAdvEditorTheme.GetFTab.AddRecord\n        _AVExtAdvEditorTheme.GetFTab.SetValue(theField, rec,adrgraddSh)\n        _AVExtAdvEditorTheme.GetFTab.GetSelection.ClearAll\n        _AVExtAdvEditorTheme.GetFTab.GetSelection.Set(rec)\n        _AVExtAdvEditorTheme.GetFTab.UpdateSelection\n        _AVExtAdvEditorTheme.GetFtab.EndTransaction\n      else\n         msgbox.warning(\"Target Theme Is Not Editable!\",\"warning\")\n      end \n    elseif (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\")
.GetType = #FIELD_SHAPEMULTIPOINT) then\n      if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n        adrgraddSh = MultiPoint.Make(adrgraddShLL.Get(0))\n        _AVExtAdvEditorTheme.GetFtab.BeginTransaction\n        thePrj = _AVExtAdvEditorView.GetProjection\n        if (thePrj.IsNull.Not) then\n          adrgraddSh = adrgraddSh.ReturnUnprojected(thePrj)\n        end\n        theField = _AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\")\n        rec = _AVExtAdvEditorTheme.GetFTab.AddRecord\n        _AVExtAdvEditorTh
eme.GetFTab.SetValue(theField, rec,adrgraddSh)\n        _AVExtAdvEditorTheme.GetFTab.GetSelection.ClearAll\n        _AVExtAdvEditorTheme.GetFTab.GetSelection.Set(rec)\n        _AVExtAdvEditorTheme.GetFTab.UpdateSelection\n        _AVExtAdvEditorTheme.GetFtab.EndTransaction\n      else\n         msgbox.warning(\"Target Theme Is Not Editable!\",\"warning\")\n      end \n    elseif (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOINT) then\n      if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n   
     adrgraddSh = self.clone\n        _AVExtAdvEditorTheme.GetFtab.BeginTransaction\n        thePrj = _AVExtAdvEditorView.GetProjection\n        if (thePrj.IsNull.Not) then\n          adrgraddSh = adrgraddSh.ReturnUnprojected(thePrj)\n        end\n        theField = _AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\")\n        rec = _AVExtAdvEditorTheme.GetFTab.AddRecord\n        _AVExtAdvEditorTheme.GetFTab.SetValue(theField, rec,adrgraddSh)\n        _AVExtAdvEditorTheme.GetFTab.GetSelection.ClearAll\n        _AVExtAdvEd
itorTheme.GetFTab.GetSelection.Set(rec)\n        _AVExtAdvEditorTheme.GetFTab.UpdateSelection\n        _AVExtAdvEditorTheme.GetFtab.EndTransaction\n      else\n         msgbox.warning(\"Target Theme Is Not Editable!\",\"warning\")\n      end\n    end\n  end\nelseif (aTask = \"Auto Complete Polygon\") then\n  if (_AVExtAdvEditorScratchList <> nil) then\n    _AVExtAdvEditorScratchRestore = {_AVExtAdvEditorScratchList,_AVExtAdvEditorScratchListPartNumber,\n                                   _AVExtAdvEditorScratchListPart,_AVEx
tAdvEditorScratchListPartPoint}\n  end\n  if (_AVExtAdvEditorTheme = nil) then\n    msgbox.warning(\"Select Target Theme!\",\"warning\")\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n      if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n        adrgraddSh = Polyline.Make(adrgraddShLL)\n        _AVExtAdvEditorTheme.GetFtab.BeginTransaction\n        _AVExtAdvEditorTheme.AutoComplete(adrgraddSh)\n        _AVExtAdvEditorTheme.GetFtab.EndTransaction\n      else\n         m
sgbox.warning(\"Target Theme Is Not Editable!\",\"warning\")\n      end \n    else\n      msgbox.warning(\"Select Target Theme!\",\"warning\")\n    end\n  end\nelseif (aTask = \"Cut Polygon\") then\n  if (_AVExtAdvEditorScratchList <> nil) then\n    _AVExtAdvEditorScratchRestore = {_AVExtAdvEditorScratchList,_AVExtAdvEditorScratchListPartNumber,\n                                   _AVExtAdvEditorScratchListPart,_AVExtAdvEditorScratchListPartPoint}\n  end\n  if (_AVExtAdvEditorTheme = nil) then\n    msgbox.warning(\"Select Target 
Theme!\",\"warning\")\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n      if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n        adrgraddSh = Polyline.Make(adrgraddShLL)\n        _AVExtAdvEditorTheme.GetFtab.BeginTransaction\n        _AVExtAdvEditorTheme.Split(adrgraddSh)\n        _AVExtAdvEditorTheme.GetFtab.EndTransaction\n      else\n         msgbox.warning(\"Target Theme Is Not Editable!\",\"warning\")\n      end\n    else\n      msgbox.warning(\"Select Target Theme!
\",\"warning\")\n    end\n  end\nelseif (aTask = \"Split Polyline\") then\n  if (_AVExtAdvEditorScratchList <> nil) then\n    _AVExtAdvEditorScratchRestore = {_AVExtAdvEditorScratchList,_AVExtAdvEditorScratchListPartNumber,\n                                   _AVExtAdvEditorScratchListPart,_AVExtAdvEditorScratchListPartPoint}\n  end\n  if (_AVExtAdvEditorTheme = nil) then\n    msgbox.warning(\"Select Target Theme!\",\"warning\")\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPELINE) then\n 
     if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n        adrgraddSh = Polyline.Make(adrgraddShLL)\n        _AVExtAdvEditorTheme.GetFtab.BeginTransaction\n        _AVExtAdvEditorTheme.Split(adrgraddSh)\n        _AVExtAdvEditorTheme.GetFtab.EndTransaction\n      else\n         msgbox.warning(\"Target Theme Is Not Editable!\",\"warning\")\n      end\n    else\n      msgbox.warning(\"Select Target Theme!\",\"warning\")\n    end\n  end  \nelseif (aTask = \"Modify Feature\") then\n  \nelseif (aTask = \"Resape Feature\") then\n  if (
_AVExtAdvEditorScratchList <> nil) then\n    thePrjView = _AVExtAdvEditorView.GetProjection\n    _AVExtAdvEditorScratchRestore = {_AVExtAdvEditorScratchList,_AVExtAdvEditorScratchListPartNumber,\n                                   _AVExtAdvEditorScratchListPart,_AVExtAdvEditorScratchListPartPoint}\n    adrgraddShP = Polyline.Make(adrgraddShLL)\n    if (adrgraddShP.IsSelfIntersecting.Not) then                        \n      adrgraddSh = Polygon.Make(adrgraddShLL)    \n      adrgraddSh1 = _AVExtAdvEditorScratchList.
Get(0).Get(0)\n      adrgraddSh2 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0)\n      if (adrgraddSh2.Is(Point)) then \n        aTL = _AVExtAdvEditorList.ReturnKeys\n        for each i in aTL\n          if (_AVExtAdvEditorList.Get(i) = 1) then\n            aFTAb = i.GetFtab\n            if (aFTAb.IsEditable) then\n              aFS = aFTab.FindField(\"Shape\")\n              if (aFS.GetType = #FIELD_SHAPEPOLY) then\n                aSel = aFTab.GetSelection\n                if (aSel.Count
 > 0) then\n                  if (aFTab.CanAddRecord) then\n                    aFList = aFTab.GetFields\n                    aRemRec = {}\n                    aFTab.BeginTransaction\n                    for each y in aSel\n                      aShape = aFTab.ReturnValue(aFS,y)\n                      if (thePrjView.IsNull.Not) then\n                        aShape = aShape.Returnprojected(thePrjView)\n                      end\n                      aShape2 = aShape.Clone\n                      if (aShape2.Contains(ad
rgraddSh1) and aShape2.Contains(adrgraddSh2)) then\n                        aNShape = aShape2.ReturnUnion(adrgraddSh)\n                        if (aNShape <> aShape2) then\n                          if (thePrjView.IsNull.Not) then\n                            aNShape = aNShape.ReturnUnprojected(thePrjView)\n                          end\n                          aFTab.SetValue(aFS,y,aNShape)\n                          i.invalidate(true)\n                        end\n                      elseif (aShape2.Contains(ad
rgraddSh1).Not and aShape2.Contains(adrgraddSh2).Not) then\n                        aNShapeList = aShape2.Split(adrgraddShP)\n                        if (aNShapeList.GEt(0).ReturnArea > aNShapeList.GEt(1).ReturnArea) then\n                          if (aNShapeList.GEt(0).ReturnArea > 0) then\n                            aNShape = aNShapeList.GEt(0).clone\n                            if (thePrjView.IsNull.Not) then\n                              aNShape = aNShape.ReturnUnprojected(thePrjView)\n                     
       end\n                            aFTab.SetValue(aFS,y,aNShape)\n                            i.invalidate(true)\n                          end\n                        else\n                          if (aNShapeList.GEt(1).ReturnArea > 0) then\n                            aNShape = aNShapeList.GEt(1).clone\n                            if (thePrjView.IsNull.Not) then\n                              aNShape = aNShape.ReturnUnprojected(thePrjView)\n                            end\n                            aFTab.
SetValue(aFS,y,aNShape)\n                            i.invalidate(true)\n                          end\n                        end\n                      end\n                    end\n                    aFTab.EndTransaction\n                  end\n                end\n              elseif (aFS.GetType = #FIELD_SHAPELINE) then\n                aSel = aFTab.GetSelection\n                if (aSel.Count > 0) then\n                  if (aFTab.CanAddRecord) then\n                    aFList = aFTab.GetFields\n                
    aRemRec = {}\n                    aFTab.BeginTransaction\n                    for each y in aSel\n                      aShape = aFTab.ReturnValue(aFS,y)\n                      if (thePrjView.IsNull.Not) then\n                        aShape = aShape.Returnprojected(thePrjView)\n                      end\n                      aMPL = aShape.IsSelfIntersecting\n                      aShape2 = Polygon.Make(aShape.AsList)\n                      aListSS = aShape.Split(adrgraddShP)\n                      if (aListSS.Co
unt > 2) then\n                        aNShapeL = aShape.SplitLines(adrgraddShP)\n                        aNSList = {}\n                        aNShapeLx = 0\n                        While (aNShapeLx <= (aNShapeL.GEt(0).Count - 1))\n                          aNSList = aNSList + aNShapeL.GEt(0).Get(aNShapeLx).AsMultiPoint.AsList\n                          if ((aNShapeLx + 1) <= (aNShapeL.GEt(1).Count - 1)) then\n                            aNSList = aNSList + aNShapeL.GEt(1).Get(aNShapeLx + 1).AsMultiPoint.AsList\n 
                         end\n                          aNShapeLx = aNShapeLx + 2\n                        end\n                        aNShape2 = Polyline.Make({aNSList})\n                        aNShape2 = aNShape2.clean\n                        if (aMPL) then\n                          if (thePrjView.IsNull.Not) then\n                            aNShape2 = aNShape2.ReturnUnprojected(thePrjView)\n                          end\n                          aFTab.SetValue(aFS,y,aNShape2)\n                          i.inv
alidate(true)\n                        else\n                          if (aNShape2.IsSelfIntersecting.Not) then\n                            if (thePrjView.IsNull.Not) then\n                              aNShape2 = aNShape2.ReturnUnprojected(thePrjView)\n                            end\n                            aFTab.SetValue(aFS,y,aNShape2)\n                            i.invalidate(true)\n                          end\n                        end\n                      end\n                    end\n               
     aFTab.EndTransaction\n                  end\n                end\n              end\n            end\n          end\n        end\n        av.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)\n      end\n    end\n  end\nelseif (aTask = \"Select Features Using an Area\") then\n  if (_AVExtAdvEditorScratchList <> nil) then\n    _AVExtAdvEditorScratchRestore = {_AVExtAdvEditorScratchList,_AVExtAdvEditorScratchListPartNumber,\n                                   _AVExtAdvEditorScratchListPart,_AVExtAdvEditorScratchListPartP
oint}\n  end\n  if (System.IsShiftKeyDown) then\n    op = #VTAB_SELTYPE_OR\n  else\n    op = #VTAB_SELTYPE_NEW\n  end\n  theThemes = _AVExtAdvEditorSelectable.ReturnKeys\n  adrgraddSh = Polygon.Make(adrgraddShLL)\n  for each t in theThemes\n    if (_AVExtAdvEditorSelectable.Get(t) = 1) then\n      if (t.IsVisible) then\n        t.SelectByPolygon(adrgraddSh,op)\n      end\n    end\n  end\nelseif (aTask = \"Select Features Using a Line\") then\n  if (_AVExtAdvEditorScratchList <> nil) then\n    _AVExtAdvEditorScratchRestore = {_
AVExtAdvEditorScratchList,_AVExtAdvEditorScratchListPartNumber,\n                                   _AVExtAdvEditorScratchListPart,_AVExtAdvEditorScratchListPartPoint}\n  end\n  if (System.IsShiftKeyDown) then\n    op = #VTAB_SELTYPE_OR\n  else\n    op = #VTAB_SELTYPE_NEW\n  end\n  theThemes = _AVExtAdvEditorSelectable.ReturnKeys\n  adrgraddSh = Polyline.Make(adrgraddShLL)\n  for each t in theThemes\n    if (_AVExtAdvEditorSelectable.Get(t) = 1) then\n      if (t.IsVisible) then\n        t.SelectByPolyline(adrgraddSh,op
)\n      end\n    end\n  end\nend\n_AVExtAdvEditorScratchList = nil\n_AVExtAdvEditorScratchListPartNumber = nil\n_AVExtAdvEditorClick = nil\n_AVExtAdvEditorapt = nil\n_AVExtAdvEditorScrathGr = nil\n_AVExtAdvEditorScrathGrMouse = nil\n_AVExtAdvEditorCurGr = nil\n_AVExtAdvEditoraptL = nil\n_AVExtAdvEditorScratchListPart = false\n_AVExtAdvEditorScratchListPartPoint = nil\nif (_AVExtAdvEditorResetParam) then\n  _AVExtAdvEditorDeflectionEnb = false\n  _AVExtAdvEditorDeflectionCos = nil\n  _AVExtAdvEditorDeflectionSin = nil\n  _AVE
xtAdvEditorAngleEnb = false\n  _AVExtAdvEditorAngleCos = nil\n  _AVExtAdvEditorAngleSin = nil\n  _AVExtAdvEditorLengthEnb = false\n  _AVExtAdvEditorLengthSet = nil\nend\nav.GetProject.FindGUI(\"AVExtAdvEditView\").Update\nav.Run(\"AVExtAdvEditor.StartSnapPoint\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1867
	Owner:	1866
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1868
)

(DocAct.1869
	Doc:	1866
)

(SEd.1870
	Name:	"AVExtAdvEditor.ToolMeasureSelected"
	CreationDate:	"7 Июль 2004 г. 2:23:34"
	GUIName:	"Script"
	Win:	1871
	CSMgr:	1872
	DocExts:	1873
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorView = av.Getactivedoc) then\n    if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AETraceMenu\").GetControls.Get(1).IsSelected) then        \n      aRP = _AVExtAdvEditorView.GetDisplay.returnuserpoint\n      if (_AVExtAdvEditorPan) then\n        aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n        aDisapt = aViewRect.GetWidth / 100\n        if (aViewRect.AsPolygon.AsPolyline.Distance(aRP).Abs < aDisapt) then\n          
aptpan = Polyline.Make({{aViewRect.ReturnCenter,aRP}}).Along(10)\n          _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n        end\n      end\n      if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n        _AVExtAdvEditorView.GetDisplay.Pan\n        _AVExtAdvEditorMeasureRun = true\n      else\n        _AVExtAdvEditorMeasureRun = false\n        if (_AVExtAdvEditoraptSLM <> aRP) then          \n          _AVExtAdvEditoraptSLM = aRP.clone\n          _AVExtAdvEditoraptSM = aRP.clone\n          aSnapReal = 0\n  
        if (_AVExtAdvEditorSnapTU = \"pixels\") then\n            aSnapTolerance = (_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.GetWin.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\n          else\n            aSnapTolerance = _AVExtAdvEditorSnapT\n          end\n          aFTAb = _AVExtAdvEditorTheme.GetFTab\n          aSF = aFTAb.FindField(\"Shape\")\n          aSel = aFTAb.GetSelection\n          aUserSnapPoint = _AVExtAdvEditoraptSM.Clone\n          i
f (aSel.Count = 1) then\n            thePrjView = _AVExtAdvEditorView.GetProjection\n            for each iaSel in aSel\n              aShape = aFTAb.ReturnValue(aSF,iaSel)\n              if (thePrjView.IsNull.Not) then\n                aShape = aShape.Returnprojected(thePrjView)\n              end\n            end\n          else\n            return nil\n            av.DelayedRun(\"AVExtAdvEditor.ToolMeasureSelectedEnd\",nil,0)\n          end\n          aSnapVAl = aUserSnapPoint.Snap(aShape,aSnapTolerance)\n          if 
(aSnapVal) then\n            _AVExtAdvEditoraptSM = aUserSnapPoint.Clone\n            aSnapReal = 1\n          end\n          if (_AVExtAdvEditorShowCurP) then\n            if (_AVExtAdvEditorScrathGrMouseSnapP = nil) then\n              _AVExtAdvEditorScrathGrMouseSnapP = GraphicShape.Make(_AVExtAdvEditoraptSM.Clone)\n              _AVExtAdvEditorScrathGrMouseSnapP.SetName(\"_AVExtAdvEditorScrathGrMouseSnapP\")\n              if (aSnapReal = 1) then\n                _AVExtAdvEditorScrathGrMouseSnapP.SetSymbol(_AVExtA
dvEditorScratchP)\n              else\n                _AVExtAdvEditorScrathGrMouseSnapP.SetSymbol(_AVExtAdvEditorScratchP2)\n              end\n              agrlist.Add(_AVExtAdvEditorScrathGrMouseSnapP)\n              _AVExtAdvEditorScrathGrMouseSnapP.invalidate\n            end\n            if (aSnapReal = 1) then\n              _AVExtAdvEditorScrathGrMouseSnapP.SetSymbol(_AVExtAdvEditorScratchP)\n            else\n              _AVExtAdvEditorScrathGrMouseSnapP.SetSymbol(_AVExtAdvEditorScratchP2)\n            end
\n            _AVExtAdvEditorScrathGrMouseSnapP.invalidate\n            _AVExtAdvEditorScrathGrMouseSnapP.SetShape(_AVExtAdvEditoraptSM.Clone)\n            _AVExtAdvEditorScrathGrMouseSnapP.invalidate\n          else\n            if (aSnapReal = 1) then\n              if (_AVExtAdvEditorScrathGrMouseSnapP = nil) then          \n                _AVExtAdvEditorScrathGrMouseSnapP = GraphicShape.Make(_AVExtAdvEditoraptSM.Clone)\n                _AVExtAdvEditorScrathGrMouseSnapP.SetName(\"_AVExtAdvEditorScrathGrMouseSnap
P\")\n                _AVExtAdvEditorScrathGrMouseSnapP.SetSymbol(_AVExtAdvEditorScratchP)\n                agrlist.Add(_AVExtAdvEditorScrathGrMouseSnapP)\n                _AVExtAdvEditorScrathGrMouseSnapP.invalidate\n              end\n              _AVExtAdvEditorScrathGrMouseSnapP.invalidate\n              _AVExtAdvEditorScrathGrMouseSnapP.SetSymbol(_AVExtAdvEditorScratchP)\n              _AVExtAdvEditorScrathGrMouseSnapP.SetShape(_AVExtAdvEditoraptSM.Clone)\n              _AVExtAdvEditorScrathGrMouseSnapP.invali
date\n            else\n              if (_AVExtAdvEditorScrathGrMouseSnapP <> nil) then\n                agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouseSnapP)\n                _AVExtAdvEditorScrathGrMouseSnapP = nil\n              end\n            end\n          end          \n        end\n      end\n      av.DelayedRun(\"AVExtAdvEditor.ToolMeasureSelectedEnd\",nil,0)\n  else\n    if (_AVExtAdvEditorScrathGrMouseSnapP <> nil) then\n      agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouseSnapP)\n    end\n    _AVExtAdvEdi
torScrathGrMouseSnapP = nil\n  end\nelse\n  if (_AVExtAdvEditorScrathGrMouseSnapP <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouseSnapP)\n  end\n  _AVExtAdvEditorScrathGrMouseSnapP = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1871
	Owner:	1870
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1872
)

(DocAct.1873
	Doc:	1870
)

(SEd.1874
	Name:	"AVExtAdvEditor.ToolMeasureSelectedClick"
	CreationDate:	"7 Июль 2004 г. 3:14:40"
	GUIName:	"Script"
	Win:	1875
	CSMgr:	1876
	DocExts:	1877
	Source:	"if (_AVExtAdvEditorMeasureRun.Not) then\n   av.Run(\"AVExtAdvEditor.ToolMeasureSelected\",nil)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1875
	Owner:	1874
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1876
)

(DocAct.1877
	Doc:	1874
)

(SEd.1878
	Name:	"AVExtAdvEditor.ToolMeasureSelectedEnd"
	CreationDate:	"7 Июль 2004 г. 2:21:35"
	GUIName:	"Script"
	Win:	1879
	CSMgr:	1880
	DocExts:	1881
	Source:	"_AVExtAdvEditorMeasureRun = false\nav.Run(\"AVExtAdvEditor.ToolMeasureSelected\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1879
	Owner:	1878
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1880
)

(DocAct.1881
	Doc:	1878
)

(SEd.1882
	Name:	"AVExtAdvEditor.ToolMeasureSelectedStart"
	CreationDate:	"7 Июль 2004 г. 3:39:30"
	GUIName:	"Script"
	Win:	1883
	CSMgr:	1884
	DocExts:	1885
	Source:	"if (_AVExtAdvEditorSnapTU = \"pixels\") then\n  aSnapTolerance = (_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.GetWin.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\nelse\n  aSnapTolerance = _AVExtAdvEditorSnapT\nend\naFTAb = _AVExtAdvEditorTheme.GetFTab\naSF = aFTAb.FindField(\"Shape\")\naSel = aFTAb.GetSelection\naUserSnapPoint = _AVExtAdvEditoraptSLM.Clone\nif (aSel.Count = 1) then\n  thePrjView = _AVExtAdvEditorView.GetProjection\n  for each iaSel in aSel
\n    aShape = aFTAb.ReturnValue(aSF,iaSel)\n    if (thePrjView.IsNull.Not) then\n      aShape = aShape.Returnprojected(thePrjView)\n    end\n  end\nelse\n  return nil\nend\nif (_AVExtAdvEditorMeasurePoint = nil) then\n  aSnapVAl = aUserSnapPoint.Snap(aShape,aSnapTolerance)\n  if (aSnapVal) then\n    _AVExtAdvEditorMeasurePoint = aUserSnapPoint.Clone\n    _AVExtAdvEditorMeasureShape = aShape.clone\n  end\nelse\n  if (_AVExtAdvEditorMeasureShape = aShape) then\n    aSnapVAl = aUserSnapPoint.Snap(aShape,aSnapTolerance)\n    if
 (aSnapVal) then\n      aShList = aShape.AsList\n      aFind = 0\n      for each i in aShList\n        aP1 = i.FindByValue(_AVExtAdvEditorMeasurePoint)\n        aP2 = i.FindByValue(aUserSnapPoint)\n        if ((aP1 <> -1) and (aP2 <> -1) and (aP1 <> aP2)) then\n          aLenSh = {}\n          if (aP1 > aP2) then\n            for each y in aP2..aP1\n              aLenSh.Add(i.Get(y))\n            end\n          else\n            for each y in aP1..aP2\n              aLenSh.Add(i.Get(y))\n            end\n          end\n    
      aMesShape1 = Polyline.Make({i})\n          aLen1 = aMesShape1.ReturnLength.SetFormat(\"dd.dddddd\")      \n          aFind = 1\n          break\n        end\n      end\n      if (aFind = 1) then\n        aMesShape = Polyline.Make({aLenSh})\n        aLen = aMesShape.ReturnLength.SetFormat(\"dd.dddddd\")\n        aLen3 = (aLen1 - aLen).SetFormat(\"dd.dddddd\")        \n        msgbox.report(\"distance:   \" + aLen.AsString + nl + \"length:   \" + aLen3.AsString + nl + \"perimeter:   \" + aLen1.AsString,\"Distance\")\n      else
\n        msgbox.error(\"Unable to measures distance\",\"\")\n      end\n      _AVExtAdvEditorMeasurePoint = nil\n      _AVExtAdvEditorMeasureShape = nil\n    end\n  else\n    _AVExtAdvEditorMeasurePoint = nil\n    _AVExtAdvEditorMeasureShape = nil\n  end            \nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1883
	Owner:	1882
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1884
)

(DocAct.1885
	Doc:	1882
)

(SEd.1886
	Name:	"AVExtAdvEditor.ToolMeasureSelectedUpd"
	CreationDate:	"7 Июль 2004 г. 2:18:56"
	GUIName:	"Script"
	Win:	1887
	CSMgr:	1888
	DocExts:	1889
	Source:	"enabled = FALSE\nif (_AVExtAdvEditorTheme <> nil) then\n  if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n    fCount = _AVExtAdvEditorTheme.GetFTab.GetSelection.Count\n    theType = _AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType\n    enabled =  ((fcount = 1) and ((theType = #FIELD_SHAPEPOLY) or\n                   (theType = #FIELD_SHAPELINE)))\n  end\nend\nSELF.SetEnabled(enabled)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1887
	Owner:	1886
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1888
)

(DocAct.1889
	Doc:	1886
)

(SEd.1890
	Name:	"AVExtAdvEditor.ToolMove"
	CreationDate:	"15 Июль 2004 г. 0:11:08"
	GUIName:	"Script"
	Win:	1891
	CSMgr:	1892
	DocExts:	1893
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\naListVertexCenter = agrlist.FindByName(\"AVExtAdvEditorSelectingCenter\")\nif (aListVertexCenter <> nil) then\n  agrlist.SetNumberFormat(\"dd.dddddddddddddddddddddddddddd\")\n  Script.The.SetNumberFormat(\"dd.dddddddddddddddddddddddddddd\")   \n  if (_AVExtAdvEditorRotateStartPt <> nil) then\n    if (_AVExtAdvEditorView = av.Getactivedoc) then\n      if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEMoveMenu\").GetControls.Get(2).IsSelected) then\n        apt
 = _AVExtAdvEditorView.getdisplay.returnuserpoint\n        if (_AVExtAdvEditorPan) then\n          aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n          aDisapt = aViewRect.GetWidth / 100\n          if (aViewRect.AsPolygon.AsPolyline.Distance(apt).Abs < aDisapt) then\n            aptpan = Polyline.Make({{aViewRect.ReturnCenter,apt}}).Along(10)\n            _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n          end\n        end\n        if (apt <> _AVExtAdvEditoraptSR) then\n          _AVExtAdvEditora
ptSR = apt.Clone\n          centerPtX = _AVExtAdvEditoraptSR.GetX - _AVExtAdvEditorRotateStartPt.GetX\n          centerPtY = _AVExtAdvEditoraptSR.GetY - _AVExtAdvEditorRotateStartPt.GetY          \n          aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelectingRotate\")\n          if (aListVertex <> nil) then\n            for each aListVertexi in aListVertex\n              aListVertexi.Invalidate\n              aShape = aListVertexi.GetObjectTag.Clone              \n              aShape.Move(centerPtX,centerP
tY)\n              aListVertexi.SetShape(aShape)\n              aListVertexi.Invalidate\n            end\n          end\n        end\n        if (_AVExtAdvEditorRotateClick = 1) then\n          _AVExtAdvEditorRotateClick = nil\n          if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.Pan\n          elseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditoraptSR)\n          else\n            thePrj
View = _AVExtAdvEditorView.GetProjection\n            aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelectingRotate\")\n            if (aListVertex <> nil) then\n              for each igraph in aListVertex\n                agrlist.RemoveGraphic(igraph)\n              end\n            end\n            centerPtX = _AVExtAdvEditoraptSR.GetX - _AVExtAdvEditorRotateStartPt.GetX\n            centerPtY = _AVExtAdvEditoraptSR.GetY - _AVExtAdvEditorRotateStartPt.GetY\n            aThList = _AVExtAdvEditorList.ReturnKeys
\n            for each iThemes in aThList\n              if (_AVExtAdvEditorList.Get(iThemes) = 1) then\n                aFTab = iThemes.GetFTab\n                if (aFTab.IsEditable) then\n                  aSF = aFTab.FindField(\"Shape\")\n                  if (aSF <> nil) then\n                    aSel = aFTAb.GetSelection\n                    if (aSel.Count > 0) then\n                      aFTab.BeginTransaction\n                      for each i in aSel\n                        aShape = aFtab.ReturnValue(aSf,i)\n    
                    if (thePrjView.IsNull.Not) then\n                          aShape = aShape.Returnprojected(thePrjView)\n                        end\n                        aShape.Move(centerPtX,centerPtY)\n                        if (thePrjView.IsNull.Not) then\n                          aShape = aShape.ReturnUnprojected(thePrjView)\n                        end\n                        aFtab.SetValue(aSf,i,aShape)\n                      end \n                      aFTab.EndTransaction   \n                      i
Themes.Invalidate(true)\n                    end\n                  end\n                end\n              end\n            end\n            if (_AVExtAdvEditorPanClick) then\n              _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n            end\n            _AVExtAdvEditorRotateStartPt = nil\n          end\n          av.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)\n          _AVExtAdvEditoraptMoving = false\n          av.DelayedRun(\"AVExtAdvEditor.ToolMoveCenter\",nil,0)\n        else\n          av
.DelayedRun(\"AVExtAdvEditor.ToolMoveEnd\",nil,0)\n        end\n      else\n        _AVExtAdvEditoraptMoving = false\n        _AVExtAdvEditorRotateClick = nil\n        _AVExtAdvEditorRotateStartPt = nil\n        aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelectingRotate\")\n        if (aListVertex <> nil) then\n          for each igraph in aListVertex\n            agrlist.RemoveGraphic(igraph)\n          end\n        end\n      end\n    else\n      _AVExtAdvEditoraptMoving = false\n      _AVExtAdvEditorRotateClick = 
nil\n      _AVExtAdvEditorRotateStartPt = nil\n      aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelectingRotate\")\n      if (aListVertex <> nil) then\n        for each igraph in aListVertex\n          agrlist.RemoveGraphic(igraph)\n        end\n      end\n    end\n  else\n    _AVExtAdvEditoraptMoving = false\n    _AVExtAdvEditorRotateClick = nil\n    _AVExtAdvEditorRotateStartPt = nil\n    aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelectingRotate\")\n    if (aListVertex <> nil) then\n      for each igraph 
in aListVertex\n        agrlist.RemoveGraphic(igraph)\n      end\n    end\n  end\nelse\n  _AVExtAdvEditoraptMoving = false\n  _AVExtAdvEditorRotateClick = nil\n  _AVExtAdvEditorRotateStartPt = nil\n  aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelectingRotate\")\n  if (aListVertex <> nil) then\n    for each igraph in aListVertex\n      agrlist.RemoveGraphic(igraph)\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1891
	Owner:	1890
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1892
)

(DocAct.1893
	Doc:	1890
)

(SEd.1894
	Name:	"AVExtAdvEditor.ToolMoveCenter"
	CreationDate:	"17 Июль 2004 г. 22:39:05"
	GUIName:	"Script"
	Win:	1895
	CSMgr:	1896
	DocExts:	1897
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorView = av.Getactivedoc) then\n  aVal0 = av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEMoveMenu\").GetControls.Get(0).IsSelected\n  aVal1 = av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEMoveMenu\").GetControls.Get(1).IsSelected\n  aVal2 = av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEMoveMenu\").GetControls.Get(2).IsSelected\n  aVal3 = av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindB
yName(\"AEPointer\").IsSelected\n  if (aVal0 or aVal1 or aVal2 or aVal3) then\n    if (_AVExtAdvEditoraptMoving.Not) then     \n      aRP = _AVExtAdvEditorView.GetDisplay.returnuserpoint\n      if (_AVExtAdvEditorPan) then\n        aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n        aDisapt = aViewRect.GetWidth / 100\n        if (aViewRect.AsPolygon.AsPolyline.Distance(aRP).Abs < aDisapt) then\n          aptpan = Polyline.Make({{aViewRect.ReturnCenter,aRP}}).Along(10)\n          _AVExtAdvEditorView.Get
Display.PanTo(aptpan)\n        end\n      end\n      if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown and aVal3.Not) then\n        _AVExtAdvEditorView.GetDisplay.Pan\n        _AVExtAdvEditorMoveCenterRun = true\n      else\n        _AVExtAdvEditorMoveCenterRun = false\n        if (_AVExtAdvEditoraptMoveSLM <> aRP) then          \n          _AVExtAdvEditoraptMoveSLM = aRP.clone\n          _AVExtAdvEditoraptMoveSM = nil\n          aFindFr = agrlist.FindAllByLocation(_AVExtAdvEditoraptMoveSLM)\n          if (aFindFr <> 
nil) then\n            aFindFrG = GraphicList.Make\n            aFindFrG.Merge(aFindFr)\n            aFindFrG.SetDisplay(_AVExtAdvEditorView.GetDisplay)\n            if (aFindFrG.FindByName(\"AVExtAdvEditorSelectingCenter\") <> nil) then\n              _AVExtAdvEditoraptMoveSM = aFindFrG.FindByName(\"AVExtAdvEditorSelectingCenter\").GetShape.Clone\n            end\n          end\n          if (_AVExtAdvEditoraptMoveSM <> nil) then\n            if (_AVExtAdvEditorScrathGrMouseSnapP = nil) then          \n              _AV
ExtAdvEditorScrathGrMouseSnapP = GraphicShape.Make(_AVExtAdvEditoraptMoveSM.Clone)\n              _AVExtAdvEditorScrathGrMouseSnapP.SetName(\"_AVExtAdvEditorScrathGrMouseSnapP\")\n              _AVExtAdvEditorScrathGrMouseSnapP.SetSymbol(_AVExtAdvEditorScratchP)\n              agrlist.Add(_AVExtAdvEditorScrathGrMouseSnapP)\n              _AVExtAdvEditorScrathGrMouseSnapP.invalidate\n            end\n            _AVExtAdvEditorScrathGrMouseSnapP.invalidate\n            _AVExtAdvEditorScrathGrMouseSnapP.SetSymbol(_AVE
xtAdvEditorScratchP)\n            _AVExtAdvEditorScrathGrMouseSnapP.SetShape(_AVExtAdvEditoraptMoveSM.Clone)\n            _AVExtAdvEditorScrathGrMouseSnapP.invalidate\n          else\n            if (_AVExtAdvEditorScrathGrMouseSnapP <> nil) then\n              agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouseSnapP)\n              _AVExtAdvEditorScrathGrMouseSnapP = nil\n            end\n          end          \n        end\n      end\n      av.DelayedRun(\"AVExtAdvEditor.ToolMoveCenterEnd\",nil,0)\n    else\n      if (_
AVExtAdvEditorScrathGrMouseSnapP <> nil) then\n        agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouseSnapP)\n      end\n      _AVExtAdvEditorScrathGrMouseSnapP = nil\n    end\n  else\n    if (_AVExtAdvEditorScrathGrMouseSnapP <> nil) then\n      agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouseSnapP)\n    end\n    _AVExtAdvEditorScrathGrMouseSnapP = nil\n  end\nelse\n  if (_AVExtAdvEditorScrathGrMouseSnapP <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouseSnapP)\n  end\n  _AVExtAdvEditorScrathGrMous
eSnapP = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1895
	Owner:	1894
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1896
)

(DocAct.1897
	Doc:	1894
)

(SEd.1898
	Name:	"AVExtAdvEditor.ToolMoveCenterClick"
	CreationDate:	"18 Июль 2004 г. 0:40:48"
	GUIName:	"Script"
	Win:	1899
	CSMgr:	1900
	DocExts:	1901
	Source:	"if (_AVExtAdvEditorMoveCenterRun.Not) then\n   av.Run(\"AVExtAdvEditor.ToolMoveCenter\",nil)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1899
	Owner:	1898
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1900
)

(DocAct.1901
	Doc:	1898
)

(SEd.1902
	Name:	"AVExtAdvEditor.ToolMoveCenterEnd"
	CreationDate:	"18 Июль 2004 г. 0:39:12"
	GUIName:	"Script"
	Win:	1903
	CSMgr:	1904
	DocExts:	1905
	Source:	"_AVExtAdvEditorMoveCenterRun = false\nav.Run(\"AVExtAdvEditor.ToolMoveCenter\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1903
	Owner:	1902
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1904
)

(DocAct.1905
	Doc:	1902
)

(SEd.1906
	Name:	"AVExtAdvEditor.ToolMoveCenterPoint"
	CreationDate:	"18 Июль 2004 г. 1:00:13"
	GUIName:	"Script"
	Win:	1907
	CSMgr:	1908
	DocExts:	1909
	Source:	"_AVExtAdvEditorRotateClick = nil\n_AVExtAdvEditorRotateStartPt = nil\nagrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorView = av.Getactivedoc) then\n  aVal0 = av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEMoveMenu\").GetControls.Get(0).IsSelected\n  aVal1 = av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEMoveMenu\").GetControls.Get(1).IsSelected\n  aVal2 = av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEMoveMenu\").GetControls.Get(2).IsSelected\n
  aVal3 = av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEPointer\").IsSelected\n  if (aVal0 or aVal1 or aVal2 or aVal3) then        \n    aRP = _AVExtAdvEditorView.GetDisplay.returnuserpoint\n    if (_AVExtAdvEditorPan) then\n      aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n      aDisapt = aViewRect.GetWidth / 100\n      if (aViewRect.AsPolygon.AsPolyline.Distance(aRP).Abs < aDisapt) then\n        aptpan = Polyline.Make({{aViewRect.ReturnCenter,aRP}}).Along(10)\n        _AVExtAdv
EditorView.GetDisplay.PanTo(aptpan)\n      end\n    end\n    if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n      _AVExtAdvEditorView.GetDisplay.Pan\n    else\n      if (_AVExtAdvEditoraptMoveSM <> aRP) then          \n        _AVExtAdvEditoraptMoveSM = aRP.clone\n        aSnapReal = 0\n        if (_AVExtAdvEditorSnapEnb) then\n          if (_AVExtAdvEditorSnapTU = \"pixels\") then\n            aSnapTolerance = (_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.GetWin.ReturnExtent
.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\n          else\n            aSnapTolerance = _AVExtAdvEditorSnapT\n          end\n          aListK = _AVExtAdvEditorView.GetThemes\n          for each aThemeView in aLIstK  \n            aListE = _AVExtAdvEditorListSnap.Get(aThemeView)\n            if (aListE <> nil) then\n              for each aThemeSnapeI in 0..3\n                aThemeSnape = aListE.Get(aThemeSnapeI)\n                if (aThemeSnape <> 0) then\n                  aUserSnapPoint = _AV
ExtAdvEditoraptMoveSM.Clone\n                  aThemeView.SetInteractiveSnapTolerance(aSnapTolerance)\n                  if (aThemeSnapeI = 0) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_VERTEX,aUserSnapPoint)\n                  elseif (aThemeSnapeI = 1) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_BOUNDARY,aUserSnapPoint)\n                  elseif (aThemeSnapeI = 2) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_ENDPOINT,aUserSnapPoint)\n                  else\n 
                   aThemeView.UserSnapPoint(#POINT_SNAP_INTERSECTION,aUserSnapPoint)\n                  end\n                  if (aUserSnapPoint <> _AVExtAdvEditoraptMoveSM) then\n                    _AVExtAdvEditoraptMoveSM = aUserSnapPoint.Clone\n                    aSnapReal = 1\n                    break\n                  end\n                end\n              end\n            end\n            if (aSnapReal = 1) then\n              if (_AVExtAdvEditorSnapOff <> 0) then\n                aDis1 = _AVExtAdvEditorapt
MoveSM.Distance(aRP)\n                aptPx = aRP.GetX - _AVExtAdvEditoraptMoveSM.GetX\n                aptPy = aRP.GetY - _AVExtAdvEditoraptMoveSM.GetY\n                aCosA = aptPx / aDis1.Abs\n                aSinA = aptPy / aDis1.Abs\n                aNewPx = _AVExtAdvEditorSnapOff * aCosA\n                aNewPy = _AVExtAdvEditorSnapOff * aSinA\n                aNewPtX = aNewPx + _AVExtAdvEditoraptMoveSM.GetX\n                aNewPtY = aNewPy + _AVExtAdvEditoraptMoveSM.GetY\n                _AVExtAdvEditoraptM
oveSM = aNewPtX@aNewPtY\n              end\n              break\n            end\n          end\n        end        \n        aFindFr = agrlist.FindByName(\"AVExtAdvEditorSelectingCenter\")\n        if (aFindFr <> nil) then\n          aFindFr.invalidate\n          aFindFr.SetShape(_AVExtAdvEditoraptMoveSM.Clone)\n          aFindFr.invalidate\n        end          \n      end\n    end\n    if (_AVExtAdvEditorRotateMoveClick = 1) then\n      _AVExtAdvEditorRotateMoveClick = nil\n      _AVExtAdvEditoraptMoveSM = nil\n      _AVEx
tAdvEditoraptMoving = false\n      av.DelayedRun(\"AVExtAdvEditor.ToolMoveCenter\",nil,0)\n    else\n      av.DelayedRun(\"AVExtAdvEditor.ToolMoveCenterPointEnd\",nil,0)\n    end\n  else\n    _AVExtAdvEditoraptMoveSM = nil\n    _AVExtAdvEditoraptMoving = false\n    _AVExtAdvEditorRotateMoveClick = nil\n    if (_AVExtAdvEditorScrathGrMouseSnapP <> nil) then\n      agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouseSnapP)\n    end\n    _AVExtAdvEditorScrathGrMouseSnapP = nil\n  end\nelse\n  _AVExtAdvEditoraptMoveSM = nil\n  _AVEx
tAdvEditoraptMoving = false\n  _AVExtAdvEditorRotateMoveClick = nil\n  if (_AVExtAdvEditorScrathGrMouseSnapP <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouseSnapP)\n  end\n  _AVExtAdvEditorScrathGrMouseSnapP = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1907
	Owner:	1906
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1908
)

(DocAct.1909
	Doc:	1906
)

(SEd.1910
	Name:	"AVExtAdvEditor.ToolMoveCenterPointEnd"
	CreationDate:	"18 Июль 2004 г. 1:06:27"
	GUIName:	"Script"
	Win:	1911
	CSMgr:	1912
	DocExts:	1913
	Source:	"_AVExtAdvEditorMoveCenterRun = false\nav.Run(\"AVExtAdvEditor.ToolMoveCenterPoint\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1911
	Owner:	1910
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1912
)

(DocAct.1913
	Doc:	1910
)

(SEd.1914
	Name:	"AVExtAdvEditor.ToolMoveEnd"
	CreationDate:	"15 Июль 2004 г. 2:20:38"
	GUIName:	"Script"
	Win:	1915
	CSMgr:	1916
	DocExts:	1917
	Source:	"av.Run(\"AVExtAdvEditor.ToolMove\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1915
	Owner:	1914
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1916
)

(DocAct.1917
	Doc:	1914
)

(SEd.1918
	Name:	"AVExtAdvEditor.ToolMoveStart"
	CreationDate:	"15 Июль 2004 г. 2:21:15"
	GUIName:	"Script"
	Win:	1919
	CSMgr:	1920
	DocExts:	1921
	Source:	"if (_AVExtAdvEditoraptMoveSM <> nil) then\n  _AVExtAdvEditoraptMoving = true\n  if (_AVExtAdvEditorRotateMoveClick = nil) then\n    _AVExtAdvEditorRotateMoveClick = 2\n    av.Run(\"AVExtAdvEditor.ToolMoveCenterPoint\",nil)\n  else\n    _AVExtAdvEditorRotateMoveClick = 1\n  end\nelse\n  agrlist = _AVExtAdvEditorView.getgraphics\n  _AVExtAdvEditoraptMoving = true\n  if (_AVExtAdvEditorRotateStartPt = nil) then\n    _AVExtAdvEditorRotateStartPt = _AVExtAdvEditorView.getdisplay.returnuserpoint.clone\n    aListVertex = agrlist
.FindAllByName(\"AVExtAdvEditorSelectingRotate\")\n    if (aListVertex <> nil) then\n      for each igraph in aListVertex\n        agrlist.RemoveGraphic(igraph)\n      end\n    end\n    aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelecting\")\n    if (aListVertex <> nil) then\n      for each igraph in aListVertex\n        aNG = igraph.Clone\n        aNg.SetShape(igraph.getshape.clone)\n        aNG.SetObjectTag(aNg.getshape.clone)\n        aNG.SetName(\"AVExtAdvEditorSelectingRotate\")\n        agrlist.Add(aNG)\n      e
nd\n    end\n  end\n  if (_AVExtAdvEditorRotateClick = nil) then\n    _AVExtAdvEditorRotateClick = 2\n    av.Run(\"AVExtAdvEditor.ToolMove\",nil)\n  else\n    _AVExtAdvEditorRotateClick = 1\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1919
	Owner:	1918
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1920
)

(DocAct.1921
	Doc:	1918
)

(SEd.1922
	Name:	"AVExtAdvEditor.ToolPenPointClick"
	CreationDate:	"22 Июнь 2004 г. 3:53:19"
	GUIName:	"Script"
	Win:	1923
	CSMgr:	1924
	DocExts:	1925
	Source:	"if (_AVExtAdvEditorStartSnapRun.Not) then\n   av.Run(\"AVExtAdvEditor.StartSnapPoint\",nil)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1923
	Owner:	1922
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1924
)

(DocAct.1925
	Doc:	1922
)

(SEd.1926
	Name:	"AVExtAdvEditor.ToolPenPointStart"
	CreationDate:	"22 Июнь 2004 г. 3:42:52"
	GUIName:	"Script"
	Win:	1927
	CSMgr:	1928
	DocExts:	1929
	Source:	"if (_AVExtAdvEditorStartSnapPan.Not) then\n  adis = _AVExtAdvEditorView.getdisplay\n  if (_AVExtAdvEditoraptS = nil) then\n    AddPoint = adis.returnuserpoint.clone\n  else\n    AddPoint = _AVExtAdvEditoraptS.clone\n  end\n  _AVExtAdvEditoraptS = nil\n  av.Run(\"AVExtAdvEditor.ToolDrawingStop\",AddPoint)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1927
	Owner:	1926
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1928
)

(DocAct.1929
	Doc:	1926
)

(SEd.1930
	Name:	"AVExtAdvEditor.ToolPenPolygon"
	CreationDate:	"1 Май 2004 г. 4:40:38"
	GUIName:	"Script"
	Win:	1931
	CSMgr:	1932
	DocExts:	1933
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScratchList <> nil) then\n  if (_AVExtAdvEditorView = av.Getactivedoc) then\n    if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEPen\").IsSelected) then\n      if ( _AVExtAdvEditorDrawClass = \"polygon\") then\n        apt = _AVExtAdvEditorView.getdisplay.returnuserpoint\n        if (_AVExtAdvEditorPan) then\n          aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n          aDisapt = aViewRect.GetWidth / 100\n          if
 (aViewRect.AsPolygon.AsPolyline.Distance(apt).Abs < aDisapt) then\n            aptpan = Polyline.Make({{aViewRect.ReturnCenter,apt}}).Along(10)\n            _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n          end\n        end\n        if (apt <> _AVExtAdvEditoraptL) then\n          _AVExtAdvEditoraptL = apt.Clone\n          _AVExtAdvEditorapt = apt.Clone\n          aSnapReal = 0\n          if (_AVExtAdvEditorAngleEnb) then\n            aSnapReal = 1\n            aLastPoint = _AVExtAdvEditorScratchList.Get(_AVExtA
dvEditorScratchList.Count - 1).Get(0)\n            if (aLastPoint = \"Part\") then\n              aLastPoint = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(0)\n            end\n            aDis1 = (_AVExtAdvEditorapt.Distance(aLastPoint)).Abs\n            aNewPtX = (aDis1 * _AVExtAdvEditorAngleSin) + aLastPoint.GetX\n            aNewPtY = (aDis1 * _AVExtAdvEditorAngleCos) + aLastPoint.GetY\n            _AVExtAdvEditorapt = aNewPtX@aNewPtY\n          elseif (_AVExtAdvEditorLengthEnb) then\n 
           aSnapReal = 1\n            aLastPoint = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0)\n            if (aLastPoint = \"Part\") then\n              aLastPoint = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(0)\n            end\n            aDis1 = _AVExtAdvEditorapt.Distance(aLastPoint)\n            aptPx = _AVExtAdvEditorapt.GetX - aLastPoint.GetX\n            aptPy = _AVExtAdvEditorapt.GetY - aLastPoint.GetY\n            aCosA = aptPx / aDis1.Abs\n   
         aSinA = aptPy / aDis1.Abs\n            aNewPx = _AVExtAdvEditorLengthSet * aCosA\n            aNewPy = _AVExtAdvEditorLengthSet * aSinA\n            aNewPtX = aNewPx + aLastPoint.GetX\n            aNewPtY = aNewPy + aLastPoint.GetY \n            _AVExtAdvEditorapt = aNewPtX@aNewPtY\n          elseif (_AVExtAdvEditorDeflectionEnb) then\n            if (_AVExtAdvEditorScratchList.Count > 1) then\n              aSnapReal = 1\n              aLastPoint = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.
Count - 1).Get(0)\n              if (aLastPoint = \"Part\") then\n                aLastPoint = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(0)\n                aLastPoint2 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 3).Get(0)\n              else\n                aLastPoint2 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(0)\n                if (aLastPoint2 = \"Part\") then\n                  aLastPoint2 = _AVExtAdvEditorScratchList.Get(_AVE
xtAdvEditorScratchList.Count - 3).Get(0)\n                end\n              end\n              aDis1 = (_AVExtAdvEditorapt.Distance(aLastPoint)).Abs\n              aDis2 = (aLastPoint2.Distance(aLastPoint)).Abs\n              aptPx = aLastPoint2.GetX - aLastPoint.GetX\n              aptPy = aLastPoint2.GetY - aLastPoint.GetY\n              aCosA = aptPx / aDis2.Abs\n              aSinA = aptPy / aDis2.Abs\n              aNewPx = aDis1 * aCosA\n              aNewPy = aDis1 * aSinA\n              aNewPtX2 = aNewPx + aL
astPoint.GetX\n              aNewPtY2 = aNewPy + aLastPoint.GetY\n              aNewPtX = ((aNewPtX2 - aLastPoint.GetX) * -_AVExtAdvEditorDeflectionCos) - ((aNewPtY2 - aLastPoint.GetY) * -_AVExtAdvEditorDeflectionSin) + aLastPoint.GetX\n              aNewPtY = ((aNewPtX2 - aLastPoint.GetX) * -_AVExtAdvEditorDeflectionSin) + ((aNewPtY2 - aLastPoint.GetY) * -_AVExtAdvEditorDeflectionCos) + aLastPoint.GetY\n              _AVExtAdvEditorapt = aNewPtX@aNewPtY\n            end\n          elseif (_AVExtAdvEditorSnapEnb)
 then\n            if (_AVExtAdvEditorSnapTU = \"pixels\") then\n              aSnapTolerance = (_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.GetWin.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\n            else\n              aSnapTolerance = _AVExtAdvEditorSnapT\n            end\n            aListK = _AVExtAdvEditorView.GetThemes\n            for each aThemeView in aLIstK  \n              aListE = _AVExtAdvEditorListSnap.Get(aThemeView)\n             
 if (aListE <> nil) then\n                for each aThemeSnapeI in 0..3\n                  aThemeSnape = aListE.Get(aThemeSnapeI)\n                  if (aThemeSnape <> 0) then\n                    aUserSnapPoint = _AVExtAdvEditorapt.Clone\n                    aThemeView.SetInteractiveSnapTolerance(aSnapTolerance)\n                    if (aThemeSnapeI = 0) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_VERTEX,aUserSnapPoint)\n                    elseif (aThemeSnapeI = 1) then\n                      
aThemeView.UserSnapPoint(#POINT_SNAP_BOUNDARY,aUserSnapPoint)\n                    elseif (aThemeSnapeI = 2) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_ENDPOINT,aUserSnapPoint)\n                    else\n                      aThemeView.UserSnapPoint(#POINT_SNAP_INTERSECTION,aUserSnapPoint)\n                    end\n                    if (aUserSnapPoint <> _AVExtAdvEditorapt) then\n                      _AVExtAdvEditorapt = aUserSnapPoint.Clone\n                      aSnapReal = 1\n           
           break\n                    end\n                  end\n                end\n              end\n              if (aSnapReal = 1) then\n                if (_AVExtAdvEditorSnapOff <> 0) then\n                  aDis1 = _AVExtAdvEditorapt.Distance(apt)\n                  aptPx = apt.GetX - _AVExtAdvEditorapt.GetX\n                  aptPy = apt.GetY - _AVExtAdvEditorapt.GetY\n                  aCosA = aptPx / aDis1.Abs\n                  aSinA = aptPy / aDis1.Abs\n                  aNewPx = _AVExtAdvEditorSnapOff 
* aCosA\n                  aNewPy = _AVExtAdvEditorSnapOff * aSinA\n                  aNewPtX = aNewPx + _AVExtAdvEditorapt.GetX\n                  aNewPtY = aNewPy + _AVExtAdvEditorapt.GetY\n                  _AVExtAdvEditorapt = aNewPtX@aNewPtY\n                end\n                break\n              end\n            end\n          end        \n          if (_AVExtAdvEditorShowCurP) then\n            if (_AVExtAdvEditorCurGr = nil) then\n              _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clon
e)\n              _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n              if (aSnapReal = 1) then\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              else\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n              end\n              agrlist.Add(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr.invalidate\n            end\n            if (aSnapReal = 1) then\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n      
      else\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n            end\n            _AVExtAdvEditorCurGr.invalidate\n            _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.clone)\n            _AVExtAdvEditorCurGr.invalidate\n          else\n            if (aSnapReal = 1) then\n              if (_AVExtAdvEditorCurGr = nil) then\n                _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n    
            _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n                agrlist.Add(_AVExtAdvEditorCurGr)\n                _AVExtAdvEditorCurGr.invalidate\n              end\n              _AVExtAdvEditorCurGr.invalidate\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.invalidate\n            else\n              if (_AVExtAdvEditorCurGr <> nil) then\n                agrlist.Rem
oveGraphic(_AVExtAdvEditorCurGr)\n                _AVExtAdvEditorCurGr = nil\n              end\n            end\n          end               \n          if (_AVExtAdvEditorScratchListPart) then\n            if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) = \"Part\") then\n              adrsh = PolyLine.MakeEmpty\n            else\n              adrshlist = list.make \n              adrshlist.add(_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.count - 1).Get(0).Clone)\n         
     adrshlist.add(_AVExtAdvEditorapt.clone)\n              if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.count - 2).Get(0) <> \"Part\") then\n                aPartNumber = _AVExtAdvEditorScratchListPartNumber.Get(_AVExtAdvEditorScratchListPartNumber.Count -1) + 1\n                adrshlist.add(_AVExtAdvEditorScratchList.Get(aPartNumber).Get(0).Clone)\n              end\n              adrsh = Polyline.Make({adrshlist})\n            end\n          else        \n            adrshlist = list.make \n      
      adrshlist.add(_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.count - 1).Get(0).Clone)\n            adrshlist.add(_AVExtAdvEditorapt.clone)\n            if (_AVExtAdvEditorScratchList.count > 1) then\n              adrshlist.add(_AVExtAdvEditorScratchList.Get(0).Get(0).clone)\n            end\n            adrsh = Polyline.Make({adrshlist})\n          end     \n          if (_AVExtAdvEditorScrathGrMouse = nil) then\n            _AVExtAdvEditorScrathGrMouse = GraphicShape.Make(adrsh)\n            _AVEx
tAdvEditorScrathGrMouse.SetName(\"_AVExtAdvEditorScrathGrMouse\")\n            _AVExtAdvEditorScrathGrMouse.SetSymbol(_AVExtAdvEditorScratchLE)\n            agrlist.Add(_AVExtAdvEditorScrathGrMouse)\n            _AVExtAdvEditorScrathGrMouse.invalidate\n          end\n          _AVExtAdvEditorScrathGrMouse.invalidate\n          _AVExtAdvEditorScrathGrMouse.SetShape(adrsh)\n          _AVExtAdvEditorScrathGrMouse.invalidate\n        end\n        if (System.IsDoubleClick) then\n          av.Run(\"AVExtAdvEditor.ToolDrawingS
top\",nil)\n        elseif (_AVExtAdvEditorClick = 1) then\n          _AVExtAdvEditorClick = nil\n          if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.Pan\n          elseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          else\n            if (_AVExtAdvEditorResetParam) then\n              _AVExtAdvEditorDeflectionEnb = false\n              _AVExtAdvEditorDeflectionCos = ni
l\n              _AVExtAdvEditorDeflectionSin = nil\n              _AVExtAdvEditorAngleEnb = false\n              _AVExtAdvEditorAngleCos = nil\n              _AVExtAdvEditorAngleSin = nil\n              _AVExtAdvEditorLengthEnb = false\n              _AVExtAdvEditorLengthSet = nil\n            end\n            _AVExtAdvEditorScratchList.add({_AVExtAdvEditorapt.clone,\"line\"})\n            av.Run(\"AVExtAdvEditor.ToolDrawingPolygon\",nil)          \n            if (_AVExtAdvEditorShowVer) then\n              aVertexEnd =
 agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n              if (aVertexEnd <> nil) then\n                if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n                  aVertexEnd.SetName(\"AVExtAdvEditorVertexCurve\")\n                else\n                  aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n                end\n                aVertexEnd.invalidate\n                aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n                aVertexEnd.invalidate\n       
         aVertex = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n                aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n                aVertex.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n                agrlist.Add(aVertex)\n              end        \n            end\n            if (_AVExtAdvEditorPanClick) then\n              _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n            end\n          end\n          av.DelayedRun(\"AVEx
tAdvEditor.ToolPenPolygonStart\",nil,0)\n        else\n          av.DelayedRun(\"AVExtAdvEditor.ToolPenPolygonEnd\",nil,0)\n        end\n      else\n        _AVExtAdvEditorClick = nil\n        if (_AVExtAdvEditorScrathGrMouse <> nil) then\n          agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n        end\n        _AVExtAdvEditorScrathGrMouse = nil\n        if (_AVExtAdvEditorCurGr <> nil) then\n           agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n        end\n        _AVExtAdvEditorCurGr = nil\n        _AVExtAdv
EditoraptL = nil\n        _AVExtAdvEditorapt = nil\n      end\n    else\n      _AVExtAdvEditorClick = nil\n      if (_AVExtAdvEditorScrathGrMouse <> nil) then\n        agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n      end\n      _AVExtAdvEditorScrathGrMouse = nil\n      if (_AVExtAdvEditorCurGr <> nil) then\n         agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n      end\n      _AVExtAdvEditorCurGr = nil\n      _AVExtAdvEditoraptL = nil\n      _AVExtAdvEditorapt = nil\n    end\n  else\n    _AVExtAdvEditorClick = ni
l\n    if (_AVExtAdvEditorScrathGrMouse <> nil) then\n      agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n    end\n    _AVExtAdvEditorScrathGrMouse = nil\n    if (_AVExtAdvEditorCurGr <> nil) then\n       agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n    end\n    _AVExtAdvEditorCurGr = nil\n    _AVExtAdvEditoraptL = nil\n    _AVExtAdvEditorapt = nil\n  end\nelse\n  _AVExtAdvEditorClick = nil\n  if (_AVExtAdvEditorScrathGrMouse <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n  end\n  _AVExtAdvEdi
torScrathGrMouse = nil\n  if (_AVExtAdvEditorCurGr <> nil) then\n     agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n  end\n  if (_AVExtAdvEditorScrathGr <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGr)\n  end\n  _AVExtAdvEditorScrathGr = nil\n  _AVExtAdvEditorCurGr = nil\n  _AVExtAdvEditoraptL = nil\n  _AVExtAdvEditorapt = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1931
	Owner:	1930
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1932
)

(DocAct.1933
	Doc:	1930
)

(SEd.1934
	Name:	"AVExtAdvEditor.ToolPenPolygonEnd"
	CreationDate:	"20 Июнь 2004 г. 4:38:41"
	GUIName:	"Script"
	Win:	1935
	CSMgr:	1936
	DocExts:	1937
	Source:	"av.Run(\"AVExtAdvEditor.ToolPenPolygon\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1935
	Owner:	1934
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1936
)

(DocAct.1937
	Doc:	1934
)

(SEd.1938
	Name:	"AVExtAdvEditor.ToolPenPolygonStart"
	CreationDate:	"20 Июнь 2004 г. 4:22:58"
	GUIName:	"Script"
	Win:	1939
	CSMgr:	1940
	DocExts:	1941
	Source:	"if (_AVExtAdvEditorStartSnapPan.Not) then\n  if (System.IsDoubleClick) then\n    av.DelayedRun(\"AVExtAdvEditor.ToolDrawingStop\",nil,0)\n  else\n    if (_AVExtAdvEditorScratchList = nil) then\n      _AVExtAdvEditorScratchListPart = false\n      _AVExtAdvEditorScratchList = List.Make\n      adis = _AVExtAdvEditorView.getdisplay\n      agrlist = _AVExtAdvEditorView.getgraphics\n      if (_AVExtAdvEditoraptS = nil) then\n        _AVExtAdvEditoraptS = adis.returnuserpoint\n      else\n        _AVExtAdvEditorapt = adis.retur
nuserpoint\n      end\n      _AVExtAdvEditorScratchList.Add({_AVExtAdvEditoraptS.Clone,\"line\"})\n      if (_AVExtAdvEditorShowVer) then\n        aVertex = GraphicShape.Make(_AVExtAdvEditoraptS.Clone)\n        aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n        aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n        aVertex.SetObjectTag(0)\n        agrlist.Add(aVertex)\n      end\n      _AVExtAdvEditoraptS = nil\n    end\n    if (_AVExtAdvEditorClick = nil) then\n      _AVExtAdvEditorClick = 2\n      av.Run(\"AVExtAdvEditor.T
oolPenPolygon\",nil)\n    else\n      _AVExtAdvEditorClick = 1\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1939
	Owner:	1938
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1940
)

(DocAct.1941
	Doc:	1938
)

(SEd.1942
	Name:	"AVExtAdvEditor.ToolPenPolyline"
	CreationDate:	"30 Апрель 2004 г. 1:40:07"
	GUIName:	"Script"
	Win:	1943
	CSMgr:	1944
	DocExts:	1945
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScratchList <> nil) then\n  if (_AVExtAdvEditorView = av.Getactivedoc) then\n    if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEPen\").IsSelected) then\n      if ((_AVExtAdvEditorDrawClass = \"polyline\") or (_AVExtAdvEditorDrawClass = \"multi\")) then\n        apt = _AVExtAdvEditorView.getdisplay.returnuserpoint\n        if (_AVExtAdvEditorPan) then\n          aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n          aDisa
pt = aViewRect.GetWidth / 100\n          if (aViewRect.AsPolygon.AsPolyline.Distance(apt).Abs < aDisapt) then\n            aptpan = Polyline.Make({{aViewRect.ReturnCenter,apt}}).Along(10)\n            _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n          end\n        end\n        if (apt <> _AVExtAdvEditoraptL) then\n          _AVExtAdvEditoraptL = apt.Clone\n          _AVExtAdvEditorapt = apt.Clone\n          aSnapReal = 0\n          if (_AVExtAdvEditorAngleEnb) then\n            aSnapReal = 1\n            aLastPoin
t = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0)\n            if (aLastPoint = \"Part\") then\n              aLastPoint = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(0)\n            end\n            aDis1 = (_AVExtAdvEditorapt.Distance(aLastPoint)).Abs\n            aNewPtX = (aDis1 * _AVExtAdvEditorAngleSin) + aLastPoint.GetX\n            aNewPtY = (aDis1 * _AVExtAdvEditorAngleCos) + aLastPoint.GetY\n            _AVExtAdvEditorapt = aNewPtX@aNewPtY\n        
  elseif (_AVExtAdvEditorLengthEnb) then\n            aSnapReal = 1\n            aLastPoint = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0)\n            if (aLastPoint = \"Part\") then\n              aLastPoint = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(0)\n            end\n            aDis1 = _AVExtAdvEditorapt.Distance(aLastPoint)\n            aptPx = _AVExtAdvEditorapt.GetX - aLastPoint.GetX\n            aptPy = _AVExtAdvEditorapt.GetY - aLastPoint.GetY
\n            aCosA = aptPx / aDis1.Abs\n            aSinA = aptPy / aDis1.Abs\n            aNewPx = _AVExtAdvEditorLengthSet * aCosA\n            aNewPy = _AVExtAdvEditorLengthSet * aSinA\n            aNewPtX = aNewPx + aLastPoint.GetX\n            aNewPtY = aNewPy + aLastPoint.GetY \n            _AVExtAdvEditorapt = aNewPtX@aNewPtY\n          elseif (_AVExtAdvEditorDeflectionEnb) then\n            if (_AVExtAdvEditorScratchList.Count > 1) then\n              aSnapReal = 1\n              aLastPoint = _AVExtAdvEditorS
cratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0)\n              if (aLastPoint = \"Part\") then\n                aLastPoint = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(0)\n                aLastPoint2 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 3).Get(0)\n              else\n                aLastPoint2 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(0)\n                if (aLastPoint2 = \"Part\") then\n                  aLastPo
int2 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 3).Get(0)\n                end\n              end\n              aDis1 = (_AVExtAdvEditorapt.Distance(aLastPoint)).Abs\n              aDis2 = (aLastPoint2.Distance(aLastPoint)).Abs\n              aptPx = aLastPoint2.GetX - aLastPoint.GetX\n              aptPy = aLastPoint2.GetY - aLastPoint.GetY\n              aCosA = aptPx / aDis2.Abs\n              aSinA = aptPy / aDis2.Abs\n              aNewPx = aDis1 * aCosA\n              aNewPy = aDis1 * 
aSinA\n              aNewPtX2 = aNewPx + aLastPoint.GetX\n              aNewPtY2 = aNewPy + aLastPoint.GetY\n              aNewPtX = ((aNewPtX2 - aLastPoint.GetX) * -_AVExtAdvEditorDeflectionCos) - ((aNewPtY2 - aLastPoint.GetY) * -_AVExtAdvEditorDeflectionSin) + aLastPoint.GetX\n              aNewPtY = ((aNewPtX2 - aLastPoint.GetX) * -_AVExtAdvEditorDeflectionSin) + ((aNewPtY2 - aLastPoint.GetY) * -_AVExtAdvEditorDeflectionCos) + aLastPoint.GetY\n              _AVExtAdvEditorapt = aNewPtX@aNewPtY\n            end
\n          elseif (_AVExtAdvEditorSnapEnb) then\n            if (_AVExtAdvEditorSnapTU = \"pixels\") then\n              aSnapTolerance = (_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.GetWin.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\n            else\n              aSnapTolerance = _AVExtAdvEditorSnapT\n            end\n            aListK = _AVExtAdvEditorView.GetThemes\n            for each aThemeView in aLIstK  \n              aListE = _AVExtAdvEd
itorListSnap.Get(aThemeView)\n              if (aListE <> nil) then\n                for each aThemeSnapeI in 0..3\n                  aThemeSnape = aListE.Get(aThemeSnapeI)\n                  if (aThemeSnape <> 0) then\n                    aUserSnapPoint = _AVExtAdvEditorapt.Clone\n                    aThemeView.SetInteractiveSnapTolerance(aSnapTolerance)\n                    if (aThemeSnapeI = 0) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_VERTEX,aUserSnapPoint)\n                    elseif (aTh
emeSnapeI = 1) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_BOUNDARY,aUserSnapPoint)\n                    elseif (aThemeSnapeI = 2) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_ENDPOINT,aUserSnapPoint)\n                    else\n                      aThemeView.UserSnapPoint(#POINT_SNAP_INTERSECTION,aUserSnapPoint)\n                    end\n                    if (aUserSnapPoint <> _AVExtAdvEditorapt) then\n                      _AVExtAdvEditorapt = aUserSnapPoint.Clone\n     
                 aSnapReal = 1\n                      break\n                    end\n                  end\n                end\n              end\n              if (aSnapReal = 1) then\n                if (_AVExtAdvEditorSnapOff <> 0) then\n                  aDis1 = _AVExtAdvEditorapt.Distance(apt)\n                  aptPx = apt.GetX - _AVExtAdvEditorapt.GetX\n                  aptPy = apt.GetY - _AVExtAdvEditorapt.GetY\n                  aCosA = aptPx / aDis1.Abs\n                  aSinA = aptPy / aDis1.Abs\n        
          aNewPx = _AVExtAdvEditorSnapOff * aCosA\n                  aNewPy = _AVExtAdvEditorSnapOff * aSinA\n                  aNewPtX = aNewPx + _AVExtAdvEditorapt.GetX\n                  aNewPtY = aNewPy + _AVExtAdvEditorapt.GetY\n                  _AVExtAdvEditorapt = aNewPtX@aNewPtY\n                end\n                break\n              end\n            end\n          end        \n          if (_AVExtAdvEditorShowCurP) then\n            if (_AVExtAdvEditorCurGr = nil) then\n              _AVExtAdvEditorCurGr =
 GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n              if (aSnapReal = 1) then\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              else\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n              end\n              agrlist.Add(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr.invalidate\n            end\n            if (aSnapReal = 1) then\n              _AVExtAdvEditorCurGr
.SetSymbol(_AVExtAdvEditorScratchP)\n            else\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n            end\n            _AVExtAdvEditorCurGr.invalidate\n            _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.clone)\n            _AVExtAdvEditorCurGr.invalidate\n          else\n            if (aSnapReal = 1) then\n              if (_AVExtAdvEditorCurGr = nil) then\n                _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                _AVExtAdvEditor
CurGr.SetName(\"_AVExtAdvEditorCurGr\")\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n                agrlist.Add(_AVExtAdvEditorCurGr)\n                _AVExtAdvEditorCurGr.invalidate\n              end\n              _AVExtAdvEditorCurGr.invalidate\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.invalidate\n            else\n              if (_AVExtAdvEditorCurG
r <> nil) then\n                agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n                _AVExtAdvEditorCurGr = nil\n              end\n            end\n          end               \n          if (_AVExtAdvEditorScratchListPart) then\n            if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) = \"Part\") then\n              adrsh = PolyLine.MakeEmpty\n            else\n              adrshlist = list.make \n              adrshlist.add(_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScra
tchList.count - 1).Get(0).Clone)\n              adrshlist.add(_AVExtAdvEditorapt.clone)\n              adrsh = Polyline.Make({adrshlist})\n            end\n          else        \n            adrshlist = list.make \n            adrshlist.add(_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.count - 1).Get(0).Clone)\n            adrshlist.add(_AVExtAdvEditorapt.clone)\n            adrsh = Polyline.Make({adrshlist})\n          end     \n          if (_AVExtAdvEditorScrathGrMouse = nil) then\n            _AVExtAd
vEditorScrathGrMouse = GraphicShape.Make(adrsh)\n            _AVExtAdvEditorScrathGrMouse.SetName(\"_AVExtAdvEditorScrathGrMouse\")\n            _AVExtAdvEditorScrathGrMouse.SetSymbol(_AVExtAdvEditorScratchLE)\n            agrlist.Add(_AVExtAdvEditorScrathGrMouse)\n            _AVExtAdvEditorScrathGrMouse.invalidate\n          end\n          _AVExtAdvEditorScrathGrMouse.invalidate\n          _AVExtAdvEditorScrathGrMouse.SetShape(adrsh)\n          _AVExtAdvEditorScrathGrMouse.invalidate\n        end\n        if (System.
IsDoubleClick) then\n          av.Run(\"AVExtAdvEditor.ToolDrawingStop\",nil)\n        elseif (_AVExtAdvEditorClick = 1) then\n          _AVExtAdvEditorClick = nil\n          if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.Pan\n          elseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          else\n            if (_AVExtAdvEditorResetParam) then\n              _AVExtAdvEditorDefl
ectionEnb = false\n              _AVExtAdvEditorDeflectionCos = nil\n              _AVExtAdvEditorDeflectionSin = nil\n              _AVExtAdvEditorAngleEnb = false\n              _AVExtAdvEditorAngleCos = nil\n              _AVExtAdvEditorAngleSin = nil\n              _AVExtAdvEditorLengthEnb = false\n              _AVExtAdvEditorLengthSet = nil\n            end\n            _AVExtAdvEditorScratchList.add({_AVExtAdvEditorapt.clone,\"line\"})\n            av.Run(\"AVExtAdvEditor.ToolDrawing\",nil)          \n            i
f (_AVExtAdvEditorShowVer) then\n              aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n              if (aVertexEnd <> nil) then\n                if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n                  aVertexEnd.SetName(\"AVExtAdvEditorVertexCurve\")\n                else\n                  aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n                end\n                aVertexEnd.invalidate\n                aVertexEnd.SetSymbol(_AVExtAdvE
ditorVertex)\n                aVertexEnd.invalidate\n                aVertex = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n                aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n                aVertex.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n                agrlist.Add(aVertex)\n              end        \n            end\n            if (_AVExtAdvEditorPanClick) then\n              _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n 
           end\n          end\n          av.DelayedRun(\"AVExtAdvEditor.ToolPenPolylineStart\",nil,0)\n        else\n          av.DelayedRun(\"AVExtAdvEditor.ToolPenPolylineEnd\",nil,0)\n        end\n      else\n        _AVExtAdvEditorClick = nil\n        if (_AVExtAdvEditorScrathGrMouse <> nil) then\n          agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n        end\n        _AVExtAdvEditorScrathGrMouse = nil\n        if (_AVExtAdvEditorCurGr <> nil) then\n           agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n    
    end\n        _AVExtAdvEditorCurGr = nil\n        _AVExtAdvEditoraptL = nil\n        _AVExtAdvEditorapt = nil\n      end\n    else\n      _AVExtAdvEditorClick = nil\n      if (_AVExtAdvEditorScrathGrMouse <> nil) then\n        agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n      end\n      _AVExtAdvEditorScrathGrMouse = nil\n      if (_AVExtAdvEditorCurGr <> nil) then\n         agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n      end\n      _AVExtAdvEditorCurGr = nil\n      _AVExtAdvEditoraptL = nil\n      _AVExtAdv
Editorapt = nil\n    end\n  else\n    _AVExtAdvEditorClick = nil\n    if (_AVExtAdvEditorScrathGrMouse <> nil) then\n      agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n    end\n    _AVExtAdvEditorScrathGrMouse = nil\n    if (_AVExtAdvEditorCurGr <> nil) then\n       agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n    end\n    _AVExtAdvEditorCurGr = nil\n    _AVExtAdvEditoraptL = nil\n    _AVExtAdvEditorapt = nil\n  end\nelse\n  _AVExtAdvEditorClick = nil\n  if (_AVExtAdvEditorScrathGrMouse <> nil) then\n    agrlist.Remo
veGraphic(_AVExtAdvEditorScrathGrMouse)\n  end\n  _AVExtAdvEditorScrathGrMouse = nil\n  if (_AVExtAdvEditorCurGr <> nil) then\n     agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n  end\n  if (_AVExtAdvEditorScrathGr <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGr)\n  end\n  _AVExtAdvEditorScrathGr = nil\n  _AVExtAdvEditorCurGr = nil\n  _AVExtAdvEditoraptL = nil\n  _AVExtAdvEditorapt = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1943
	Owner:	1942
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1944
)

(DocAct.1945
	Doc:	1942
)

(SEd.1946
	Name:	"AVExtAdvEditor.ToolPenPolylineClick"
	CreationDate:	"30 Апрель 2004 г. 4:36:43"
	GUIName:	"Script"
	Win:	1947
	CSMgr:	1948
	DocExts:	1949
	Source:	"if (_AVExtAdvEditorScratchList <> nil) then\n  aNum = _AVExtAdvEditorScratchList.Count - 1\n  if (_AVExtAdvEditorScratchList.Get(aNum).Get(0) = nil) then\n    _AVExtAdvEditorScratchList.Remove(aNum)\n  end\n  if (_AVExtAdvEditorShowVer.Not) then\n    agrlist = _AVExtAdvEditorView.getgraphics\n    aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorVertex\")\n    if (aListVertex <> nil) then\n      for each iaListVertex in aListVertex\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexEnd = ag
rlist.FindAllByName(\"AVExtAdvEditorVertexEnd\")\n    if (aListVertexEnd <> nil) then\n      for each iaListVertexEnd in aListVertexEnd\n        agrlist.RemoveGraphic(iaListVertexEnd)\n      end\n    end\n    aListVertexCurve = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurve\")\n    if (aListVertexCurve <> nil) then\n      for each iaListVertex in aListVertexCurve\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexCurveP1 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP1\")\n    if (aListVe
rtexCurveP1 <> nil) then\n      for each iaListVertex in aListVertexCurveP1\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexCurveP2 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP2\")\n    if (aListVertexCurveP2 <> nil) then\n      for each iaListVertex in aListVertexCurveP2\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n  end\nelse\n  if (_AVExtAdvEditorStartSnapRun.Not) then\n     av.Run(\"AVExtAdvEditor.StartSnapPoint\",nil)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1947
	Owner:	1946
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1948
)

(DocAct.1949
	Doc:	1946
)

(SEd.1950
	Name:	"AVExtAdvEditor.ToolPenPolylineEnd"
	CreationDate:	"30 Апрель 2004 г. 2:34:24"
	GUIName:	"Script"
	Win:	1951
	CSMgr:	1952
	DocExts:	1953
	Source:	"av.Run(\"AVExtAdvEditor.ToolPenPolyline\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1951
	Owner:	1950
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1952
)

(DocAct.1953
	Doc:	1950
)

(SEd.1954
	Name:	"AVExtAdvEditor.ToolPenPolylineStart"
	CreationDate:	"30 Апрель 2004 г. 1:20:23"
	GUIName:	"Script"
	Win:	1955
	CSMgr:	1956
	DocExts:	1957
	Source:	"if (_AVExtAdvEditorStartSnapPan.Not) then\n  if (System.IsDoubleClick) then\n    av.DelayedRun(\"AVExtAdvEditor.ToolDrawingStop\",nil,0)\n  else\n    if (_AVExtAdvEditorScratchList = nil) then\n      _AVExtAdvEditorScratchListPart = false\n      _AVExtAdvEditorScratchList = List.Make\n      adis = _AVExtAdvEditorView.getdisplay\n      agrlist = _AVExtAdvEditorView.getgraphics\n      if (_AVExtAdvEditoraptS = nil) then\n        _AVExtAdvEditoraptS = adis.returnuserpoint\n      else\n        _AVExtAdvEditorapt = adis.retur
nuserpoint\n      end\n      _AVExtAdvEditorScratchList.Add({_AVExtAdvEditoraptS.Clone,\"line\"})\n      if (_AVExtAdvEditorShowVer) then\n        aVertex = GraphicShape.Make(_AVExtAdvEditoraptS.Clone)\n        aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n        aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n        aVertex.SetObjectTag(0)\n        agrlist.Add(aVertex)\n      end\n      _AVExtAdvEditoraptS = nil\n    end\n    if (_AVExtAdvEditorClick = nil) then\n      _AVExtAdvEditorClick = 2\n      av.Run(\"AVExtAdvEditor.T
oolPenPolyline\",nil)\n    else\n      _AVExtAdvEditorClick = 1\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1955
	Owner:	1954
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1956
)

(DocAct.1957
	Doc:	1954
)

(SEd.1958
	Name:	"AVExtAdvEditor.ToolPenUpd"
	CreationDate:	"20 Июнь 2004 г. 4:27:05"
	GUIName:	"Script"
	Win:	1959
	CSMgr:	1960
	DocExts:	1961
	Source:	"self.SetEnabled(true)\naTask = av.FindDialog(\"AVExtAdvEditor.Task\").FindByName(\"aCBTask\").GetCurrentValue\nif (aTask = \"Create New Feature\") then\n  if (_AVExtAdvEditorTheme = nil) then\n    self.SetEnabled(false)\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n        self.SetApply(\"AVExtAdvEditor.ToolPenPolygonStart\")\n        self.SetClick(\"AVExtAdvEditor.ToolPenPolylineClick\")\n        _AVExtAdvEditorDrawCl
ass = \"polygon\"\n      elseif (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPELINE) then\n        self.SetApply(\"AVExtAdvEditor.ToolPenPolylineStart\")\n        self.SetClick(\"AVExtAdvEditor.ToolPenPolylineClick\")\n        _AVExtAdvEditorDrawClass = \"polyline\"\n      elseif (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEMULTIPOINT) then\n        self.SetApply(\"AVExtAdvEditor.ToolPenPolylineStart\")\n        self.SetClick(\"AVExtAdvEditor.ToolPenPolylineClick\")\n        _A
VExtAdvEditorDrawClass = \"multi\"\n      elseif (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOINT) then\n        self.SetApply(\"AVExtAdvEditor.ToolPenPointStart\")\n        self.SetClick(\"AVExtAdvEditor.ToolPenPointClick\")\n        av.run(\"AVExtAdvEditor.PopUPDelSketch\",nil)\n        _AVExtAdvEditorDrawClass = \"point\"\n      end\n    else\n      self.SetEnabled(false)\n    end\n  end\nelseif (aTask = \"Auto Complete Polygon\") then\n  if (_AVExtAdvEditorTheme = nil) then\n    self.SetEnabled(false
)\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n        self.SetApply(\"AVExtAdvEditor.ToolPenPolylineStart\")\n        self.SetClick(\"AVExtAdvEditor.ToolPenPolylineClick\")\n        _AVExtAdvEditorDrawClass = \"polyline\"\n      else\n        self.SetEnabled(false)\n      end\n    else\n      self.SetEnabled(false)\n    end\n  end\nelseif (aTask = \"Cut Polygon\") then\n  if (_AVExtAdvEditorTheme = nil) then\n    self.Se
tEnabled(false)\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n        self.SetApply(\"AVExtAdvEditor.ToolPenPolylineStart\")\n        self.SetClick(\"AVExtAdvEditor.ToolPenPolylineClick\")\n        _AVExtAdvEditorDrawClass = \"polyline\"\n      else\n        self.SetEnabled(false)\n      end\n    else\n      self.SetEnabled(false)\n    end\n  end\nelseif (aTask = \"Split Polyline\") then\n  if (_AVExtAdvEditorTheme = nil)
 then\n    self.SetEnabled(false)\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPELINE) then\n        self.SetApply(\"AVExtAdvEditor.ToolPenPolylineStart\")\n        self.SetClick(\"AVExtAdvEditor.ToolPenPolylineClick\")\n        _AVExtAdvEditorDrawClass = \"polyline\"\n      else\n        self.SetEnabled(false)\n      end\n    else\n      self.SetEnabled(false)\n    end\n  end  \nelseif (aTask = \"Modify Feature\") then\n  \nelseif (aTa
sk = \"Resape Feature\") then\n  self.SetApply(\"AVExtAdvEditor.ToolPenPolylineStart\")\n  self.SetClick(\"AVExtAdvEditor.ToolPenPolylineClick\")\n  _AVExtAdvEditorDrawClass = \"polyline\"\n  aValid = false\n  aTL = _AVExtAdvEditorList.ReturnKeys\n  for each i in aTL\n    if (_AVExtAdvEditorList.Get(i) = 1) then\n      if (i.GetFTab.IsEditable) then\n        if ((i.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) or (i.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPELINE)) then\n          if (i.GetFTab.GetSelection.Co
unt > 0) then\n            aValid = true\n            break\n          end\n        end\n      end\n    end\n  end\n  self.setenabled(aValid)\nelseif (aTask = \"Select Features Using an Area\") then\n  self.SetApply(\"AVExtAdvEditor.ToolPenPolygonStart\")\n  self.SetClick(\"AVExtAdvEditor.ToolPenPolylineClick\")\n  _AVExtAdvEditorDrawClass = \"polygon\"\nelseif (aTask = \"Select Features Using a Line\") then\n  self.SetApply(\"AVExtAdvEditor.ToolPenPolylineStart\")\n  self.SetClick(\"AVExtAdvEditor.ToolPenPolylineClick\")\n  _AVExtAdvEd
itorDrawClass = \"polyline\"\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1959
	Owner:	1958
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1960
)

(DocAct.1961
	Doc:	1958
)

(SEd.1962
	Name:	"AVExtAdvEditor.ToolRotate"
	CreationDate:	"15 Июль 2004 г. 2:19:12"
	GUIName:	"Script"
	Win:	1963
	CSMgr:	1964
	DocExts:	1965
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\naListVertexCenter = agrlist.FindByName(\"AVExtAdvEditorSelectingCenter\")\nif (aListVertexCenter <> nil) then\n  agrlist.SetNumberFormat(\"dd.dddddddddddddddddddddddddddd\")\n  Script.The.SetNumberFormat(\"dd.dddddddddddddddddddddddddddd\")\n  aListVertexCenter\n  if (_AVExtAdvEditorRotateStartPt <> nil) then\n    if (_AVExtAdvEditorView = av.Getactivedoc) then\n      if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEMoveMenu\").GetControls.Get(2).IsSelected)
 then\n        apt = _AVExtAdvEditorView.getdisplay.returnuserpoint\n        if (_AVExtAdvEditorPan) then\n          aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n          aDisapt = aViewRect.GetWidth / 100\n          if (aViewRect.AsPolygon.AsPolyline.Distance(apt).Abs < aDisapt) then\n            aptpan = Polyline.Make({{aViewRect.ReturnCenter,apt}}).Along(10)\n            _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n          end\n        end\n        if (apt <> _AVExtAdvEditoraptSR) then\n         
 _AVExtAdvEditoraptSR = apt.Clone\n          centerPt = aListVertexCenter.GetShape.Clone\n          centerPtX = centerPt.GetX\n          centerPtY = centerPt.GetY\n          aUg1 = ((centerPtX - (_AVExtAdvEditorRotateStartPt.GetX)) / (Line.Make(_AVExtAdvEditorRotateStartPt,centerPt).Returnlength)).ACos.AsDegrees\n          aUg2 = ((centerPtX - (_AVExtAdvEditoraptSR.GetX)) / (Line.Make(_AVExtAdvEditoraptSR,centerPt).Returnlength)).ACos.AsDegrees\n          if ((centerPtY - (_AVExtAdvEditoraptSR.GetY)) < 0) then\n  
          aUg2 = 360 - aUg2\n          end\n          if ((centerPtY - (_AVExtAdvEditorRotateStartPt.GetY)) < 0) then\n            aUg1 = 360 - aUg1\n          end\n          aUg = aUg2 - aUg1\n          aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelectingRotate\")\n          if (aListVertex <> nil) then\n            moveX = 0 - centerPtX\n            moveY = 0 - centerPtY\n            aTrans = Transform2D.Make\n            aTrans.Move(moveX@moveY)\n            aTrans.Rotate(aUg)\n            aTrans.Move(centerPt
X@centerPtY)\n            for each aListVertexi in aListVertex\n              aListVertexi.Invalidate\n              aShape = aListVertexi.GetObjectTag.Clone              \n              aShape.Transform(aTrans)\n              aListVertexi.SetShape(aShape)\n              aListVertexi.Invalidate\n            end\n          end\n        end\n        if (_AVExtAdvEditorRotateClick = 1) then\n          _AVExtAdvEditorRotateClick = nil\n          if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n            _AVExtAdv
EditorView.GetDisplay.Pan\n          elseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditoraptSR)\n          else\n            thePrjView = _AVExtAdvEditorView.GetProjection\n            aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelectingRotate\")\n            if (aListVertex <> nil) then\n              for each igraph in aListVertex\n                agrlist.RemoveGraphic(igraph)\n              end\n            end\n            centerPt
 = aListVertexCenter.GetShape.Clone\n            centerPtX = centerPt.GetX\n            centerPtY = centerPt.GetY\n            aUg1 = ((centerPtX - (_AVExtAdvEditorRotateStartPt.GetX)) / (Line.Make(_AVExtAdvEditorRotateStartPt,centerPt).Returnlength)).ACos.AsDegrees\n            aUg2 = ((centerPtX - (_AVExtAdvEditoraptSR.GetX)) / (Line.Make(_AVExtAdvEditoraptSR,centerPt).Returnlength)).ACos.AsDegrees\n            if ((centerPtY - (_AVExtAdvEditoraptSR.GetY)) < 0) then\n              aUg2 = 360 - aUg2\n            
end\n            if ((centerPtY - (_AVExtAdvEditorRotateStartPt.GetY)) < 0) then\n              aUg1 = 360 - aUg1\n            end\n            aUg = aUg2 - aUg1\n            moveX = 0 - centerPtX\n            moveY = 0 - centerPtY\n            aTrans = Transform2D.Make\n            aTrans.Move(moveX@moveY)\n            aTrans.Rotate(aUg)\n            aTrans.Move(centerPtX@centerPtY)\n            aThList = _AVExtAdvEditorList.ReturnKeys\n            for each iThemes in aThList\n              if (_AVExtAdvEditorList.Get(
iThemes) = 1) then\n                aFTab = iThemes.GetFTab\n                if (aFTab.IsEditable) then\n                  aSF = aFTab.FindField(\"Shape\")\n                  if (aSF <> nil) then\n                    aSel = aFTAb.GetSelection\n                    if (aSel.Count > 0) then\n                      aFTab.BeginTransaction\n                      for each i in aSel\n                        aShape = aFtab.ReturnValue(aSf,i)\n                        if (thePrjView.IsNull.Not) then\n                          aShap
e = aShape.Returnprojected(thePrjView)\n                        end\n                        aShape.Transform (aTrans)\n                        if (thePrjView.IsNull.Not) then\n                          aShape = aShape.ReturnUnprojected(thePrjView)\n                        end\n                        aFtab.SetValue(aSf,i,aShape)\n                      end \n                      aFTab.EndTransaction   \n                      iThemes.Invalidate(true)\n                    end\n                  end\n                end\n
              end\n            end\n            if (_AVExtAdvEditorPanClick) then\n              _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n            end\n            _AVExtAdvEditorRotateStartPt = nil\n          end\n          av.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)\n          _AVExtAdvEditoraptMoving = false\n          av.DelayedRun(\"AVExtAdvEditor.ToolMoveCenter\",nil,0)\n        else\n          av.DelayedRun(\"AVExtAdvEditor.ToolRotateEnd\",nil,0)\n        end\n      else\n        _AVExtAdv
EditoraptMoving = false\n        _AVExtAdvEditorRotateClick = nil\n        _AVExtAdvEditorRotateStartPt = nil\n        aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelectingRotate\")\n        if (aListVertex <> nil) then\n          for each igraph in aListVertex\n            agrlist.RemoveGraphic(igraph)\n          end\n        end\n      end\n    else\n      _AVExtAdvEditoraptMoving = false\n      _AVExtAdvEditorRotateClick = nil\n      _AVExtAdvEditorRotateStartPt = nil\n      aListVertex = agrlist.FindAllByName(\"
AVExtAdvEditorSelectingRotate\")\n      if (aListVertex <> nil) then\n        for each igraph in aListVertex\n          agrlist.RemoveGraphic(igraph)\n        end\n      end\n    end\n  else\n    _AVExtAdvEditoraptMoving = false\n    _AVExtAdvEditorRotateClick = nil\n    _AVExtAdvEditorRotateStartPt = nil\n    aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelectingRotate\")\n    if (aListVertex <> nil) then\n      for each igraph in aListVertex\n        agrlist.RemoveGraphic(igraph)\n      end\n    end\n  end\nelse\n  _AVE
xtAdvEditoraptMoving = false\n  _AVExtAdvEditorRotateClick = nil\n  _AVExtAdvEditorRotateStartPt = nil\n  aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelectingRotate\")\n  if (aListVertex <> nil) then\n    for each igraph in aListVertex\n      agrlist.RemoveGraphic(igraph)\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1963
	Owner:	1962
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1964
)

(DocAct.1965
	Doc:	1962
)

(SEd.1966
	Name:	"AVExtAdvEditor.ToolRotateEnd"
	CreationDate:	"15 Июль 2004 г. 0:41:14"
	GUIName:	"Script"
	Win:	1967
	CSMgr:	1968
	DocExts:	1969
	Source:	"av.Run(\"AVExtAdvEditor.ToolRotate\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1967
	Owner:	1966
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1968
)

(DocAct.1969
	Doc:	1966
)

(SEd.1970
	Name:	"AVExtAdvEditor.ToolRotateStart"
	CreationDate:	"15 Июль 2004 г. 0:03:14"
	GUIName:	"Script"
	Win:	1971
	CSMgr:	1972
	DocExts:	1973
	Source:	"if (_AVExtAdvEditoraptMoveSM <> nil) then\n  _AVExtAdvEditoraptMoving = true\n  if (_AVExtAdvEditorRotateMoveClick = nil) then\n    _AVExtAdvEditorRotateMoveClick = 2\n    av.Run(\"AVExtAdvEditor.ToolMoveCenterPoint\",nil)\n  else\n    _AVExtAdvEditorRotateMoveClick = 1\n  end\nelse\n  agrlist = _AVExtAdvEditorView.getgraphics\n  _AVExtAdvEditoraptMoving = true\n  if (_AVExtAdvEditorRotateStartPt = nil) then\n    _AVExtAdvEditoraptMoving = true\n    _AVExtAdvEditorRotateStartPt = _AVExtAdvEditorView.getdisplay.returnuserp
oint.clone\n    aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelectingRotate\")\n    if (aListVertex <> nil) then\n      for each igraph in aListVertex\n        agrlist.RemoveGraphic(igraph)\n      end\n    end\n    aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelecting\")\n    if (aListVertex <> nil) then\n      for each igraph in aListVertex\n        aNG = igraph.Clone\n        aNg.SetShape(igraph.getshape.clone)\n        aNG.SetObjectTag(aNg.getshape.clone)\n        aNG.SetName(\"AVExtAdvEditorSelectingRotat
e\")\n        agrlist.Add(aNG)\n      end\n    end\n  end\n  if (_AVExtAdvEditorRotateClick = nil) then\n    _AVExtAdvEditorRotateClick = 2\n    av.Run(\"AVExtAdvEditor.ToolRotate\",nil)\n  else\n    _AVExtAdvEditorRotateClick = 1\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1971
	Owner:	1970
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1972
)

(DocAct.1973
	Doc:	1970
)

(SEd.1974
	Name:	"AVExtAdvEditor.ToolScale"
	CreationDate:	"15 Июль 2004 г. 2:06:25"
	GUIName:	"Script"
	Win:	1975
	CSMgr:	1976
	DocExts:	1977
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\naListVertexCenter = agrlist.FindByName(\"AVExtAdvEditorSelectingCenter\")\nif (aListVertexCenter <> nil) then\n  agrlist.SetNumberFormat(\"dd.dddddddddddddddddddddddddddd\")\n  Script.The.SetNumberFormat(\"dd.dddddddddddddddddddddddddddd\")\n  if (_AVExtAdvEditorRotateStartPt <> nil) then\n    if (_AVExtAdvEditorView = av.Getactivedoc) then\n      if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEMoveMenu\").GetControls.Get(2).IsSelected) then\n        apt = 
_AVExtAdvEditorView.getdisplay.returnuserpoint\n        if (_AVExtAdvEditorPan) then\n          aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n          aDisapt = aViewRect.GetWidth / 100\n          if (aViewRect.AsPolygon.AsPolyline.Distance(apt).Abs < aDisapt) then\n            aptpan = Polyline.Make({{aViewRect.ReturnCenter,apt}}).Along(10)\n            _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n          end\n        end\n        if (apt <> _AVExtAdvEditoraptSR) then\n          _AVExtAdvEditoraptS
R = apt.Clone\n          centerPt = aListVertexCenter.GetShape.Clone\n          centerPtX = centerPt.GetX\n          centerPtY = centerPt.GetY\n          aSc = (Line.Make(_AVExtAdvEditoraptSR,centerPt).Returnlength) / (Line.Make(_AVExtAdvEditorRotateStartPt,centerPt).Returnlength)\n          aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelectingRotate\")\n          if (aListVertex <> nil) then\n            moveX = 0 - centerPtX\n            moveY = 0 - centerPtY\n            aTrans = Transform2D.Make\n          
  aTrans.Move(moveX@moveY)\n            aTrans.Scale(aSc@aSc)\n            aTrans.Move(centerPtX@centerPtY)\n            for each aListVertexi in aListVertex\n              aListVertexi.Invalidate\n              aShape = aListVertexi.GetObjectTag.Clone              \n              aShape.Transform(aTrans)\n              aListVertexi.SetShape(aShape)\n              aListVertexi.Invalidate\n            end\n          end\n        end\n        if (_AVExtAdvEditorRotateClick = 1) then\n          _AVExtAdvEditorRotateClick =
 nil\n          if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.Pan\n          elseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditoraptSR)\n          else\n            thePrjView = _AVExtAdvEditorView.GetProjection\n            aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelectingRotate\")\n            if (aListVertex <> nil) then\n              for each igraph in aListVertex\n       
         agrlist.RemoveGraphic(igraph)\n              end\n            end\n            centerPt = aListVertexCenter.GetShape.Clone\n            centerPtX = centerPt.GetX\n            centerPtY = centerPt.GetY\n            aSc = (Line.Make(_AVExtAdvEditoraptSR,centerPt).Returnlength) / (Line.Make(_AVExtAdvEditorRotateStartPt,centerPt).Returnlength)\n            moveX = 0 - centerPtX\n            moveY = 0 - centerPtY\n            aTrans = Transform2D.Make\n            aTrans.Move(moveX@moveY)\n            aTrans.Scale
(aSc@aSc)\n            aTrans.Move(centerPtX@centerPtY)\n            aThList = _AVExtAdvEditorList.ReturnKeys\n            for each iThemes in aThList\n              if (_AVExtAdvEditorList.Get(iThemes) = 1) then\n                aFTab = iThemes.GetFTab\n                if (aFTab.IsEditable) then\n                  aSF = aFTab.FindField(\"Shape\")\n                  if (aSF <> nil) then\n                    aSel = aFTAb.GetSelection\n                    if (aSel.Count > 0) then\n                      aFTab.BeginTransact
ion\n                      for each i in aSel\n                        aShape = aFtab.ReturnValue(aSf,i)\n                        if (thePrjView.IsNull.Not) then\n                          aShape = aShape.Returnprojected(thePrjView)\n                        end\n                        aShape.Transform (aTrans)\n                        if (thePrjView.IsNull.Not) then\n                          aShape = aShape.ReturnUnprojected(thePrjView)\n                        end\n                        aFtab.SetValue(aSf,i,aSha
pe)\n                      end \n                      aFTab.EndTransaction   \n                      iThemes.Invalidate(true)\n                    end\n                  end\n                end\n              end\n            end\n            if (_AVExtAdvEditorPanClick) then\n              _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n            end\n            _AVExtAdvEditorRotateStartPt = nil\n          end\n          av.DelayedRun(\"AVExtAdvEditor.StopEditSelUpd\",nil,0)\n          _AVExtAdvEditoraptMov
ing = false\n          av.DelayedRun(\"AVExtAdvEditor.ToolMoveCenter\",nil,0)\n        else\n          av.DelayedRun(\"AVExtAdvEditor.ToolScaleEnd\",nil,0)\n        end\n      else\n        _AVExtAdvEditoraptMoving = false\n        _AVExtAdvEditorRotateClick = nil\n        _AVExtAdvEditorRotateStartPt = nil\n        aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelectingRotate\")\n        if (aListVertex <> nil) then\n          for each igraph in aListVertex\n            agrlist.RemoveGraphic(igraph)\n          end\n    
    end\n      end\n    else\n      _AVExtAdvEditoraptMoving = false\n      _AVExtAdvEditorRotateClick = nil\n      _AVExtAdvEditorRotateStartPt = nil\n      aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelectingRotate\")\n      if (aListVertex <> nil) then\n        for each igraph in aListVertex\n          agrlist.RemoveGraphic(igraph)\n        end\n      end\n    end\n  else\n    _AVExtAdvEditoraptMoving = false\n    _AVExtAdvEditorRotateClick = nil\n    _AVExtAdvEditorRotateStartPt = nil\n    aListVertex = agrlist.F
indAllByName(\"AVExtAdvEditorSelectingRotate\")\n    if (aListVertex <> nil) then\n      for each igraph in aListVertex\n        agrlist.RemoveGraphic(igraph)\n      end\n    end\n  end\nelse\n  _AVExtAdvEditoraptMoving = false\n  _AVExtAdvEditorRotateClick = nil\n  _AVExtAdvEditorRotateStartPt = nil\n  aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelectingRotate\")\n  if (aListVertex <> nil) then\n    for each igraph in aListVertex\n      agrlist.RemoveGraphic(igraph)\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1975
	Owner:	1974
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1976
)

(DocAct.1977
	Doc:	1974
)

(SEd.1978
	Name:	"AVExtAdvEditor.ToolScaleEnd"
	CreationDate:	"15 Июль 2004 г. 2:05:44"
	GUIName:	"Script"
	Win:	1979
	CSMgr:	1980
	DocExts:	1981
	Source:	"av.Run(\"AVExtAdvEditor.ToolScale\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1979
	Owner:	1978
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1980
)

(DocAct.1981
	Doc:	1978
)

(SEd.1982
	Name:	"AVExtAdvEditor.ToolScaleStart"
	CreationDate:	"14 Июль 2004 г. 23:53:22"
	GUIName:	"Script"
	Win:	1983
	CSMgr:	1984
	DocExts:	1985
	Source:	"if (_AVExtAdvEditoraptMoveSM <> nil) then\n  _AVExtAdvEditoraptMoving = true\n  if (_AVExtAdvEditorRotateMoveClick = nil) then\n    _AVExtAdvEditorRotateMoveClick = 2\n    av.Run(\"AVExtAdvEditor.ToolMoveCenterPoint\",nil)\n  else\n    _AVExtAdvEditorRotateMoveClick = 1\n  end\nelse\n  agrlist = _AVExtAdvEditorView.getgraphics\n  _AVExtAdvEditoraptMoving = true\n  if (_AVExtAdvEditorRotateStartPt = nil) then\n    _AVExtAdvEditorRotateStartPt = _AVExtAdvEditorView.getdisplay.returnuserpoint.clone\n    aListVertex = agrlist
.FindAllByName(\"AVExtAdvEditorSelectingRotate\")\n    if (aListVertex <> nil) then\n      for each igraph in aListVertex\n        agrlist.RemoveGraphic(igraph)\n      end\n    end\n    aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorSelecting\")\n    if (aListVertex <> nil) then\n      for each igraph in aListVertex\n        aNG = igraph.Clone\n        aNg.SetShape(igraph.getshape.clone)\n        aNG.SetObjectTag(aNg.getshape.clone)\n        aNG.SetName(\"AVExtAdvEditorSelectingRotate\")\n        agrlist.Add(aNG)\n      e
nd\n    end\n  end\n  if (_AVExtAdvEditorRotateClick = nil) then\n    _AVExtAdvEditorRotateClick = 2\n    av.Run(\"AVExtAdvEditor.ToolScale\",nil)\n  else\n    _AVExtAdvEditorRotateClick = 1\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1983
	Owner:	1982
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1984
)

(DocAct.1985
	Doc:	1982
)

(SEd.1986
	Name:	"AVExtAdvEditor.ToolSelect"
	CreationDate:	"21 Июнь 2004 г. 1:52:28"
	GUIName:	"Script"
	Win:	1987
	CSMgr:	1988
	DocExts:	1989
	Source:	"if (_AVExtAdvEditoraptMoveSM <> nil) then\n  _AVExtAdvEditoraptMoving = true\n  if (_AVExtAdvEditorRotateMoveClick = nil) then\n    _AVExtAdvEditorRotateMoveClick = 2\n    av.Run(\"AVExtAdvEditor.ToolMoveCenterPoint\",nil)\n  else\n    _AVExtAdvEditorRotateMoveClick = 1\n  end\nelse\n  r = _AVExtAdvEditorView.ReturnUserRect\n  theThemes = _AVExtAdvEditorSelectable.ReturnKeys\n  if (r.IsNull) then\n    p = _AVExtAdvEditorView.GetDisplay.ReturnUserPoint\n    if (System.IsShiftKeyDown.Not) then\n      for each t in theThemes\n
        if (_AVExtAdvEditorSelectable.Get(t) = 1) then\n          if (_AVExtAdvEditorList.Get(t) = 1) then\n            t.ClearSelection\n          end\n        end\n      end\n    end\n    aSelFV = 0\n    for each t in theThemes    \n      if (_AVExtAdvEditorSelectable.Get(t) = 1) then\n        if (_AVExtAdvEditorList.Get(t) = 1) then\n          if (t.IsVisible) then\n            aLF = t.FindByPoint(p)        \n            if (aLF.Count > 0) then\n              atFTab = t.GetFTab\n              aBit = atFTab.GetSelection
\n              if (aBit.Get(aLF.Get(0))) then\n                aBit.Clear(aLF.Get(0))\n              else\n                aBit.set(aLF.Get(0))\n              end\n              atFTab.SetSelection(aBit)\n              atFTab.UpdateSelection\n              break\n            end\n          end\n        end\n      end\n    end\n  else\n    if (System.IsShiftKeyDown) then\n      op = #VTAB_SELTYPE_OR\n    else\n      op = #VTAB_SELTYPE_NEW\n    end\n    for each t in theThemes\n      if (_AVExtAdvEditorSelectable.Get(t) = 1) the
n\n        if (_AVExtAdvEditorList.Get(t) = 1) then\n          if (t.IsVisible) then\n            t.SelectByRect(r, op)\n          end\n        end\n      end\n    end\n  end\n  av.GetProject.FindGUI(\"AVExtAdvEditView\").Update\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1987
	Owner:	1986
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1988
)

(DocAct.1989
	Doc:	1986
)

(SEd.1990
	Name:	"AVExtAdvEditor.ToolSelectNotEdit"
	CreationDate:	"5 Июль 2004 г. 1:10:00"
	GUIName:	"Script"
	Win:	1991
	CSMgr:	1992
	DocExts:	1993
	Source:	"r = _AVExtAdvEditorView.ReturnUserRect\ntheThemes = _AVExtAdvEditorSelectable.ReturnKeys\nif (r.IsNull) then\n  p = _AVExtAdvEditorView.GetDisplay.ReturnUserPoint\n  if (System.IsShiftKeyDown) then\n    op = #VTAB_SELTYPE_XOR\n  else\n    op = #VTAB_SELTYPE_NEW\n  end  \n  for each t in theThemes    \n    if (_AVExtAdvEditorSelectable.Get(t) = 1) then\n      if (_AVExtAdvEditorList.Get(t) <> 1) then\n        if (t.IsVisible) then\n          t.SelectByPoint(p, op)\n        end\n      end\n    end\n  end\nelse\n  if (System.IsS
hiftKeyDown) then\n    op = #VTAB_SELTYPE_OR\n  else\n    op = #VTAB_SELTYPE_NEW\n  end\n  for each t in theThemes\n    if (_AVExtAdvEditorSelectable.Get(t) = 1) then\n      if (_AVExtAdvEditorList.Get(t) <> 1) then\n        if (t.IsVisible) then\n          t.SelectByRect(r, op)\n        end\n      end\n    end\n  end\nend\nav.GetProject.SetModified(true)\nav.GetProject.FindGUI(\"AVExtAdvEditView\").Update"
	SearchStr:	"NotEditNumV"
)

(DocWin.1991
	Owner:	1990
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1992
)

(DocAct.1993
	Doc:	1990
)

(SEd.1994
	Name:	"AVExtAdvEditor.ToolSemiArcPolygon"
	CreationDate:	"7 Июль 2004 г. 1:02:30"
	GUIName:	"Script"
	Win:	1995
	CSMgr:	1996
	DocExts:	1997
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScratchList <> nil) then\n  if (_AVExtAdvEditorView = av.Getactivedoc) then\n    if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AESemiArc\").IsSelected) then\n      if ( _AVExtAdvEditorDrawClass = \"polygon\") then\n        apt = _AVExtAdvEditorView.getdisplay.returnuserpoint\n        if (_AVExtAdvEditorPan) then\n          aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n          aDisapt = aViewRect.GetWidth / 100\n        
  if (aViewRect.AsPolygon.AsPolyline.Distance(apt).Abs < aDisapt) then\n            aptpan = Polyline.Make({{aViewRect.ReturnCenter,apt}}).Along(10)\n            _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n          end\n        end\n        if (apt <> _AVExtAdvEditoraptL) then\n          _AVExtAdvEditoraptL = apt.Clone\n          _AVExtAdvEditorapt = apt.Clone\n          aSnapReal = 0\n          if (_AVExtAdvEditorSnapEnb) then\n            if (_AVExtAdvEditorSnapTU = \"pixels\") then\n              aSnapTolerance = 
(_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.GetWin.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\n            else\n              aSnapTolerance = _AVExtAdvEditorSnapT\n            end\n            aListK = _AVExtAdvEditorView.GetThemes\n            for each aThemeView in aLIstK  \n              aListE = _AVExtAdvEditorListSnap.Get(aThemeView)\n              if (aListE <> nil) then\n                for each aThemeSnapeI in 0..3\n                  aTh
emeSnape = aListE.Get(aThemeSnapeI)\n                  if (aThemeSnape <> 0) then\n                    aUserSnapPoint = _AVExtAdvEditorapt.Clone\n                    aThemeView.SetInteractiveSnapTolerance(aSnapTolerance)\n                    if (aThemeSnapeI = 0) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_VERTEX,aUserSnapPoint)\n                    elseif (aThemeSnapeI = 1) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_BOUNDARY,aUserSnapPoint)\n                    elseif (aT
hemeSnapeI = 2) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_ENDPOINT,aUserSnapPoint)\n                    else\n                      aThemeView.UserSnapPoint(#POINT_SNAP_INTERSECTION,aUserSnapPoint)\n                    end\n                    if (aUserSnapPoint <> _AVExtAdvEditorapt) then\n                      _AVExtAdvEditorapt = aUserSnapPoint.Clone\n                      aSnapReal = 1\n                      break\n                    end\n                  end\n                end\n         
     end\n              if (aSnapReal = 1) then\n                if (_AVExtAdvEditorSnapOff <> 0) then\n                  aDis1 = _AVExtAdvEditorapt.Distance(apt)\n                  aptPx = apt.GetX - _AVExtAdvEditorapt.GetX\n                  aptPy = apt.GetY - _AVExtAdvEditorapt.GetY\n                  aCosA = aptPx / aDis1.Abs\n                  aSinA = aptPy / aDis1.Abs\n                  aNewPx = _AVExtAdvEditorSnapOff * aCosA\n                  aNewPy = _AVExtAdvEditorSnapOff * aSinA\n                  aNewPtX 
= aNewPx + _AVExtAdvEditorapt.GetX\n                  aNewPtY = aNewPy + _AVExtAdvEditorapt.GetY\n                  _AVExtAdvEditorapt = aNewPtX@aNewPtY\n                end\n                break\n              end\n            end\n          end        \n          if (_AVExtAdvEditorShowCurP) then\n            if (_AVExtAdvEditorCurGr = nil) then\n              _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n              if (aSna
pReal = 1) then\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              else\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n              end\n              agrlist.Add(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr.invalidate\n            end\n            if (aSnapReal = 1) then\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            else\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n          
  end\n            _AVExtAdvEditorCurGr.invalidate\n            _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.clone)\n            _AVExtAdvEditorCurGr.invalidate\n          else\n            if (aSnapReal = 1) then\n              if (_AVExtAdvEditorCurGr = nil) then\n                _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n                agrlist.
Add(_AVExtAdvEditorCurGr)\n                _AVExtAdvEditorCurGr.invalidate\n              end\n              _AVExtAdvEditorCurGr.invalidate\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.invalidate\n            else\n              if (_AVExtAdvEditorCurGr <> nil) then\n                agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n                _AVExtAdvEditorCurGr = nil\n              en
d\n            end\n          end\n          if (_AVExtAdvEditorScratchListPart) then\n            if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) = \"Part\") then\n              adrsh = PolyLine.MakeEmpty\n            else\n              aLastNumber = _AVExtAdvEditorScratchList.Count - 1\n              if (_AVExtAdvEditorScratchList.Get(aLastNumber).Get(0) = nil) then\n                adrshlist = list.make\n                P0 = _AVExtAdvEditorScratchList.Get(aLastNumber - 1).Get(0)\n    
            Pt = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(2)\n                P2 = _AVExtAdvEditorapt\n                P1x = (Pt.GetX - ((0.09 * P0.GetX) + (0.49 * P2.GetX))) / 0.42\n                P1y = (Pt.GetY - ((0.09 * P0.GetY) + (0.49 * P2.GetY))) / 0.42\n                for each t in 0..0.7 by _AVExtAdvEditorSemiArcT\n                  Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n                  Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1y) 
+ ((t ^ 2) * P2.GetY) \n                  adrshlist.Add(Ptx@Pty)\n                end\n              else    \n                adrshlist = list.make\n                alastpointV = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(0).Clone\n                adrshlist.add(alastpointV)\n                adrshlist.add(_AVExtAdvEditorapt)\n              end\n              if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.count - 2).Get(0) <> \"Part\") then\n                aPartNumber = _AVExtAdvEditorScratchListPar
tNumber.Get(_AVExtAdvEditorScratchListPartNumber.Count -1) + 1\n                adrshlist.add(_AVExtAdvEditorScratchList.Get(aPartNumber).Get(0).Clone)\n              end\n              adrsh = Polyline.Make({adrshlist})\n            end\n          else\n            aLastNumber = _AVExtAdvEditorScratchList.Count - 1\n            if (_AVExtAdvEditorScratchList.Get(aLastNumber).Get(0) = nil) then\n              adrshlist = list.make\n              P0 = _AVExtAdvEditorScratchList.Get(aLastNumber - 1).Get(0)\n           
   Pt = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(2)\n              P2 = _AVExtAdvEditorapt\n              P1x = (Pt.GetX - ((0.09 * P0.GetX) + (0.49 * P2.GetX))) / 0.42\n              P1y = (Pt.GetY - ((0.09 * P0.GetY) + (0.49 * P2.GetY))) / 0.42\n              for each t in 0..0.7 by _AVExtAdvEditorSemiArcT\n                Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n                Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY)
 \n                adrshlist.Add(Ptx@Pty)\n              end\n            else    \n              adrshlist = list.make\n              alastpointV = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(0).Clone\n              adrshlist.add(alastpointV)\n              adrshlist.add(_AVExtAdvEditorapt.clone)\n            end\n            if (_AVExtAdvEditorScratchList.count > 1) then\n              adrshlist.add(_AVExtAdvEditorScratchList.Get(0).Get(0).clone)\n            end\n            adrsh = Polyline.Make({adrshlist})\n  
        end\n          if (_AVExtAdvEditorScrathGrMouse = nil) then\n            _AVExtAdvEditorScrathGrMouse = GraphicShape.Make(adrsh)\n            _AVExtAdvEditorScrathGrMouse.SetName(\"_AVExtAdvEditorScrathGrMouse\")\n            _AVExtAdvEditorScrathGrMouse.SetSymbol(_AVExtAdvEditorScratchLE)\n            agrlist.Add(_AVExtAdvEditorScrathGrMouse)\n            _AVExtAdvEditorScrathGrMouse.invalidate\n          end\n          _AVExtAdvEditorScrathGrMouse.invalidate\n          _AVExtAdvEditorScrathGrMouse.SetShape(a
drsh)\n          _AVExtAdvEditorScrathGrMouse.invalidate\n        end\n        if (System.IsDoubleClick) then\n          av.Run(\"AVExtAdvEditor.ToolDrawingStop\",nil)\n        elseif (_AVExtAdvEditorClick = 1) then\n          _AVExtAdvEditorClick = nil\n          if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.Pan\n          elseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n         
 else\n            aLastNumber = _AVExtAdvEditorScratchList.Count - 1\n            if (_AVExtAdvEditorScratchListPart) then\n              if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) = \"Part\") then\n                _AVExtAdvEditorScratchListPartPoint = _AVExtAdvEditorapt.clone\n                _AVExtAdvEditorScratchList.add({_AVExtAdvEditorapt.clone,\"line\"})\n                aVertexAdded = 3\n              else\n                if (_AVExtAdvEditorScratchList.Get(aLastNumber).Get(
0) = nil) then\n                  aVertexAdded = 1\n                  P0 = _AVExtAdvEditorScratchList.Get(aLastNumber - 1).Get(0)\n                  Pt = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(2)\n                  P2 = _AVExtAdvEditorapt\n                  P1x = (Pt.GetX - ((0.09 * P0.GetX) + (0.49 * P2.GetX))) / 0.42\n                  P1y = (Pt.GetY - ((0.09 * P0.GetY) + (0.49 * P2.GetY))) / 0.42\n                  for each t in 0..0.7 by _AVExtAdvEditorSemiArcT\n                    Ptx = (((1 - t) ^ 2)
 * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n                    Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY)\n                    _AVExtAdvEditorScratchList.add({Ptx@Pty,\"stream\"})\n                  end\n                  _AVExtAdvEditorScratchList.Remove(aLastNumber)\n                  av.Run(\"AVExtAdvEditor.ToolDrawingPolygon\",nil)\n                else\n                  aVertexAdded = 0\n                  _AVExtAdvEditorScratchList.add({nil,\"arc\",_AVE
xtAdvEditorapt})\n                end\n              end\n            else\n              if (_AVExtAdvEditorScratchList.Get(aLastNumber).Get(0) = nil) then\n                aVertexAdded = 1\n                P0 = _AVExtAdvEditorScratchList.Get(aLastNumber - 1).Get(0)\n                Pt = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(2)\n                P2 = _AVExtAdvEditorapt\n                P1x = (Pt.GetX - ((0.09 * P0.GetX) + (0.49 * P2.GetX))) / 0.42\n                P1y = (Pt.GetY - ((0.09 * P0.GetY) + (0.49 
* P2.GetY))) / 0.42\n                for each t in 0..0.7 by _AVExtAdvEditorSemiArcT\n                  Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n                  Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY)\n                  _AVExtAdvEditorScratchList.add({Ptx@Pty,\"stream\"})\n                end\n                _AVExtAdvEditorScratchList.Remove(aLastNumber)\n                av.Run(\"AVExtAdvEditor.ToolDrawingPolygon\",nil)\n        
      else\n                aVertexAdded = 0\n                _AVExtAdvEditorScratchList.add({nil,\"arc\",_AVExtAdvEditorapt})\n              end\n            end\n            if (_AVExtAdvEditorShowVer) then\n              if (aVertexAdded = 1) then\n                aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n                if (aVertexEnd <> nil) then\n                  if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n                    aVertexEnd.SetNa
me(\"AVExtAdvEditorVertexCurve\")\n                  else\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n                  end\n                  aVertexEnd.invalidate\n                  aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n                  aVertexEnd.invalidate\n                  for each aVeri in aLastNumber..(_AVExtAdvEditorScratchList.Count - 1) by 1\n                    if (aVeri <> (_AVExtAdvEditorScratchList.Count - 1)) then\n                      aVertex = GraphicShape.Make(_AVExtAdv
EditorScratchList.Get(aVeri).Get(0))\n                      aVertex.SetName(\"AVExtAdvEditorVertex\")\n                      aVertex.SetSymbol(_AVExtAdvEditorVertex)\n                      aVertex.SetObjectTag(aVeri.clone)\n                      agrlist.Add(aVertex)\n                    elseif (aVeri = (_AVExtAdvEditorScratchList.Count - 1)) then\n                      aVertex = GraphicShape.Make(_AVExtAdvEditorScratchList.Get(aVeri).Get(0))\n                      aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n         
             aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n                      aVertex.SetObjectTag(aVeri.clone)\n                      agrlist.Add(aVertex)\n                    end\n                  end\n                end\n              elseif (aVertexAdded = 3) then\n                aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n                if (aVertexEnd <> nil) then\n                  if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n            
        aVertexEnd.SetName(\"AVExtAdvEditorVertexCurve\")\n                  else\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n                  end\n                  aVertexEnd.invalidate\n                  aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n                  aVertexEnd.invalidate\n                  aVertex = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                  aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n                  aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n           
       aVertex.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n                  agrlist.Add(aVertex)\n                end\n              end        \n            end\n            if (_AVExtAdvEditorPanClick) then\n              _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n            end\n          end\n          av.DelayedRun(\"AVExtAdvEditor.ToolSemiArcPolygonStart\",nil,0)\n        else\n          av.DelayedRun(\"AVExtAdvEditor.ToolSemiArcPolygonEnd\",nil,0)\n        end\n      else\n        _AVExtAdvEdi
torClick = nil\n        if (_AVExtAdvEditorScrathGrMouse <> nil) then\n          agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n        end\n        _AVExtAdvEditorScrathGrMouse = nil\n        if (_AVExtAdvEditorCurGr <> nil) then\n           agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n        end\n        _AVExtAdvEditorCurGr = nil\n        _AVExtAdvEditoraptL = nil\n        _AVExtAdvEditorapt = nil\n      end\n    else\n      _AVExtAdvEditorClick = nil\n      if (_AVExtAdvEditorScrathGrMouse <> nil) then\n       
 agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n      end\n      _AVExtAdvEditorScrathGrMouse = nil\n      if (_AVExtAdvEditorCurGr <> nil) then\n         agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n      end\n      _AVExtAdvEditorCurGr = nil\n      _AVExtAdvEditoraptL = nil\n      _AVExtAdvEditorapt = nil\n    end\n  else\n    _AVExtAdvEditorClick = nil\n    if (_AVExtAdvEditorScrathGrMouse <> nil) then\n      agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n    end\n    _AVExtAdvEditorScrathGrMouse = nil\n    
if (_AVExtAdvEditorCurGr <> nil) then\n       agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n    end\n    _AVExtAdvEditorCurGr = nil\n    _AVExtAdvEditoraptL = nil\n    _AVExtAdvEditorapt = nil\n  end\nelse\n  _AVExtAdvEditorClick = nil\n  if (_AVExtAdvEditorScrathGrMouse <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n  end\n  _AVExtAdvEditorScrathGrMouse = nil\n  if (_AVExtAdvEditorCurGr <> nil) then\n     agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n  end\n  if (_AVExtAdvEditorScrathGr <> nil) then\n
    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGr)\n  end\n  _AVExtAdvEditorScrathGr = nil\n  _AVExtAdvEditorCurGr = nil\n  _AVExtAdvEditoraptL = nil\n  _AVExtAdvEditorapt = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.1995
	Owner:	1994
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.1996
)

(DocAct.1997
	Doc:	1994
)

(SEd.1998
	Name:	"AVExtAdvEditor.ToolSemiArcPolygonEnd"
	CreationDate:	"7 Июль 2004 г. 1:58:04"
	GUIName:	"Script"
	Win:	1999
	CSMgr:	2000
	DocExts:	2001
	Source:	"av.Run(\"AVExtAdvEditor.ToolSemiArcPolygon\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.1999
	Owner:	1998
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2000
)

(DocAct.2001
	Doc:	1998
)

(SEd.2002
	Name:	"AVExtAdvEditor.ToolSemiArcPolygonStart"
	CreationDate:	"7 Июль 2004 г. 1:58:48"
	GUIName:	"Script"
	Win:	2003
	CSMgr:	2004
	DocExts:	2005
	Source:	"if (_AVExtAdvEditorStartSnapPan.Not) then\n  if (System.IsDoubleClick) then\n    av.DelayedRun(\"AVExtAdvEditor.ToolDrawingStop\",nil,0)\n  else\n    if (_AVExtAdvEditorScratchList = nil) then\n      _AVExtAdvEditorScratchListPart = false\n      _AVExtAdvEditorScratchList = List.Make\n      adis = _AVExtAdvEditorView.getdisplay\n      agrlist = _AVExtAdvEditorView.getgraphics\n      if (_AVExtAdvEditoraptS = nil) then\n        _AVExtAdvEditoraptS = adis.returnuserpoint\n      else\n        _AVExtAdvEditorapt = adis.retur
nuserpoint\n      end    \n      _AVExtAdvEditorScratchList.Add({_AVExtAdvEditoraptS.Clone,\"line\"})\n      if (_AVExtAdvEditorShowVer) then\n        aVertex = GraphicShape.Make(_AVExtAdvEditoraptS.Clone)\n        aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n        aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n        aVertex.SetObjectTag(0)\n        agrlist.Add(aVertex)    \n      end\n      _AVExtAdvEditoraptS = nil    \n    end\n    if (_AVExtAdvEditorClick = nil) then\n      _AVExtAdvEditorClick = 2\n      av.Run(\"AVEx
tAdvEditor.ToolSemiArcPolygon\",nil)\n    else\n      _AVExtAdvEditorClick = 1\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2003
	Owner:	2002
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2004
)

(DocAct.2005
	Doc:	2002
)

(SEd.2006
	Name:	"AVExtAdvEditor.ToolSemiArcPolyline"
	CreationDate:	"5 Июль 2004 г. 1:20:11"
	GUIName:	"Script"
	Win:	2007
	CSMgr:	2008
	DocExts:	2009
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScratchList <> nil) then\n  if (_AVExtAdvEditorView = av.Getactivedoc) then\n    if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AESemiArc\").IsSelected) then\n      if ((_AVExtAdvEditorDrawClass = \"polyline\") or (_AVExtAdvEditorDrawClass = \"multi\")) then\n        apt = _AVExtAdvEditorView.getdisplay.returnuserpoint\n        if (_AVExtAdvEditorPan) then\n          aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n          a
Disapt = aViewRect.GetWidth / 100\n          if (aViewRect.AsPolygon.AsPolyline.Distance(apt).Abs < aDisapt) then\n            aptpan = Polyline.Make({{aViewRect.ReturnCenter,apt}}).Along(10)\n            _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n          end\n        end\n        if (apt <> _AVExtAdvEditoraptL) then\n          _AVExtAdvEditoraptL = apt.Clone\n          _AVExtAdvEditorapt = apt.Clone\n          aSnapReal = 0\n          if (_AVExtAdvEditorSnapEnb) then\n            if (_AVExtAdvEditorSnapTU = \"pix
els\") then\n              aSnapTolerance = (_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.GetWin.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\n            else\n              aSnapTolerance = _AVExtAdvEditorSnapT\n            end\n            aListK = _AVExtAdvEditorView.GetThemes\n            for each aThemeView in aLIstK  \n              aListE = _AVExtAdvEditorListSnap.Get(aThemeView)\n              if (aListE <> nil) then\n                for each 
aThemeSnapeI in 0..3\n                  aThemeSnape = aListE.Get(aThemeSnapeI)\n                  if (aThemeSnape <> 0) then\n                    aUserSnapPoint = _AVExtAdvEditorapt.Clone\n                    aThemeView.SetInteractiveSnapTolerance(aSnapTolerance)\n                    if (aThemeSnapeI = 0) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_VERTEX,aUserSnapPoint)\n                    elseif (aThemeSnapeI = 1) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_BOUNDARY,aUse
rSnapPoint)\n                    elseif (aThemeSnapeI = 2) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_ENDPOINT,aUserSnapPoint)\n                    else\n                      aThemeView.UserSnapPoint(#POINT_SNAP_INTERSECTION,aUserSnapPoint)\n                    end\n                    if (aUserSnapPoint <> _AVExtAdvEditorapt) then\n                      _AVExtAdvEditorapt = aUserSnapPoint.Clone\n                      aSnapReal = 1\n                      break\n                    end\n         
         end\n                end\n              end\n              if (aSnapReal = 1) then\n                if (_AVExtAdvEditorSnapOff <> 0) then\n                  aDis1 = _AVExtAdvEditorapt.Distance(apt)\n                  aptPx = apt.GetX - _AVExtAdvEditorapt.GetX\n                  aptPy = apt.GetY - _AVExtAdvEditorapt.GetY\n                  aCosA = aptPx / aDis1.Abs\n                  aSinA = aptPy / aDis1.Abs\n                  aNewPx = _AVExtAdvEditorSnapOff * aCosA\n                  aNewPy = _AVExtAdvEditor
SnapOff * aSinA\n                  aNewPtX = aNewPx + _AVExtAdvEditorapt.GetX\n                  aNewPtY = aNewPy + _AVExtAdvEditorapt.GetY\n                  _AVExtAdvEditorapt = aNewPtX@aNewPtY\n                end\n                break\n              end\n            end\n          end        \n          if (_AVExtAdvEditorShowCurP) then\n            if (_AVExtAdvEditorCurGr = nil) then\n              _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.SetName(\"_AV
ExtAdvEditorCurGr\")\n              if (aSnapReal = 1) then\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              else\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n              end\n              agrlist.Add(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr.invalidate\n            end\n            if (aSnapReal = 1) then\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            else\n              _AVExtAdvEditorCurGr.SetS
ymbol(_AVExtAdvEditorScratchP2)\n            end\n            _AVExtAdvEditorCurGr.invalidate\n            _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.clone)\n            _AVExtAdvEditorCurGr.invalidate\n          else\n            if (aSnapReal = 1) then\n              if (_AVExtAdvEditorCurGr = nil) then\n                _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtA
dvEditorScratchP)\n                agrlist.Add(_AVExtAdvEditorCurGr)\n                _AVExtAdvEditorCurGr.invalidate\n              end\n              _AVExtAdvEditorCurGr.invalidate\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.invalidate\n            else\n              if (_AVExtAdvEditorCurGr <> nil) then\n                agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n                _
AVExtAdvEditorCurGr = nil\n              end\n            end\n          end\n          if (_AVExtAdvEditorScratchListPart) then\n            if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) = \"Part\") then\n              adrsh = PolyLine.MakeEmpty\n            else\n              aLastNumber = _AVExtAdvEditorScratchList.Count - 1\n              if (_AVExtAdvEditorScratchList.Get(aLastNumber).Get(0) = nil) then\n                adrshlist = list.make\n                P0 = _AVExtAdvEditorSc
ratchList.Get(aLastNumber - 1).Get(0)\n                Pt = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(2)\n                P2 = _AVExtAdvEditorapt\n                P1x = (Pt.GetX - ((0.09 * P0.GetX) + (0.49 * P2.GetX))) / 0.42\n                P1y = (Pt.GetY - ((0.09 * P0.GetY) + (0.49 * P2.GetY))) / 0.42\n                for each t in 0..0.7 by _AVExtAdvEditorSemiArcT\n                  Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n                  Pty = (((1 - t) ^ 2)
 * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY) \n                  adrshlist.Add(Ptx@Pty)\n                end\n              else    \n                adrshlist = list.make\n                alastpointV = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(0).Clone\n                adrshlist.add(alastpointV)\n                adrshlist.add(_AVExtAdvEditorapt)\n              end\n              adrsh = Polyline.Make({adrshlist})\n            end\n          else\n            aLastNumber = _AVExtAdvEditorScratc
hList.Count - 1\n            if (_AVExtAdvEditorScratchList.Get(aLastNumber).Get(0) = nil) then\n              adrshlist = list.make\n              P0 = _AVExtAdvEditorScratchList.Get(aLastNumber - 1).Get(0)\n              Pt = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(2)\n              P2 = _AVExtAdvEditorapt\n              P1x = (Pt.GetX - ((0.09 * P0.GetX) + (0.49 * P2.GetX))) / 0.42\n              P1y = (Pt.GetY - ((0.09 * P0.GetY) + (0.49 * P2.GetY))) / 0.42\n              for each t in 0..0.7 by _AVExtA
dvEditorSemiArcT\n                Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n                Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY) \n                adrshlist.Add(Ptx@Pty)\n              end      \n            else    \n              adrshlist = list.make\n              alastpointV = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(0).Clone\n              adrshlist.add(alastpointV)\n              adrshlist.add(_AVExtAdvEditorapt.c
lone)\n            end\n            adrsh = Polyline.Make({adrshlist})\n          end\n          if (_AVExtAdvEditorScrathGrMouse = nil) then\n            _AVExtAdvEditorScrathGrMouse = GraphicShape.Make(adrsh)\n            _AVExtAdvEditorScrathGrMouse.SetName(\"_AVExtAdvEditorScrathGrMouse\")\n            _AVExtAdvEditorScrathGrMouse.SetSymbol(_AVExtAdvEditorScratchLE)\n            agrlist.Add(_AVExtAdvEditorScrathGrMouse)\n            _AVExtAdvEditorScrathGrMouse.invalidate\n          end\n          _AVExtAdvEditorScr
athGrMouse.invalidate\n          _AVExtAdvEditorScrathGrMouse.SetShape(adrsh)\n          _AVExtAdvEditorScrathGrMouse.invalidate\n        end\n        if (System.IsDoubleClick) then\n          av.Run(\"AVExtAdvEditor.ToolDrawingStop\",nil)\n        elseif (_AVExtAdvEditorClick = 1) then\n          _AVExtAdvEditorClick = nil\n          if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.Pan\n          elseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n       
     _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          else\n            aLastNumber = _AVExtAdvEditorScratchList.Count - 1\n            if (_AVExtAdvEditorScratchListPart) then\n              if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) = \"Part\") then\n                _AVExtAdvEditorScratchListPartPoint = _AVExtAdvEditorapt.clone\n                _AVExtAdvEditorScratchList.add({_AVExtAdvEditorapt.clone,\"line\"})\n                aVertexAdded = 3\n              el
se\n                if (_AVExtAdvEditorScratchList.Get(aLastNumber).Get(0) = nil) then\n                  aVertexAdded = 1\n                  P0 = _AVExtAdvEditorScratchList.Get(aLastNumber - 1).Get(0)\n                  Pt = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(2)\n                  P2 = _AVExtAdvEditorapt\n                  P1x = (Pt.GetX - ((0.09 * P0.GetX) + (0.49 * P2.GetX))) / 0.42\n                  P1y = (Pt.GetY - ((0.09 * P0.GetY) + (0.49 * P2.GetY))) / 0.42\n                  for each t in 0..
0.7 by _AVExtAdvEditorSemiArcT\n                    Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n                    Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY)\n                    _AVExtAdvEditorScratchList.add({Ptx@Pty,\"stream\"})\n                  end\n                  _AVExtAdvEditorScratchList.Remove(aLastNumber)\n                  av.Run(\"AVExtAdvEditor.ToolDrawing\",nil)\n                else\n                  aVertexAdded = 0\n
                  _AVExtAdvEditorScratchList.add({nil,\"arc\",_AVExtAdvEditorapt.clone})\n                end\n              end\n            else\n              if (_AVExtAdvEditorScratchList.Get(aLastNumber).Get(0) = nil) then\n                aVertexAdded = 1\n                P0 = _AVExtAdvEditorScratchList.Get(aLastNumber - 1).Get(0)\n                Pt = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(2)\n                P2 = _AVExtAdvEditorapt\n                P1x = (Pt.GetX - ((0.09 * P0.GetX) + (0.49 * P2.GetX
))) / 0.42\n                P1y = (Pt.GetY - ((0.09 * P0.GetY) + (0.49 * P2.GetY))) / 0.42\n                for each t in 0..0.7 by _AVExtAdvEditorSemiArcT\n                  Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n                  Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY)\n                  _AVExtAdvEditorScratchList.add({Ptx@Pty,\"stream\"})\n                end\n                _AVExtAdvEditorScratchList.Remove(aLastNumber)\n  
              av.Run(\"AVExtAdvEditor.ToolDrawing\",nil)\n              else\n                aVertexAdded = 0\n                _AVExtAdvEditorScratchList.add({nil,\"arc\",_AVExtAdvEditorapt.clone})\n              end\n            end\n            if (_AVExtAdvEditorShowVer) then\n              if (aVertexAdded = 1) then\n                aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n                if (aVertexEnd <> nil) then\n                  if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.C
ount - 2).Get(1) = \"curve\") then\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertexCurve\")\n                  else\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n                  end\n                  aVertexEnd.invalidate\n                  aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n                  aVertexEnd.invalidate\n                  for each aVeri in aLastNumber..(_AVExtAdvEditorScratchList.Count - 1) by 1\n                    if (aVeri <> (_AVExtAdvEditorScratchList.Count -
 1)) then\n                      aVertex = GraphicShape.Make(_AVExtAdvEditorScratchList.Get(aVeri).Get(0))\n                      aVertex.SetName(\"AVExtAdvEditorVertex\")\n                      aVertex.SetSymbol(_AVExtAdvEditorVertex)\n                      aVertex.SetObjectTag(aVeri.clone)\n                      agrlist.Add(aVertex)\n                    elseif (aVeri = (_AVExtAdvEditorScratchList.Count - 1)) then\n                      aVertex = GraphicShape.Make(_AVExtAdvEditorScratchList.Get(aVeri).Get(0))\n     
                 aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n                      aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n                      aVertex.SetObjectTag(aVeri.clone)\n                      agrlist.Add(aVertex)\n                    end\n                  end\n                end\n              elseif (aVertexAdded = 3) then\n                aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n                if (aVertexEnd <> nil) then\n                  if (_AVExtAdvEditorScratchList.Get(_AVE
xtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertexCurve\")\n                  else\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n                  end\n                  aVertexEnd.invalidate\n                  aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n                  aVertexEnd.invalidate\n                  aVertex = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                  aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n    
              aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n                  aVertex.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n                  agrlist.Add(aVertex)\n                end\n              end        \n            end\n            if (_AVExtAdvEditorPanClick) then\n              _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n            end\n          end\n          av.DelayedRun(\"AVExtAdvEditor.ToolSemiArcPolylineStart\",nil,0)\n        else\n          av.DelayedRun(\"AVExtAdvEditor.Too
lSemiArcPolylineEnd\",nil,0)\n        end\n      else\n        _AVExtAdvEditorClick = nil\n        if (_AVExtAdvEditorScrathGrMouse <> nil) then\n          agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n        end\n        _AVExtAdvEditorScrathGrMouse = nil\n        if (_AVExtAdvEditorCurGr <> nil) then\n           agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n        end\n        _AVExtAdvEditorCurGr = nil\n        _AVExtAdvEditoraptL = nil\n        _AVExtAdvEditorapt = nil\n      end\n    else\n      _AVExtAdvEditor
Click = nil\n      if (_AVExtAdvEditorScrathGrMouse <> nil) then\n        agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n      end\n      _AVExtAdvEditorScrathGrMouse = nil\n      if (_AVExtAdvEditorCurGr <> nil) then\n         agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n      end\n      _AVExtAdvEditorCurGr = nil\n      _AVExtAdvEditoraptL = nil\n      _AVExtAdvEditorapt = nil\n    end\n  else\n    _AVExtAdvEditorClick = nil\n    if (_AVExtAdvEditorScrathGrMouse <> nil) then\n      agrlist.RemoveGraphic(_AVExtAdvE
ditorScrathGrMouse)\n    end\n    _AVExtAdvEditorScrathGrMouse = nil\n    if (_AVExtAdvEditorCurGr <> nil) then\n       agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n    end\n    _AVExtAdvEditorCurGr = nil\n    _AVExtAdvEditoraptL = nil\n    _AVExtAdvEditorapt = nil\n  end\nelse\n  _AVExtAdvEditorClick = nil\n  if (_AVExtAdvEditorScrathGrMouse <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n  end\n  _AVExtAdvEditorScrathGrMouse = nil\n  if (_AVExtAdvEditorCurGr <> nil) then\n     agrlist.RemoveGraphic(
_AVExtAdvEditorCurGr)\n  end\n  if (_AVExtAdvEditorScrathGr <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGr)\n  end\n  _AVExtAdvEditorScrathGr = nil\n  _AVExtAdvEditorCurGr = nil\n  _AVExtAdvEditoraptL = nil\n  _AVExtAdvEditorapt = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2007
	Owner:	2006
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2008
)

(DocAct.2009
	Doc:	2006
)

(SEd.2010
	Name:	"AVExtAdvEditor.ToolSemiArcPolylineClick"
	CreationDate:	"5 Июль 2004 г. 1:21:51"
	GUIName:	"Script"
	Win:	2011
	CSMgr:	2012
	DocExts:	2013
	Source:	"if (_AVExtAdvEditorScratchList = nil) then\n  if (_AVExtAdvEditorStartSnapRun.Not) then\n    av.Run(\"AVExtAdvEditor.StartSnapPointEnd\",nil)\n  end\nelse\n  if (_AVExtAdvEditorShowVer.Not) then\n    agrlist = _AVExtAdvEditorView.getgraphics\n    aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorVertex\")\n    if (aListVertex <> nil) then\n      for each iaListVertex in aListVertex\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexEnd = agrlist.FindAllByName(\"AVExtAdvEditorVertexEnd\")\n    if
 (aListVertexEnd <> nil) then\n      for each iaListVertexEnd in aListVertexEnd\n        agrlist.RemoveGraphic(iaListVertexEnd)\n      end\n    end\n    aListVertexCurve = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurve\")\n    if (aListVertexCurve <> nil) then\n      for each iaListVertex in aListVertexCurve\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexCurveP1 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP1\")\n    if (aListVertexCurveP1 <> nil) then\n      for each iaListVertex 
in aListVertexCurveP1\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexCurveP2 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP2\")\n    if (aListVertexCurveP2 <> nil) then\n      for each iaListVertex in aListVertexCurveP2\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2011
	Owner:	2010
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2012
)

(DocAct.2013
	Doc:	2010
)

(SEd.2014
	Name:	"AVExtAdvEditor.ToolSemiArcPolylineEnd"
	CreationDate:	"5 Июль 2004 г. 1:22:40"
	GUIName:	"Script"
	Win:	2015
	CSMgr:	2016
	DocExts:	2017
	Source:	"av.Run(\"AVExtAdvEditor.ToolSemiArcPolyline\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.2015
	Owner:	2014
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2016
)

(DocAct.2017
	Doc:	2014
)

(SEd.2018
	Name:	"AVExtAdvEditor.ToolSemiArcPolylineStart"
	CreationDate:	"5 Июль 2004 г. 1:24:15"
	GUIName:	"Script"
	Win:	2019
	CSMgr:	2020
	DocExts:	2021
	Source:	"if (_AVExtAdvEditorStartSnapPan.Not) then\n  if (System.IsDoubleClick) then\n    av.DelayedRun(\"AVExtAdvEditor.ToolDrawingStop\",nil,0)\n  else\n    if (_AVExtAdvEditorScratchList = nil) then\n      _AVExtAdvEditorScratchListPart = false\n      _AVExtAdvEditorScratchList = List.Make\n      adis = _AVExtAdvEditorView.getdisplay\n      agrlist = _AVExtAdvEditorView.getgraphics\n      if (_AVExtAdvEditoraptS = nil) then\n        _AVExtAdvEditoraptS = adis.returnuserpoint\n      else\n        _AVExtAdvEditorapt = adis.retur
nuserpoint\n      end    \n      _AVExtAdvEditorScratchList.Add({_AVExtAdvEditoraptS.Clone,\"line\"})\n      if (_AVExtAdvEditorShowVer) then\n        aVertex = GraphicShape.Make(_AVExtAdvEditoraptS.Clone)\n        aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n        aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n        aVertex.SetObjectTag(0)\n        agrlist.Add(aVertex)    \n      end\n      _AVExtAdvEditoraptS = nil    \n    end\n    if (_AVExtAdvEditorClick = nil) then\n      _AVExtAdvEditorClick = 2\n      av.Run(\"AVEx
tAdvEditor.ToolSemiArcPolyline\",nil)\n    else\n      _AVExtAdvEditorClick = 1\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2019
	Owner:	2018
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2020
)

(DocAct.2021
	Doc:	2018
)

(SEd.2022
	Name:	"AVExtAdvEditor.ToolSemiArcUpd"
	CreationDate:	"7 Июль 2004 г. 1:59:57"
	GUIName:	"Script"
	Win:	2023
	CSMgr:	2024
	DocExts:	2025
	Source:	"self.SetEnabled(true)\naTask = av.FindDialog(\"AVExtAdvEditor.Task\").FindByName(\"aCBTask\").GetCurrentValue\nif (aTask = \"Create New Feature\") then\n  if (_AVExtAdvEditorTheme = nil) then\n    self.SetEnabled(false)\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n        self.SetApply(\"AVExtAdvEditor.ToolSemiArcPolygonStart\")\n        _AVExtAdvEditorDrawClass = \"polygon\"\n      elseif (_AVExtAdvEditorTheme.GetFTa
b.FindField(\"Shape\").GetType = #FIELD_SHAPELINE) then\n        self.SetApply(\"AVExtAdvEditor.ToolSemiArcPolylineStart\")\n        _AVExtAdvEditorDrawClass = \"polyline\"\n      elseif (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEMULTIPOINT) then\n        self.SetApply(\"AVExtAdvEditor.ToolSemiArcPolylineStart\")\n        _AVExtAdvEditorDrawClass = \"multi\"\n      elseif (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOINT) then\n        self.SetEnabled(false)\n        _AV
ExtAdvEditorDrawClass = \"point\"\n      end\n    else\n      self.SetEnabled(false)\n    end\n  end\nelseif (aTask = \"Auto Complete Polygon\") then\n  if (_AVExtAdvEditorTheme = nil) then\n    self.SetEnabled(false)\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n        self.SetApply(\"AVExtAdvEditor.ToolSemiArcPolylineStart\")\n        _AVExtAdvEditorDrawClass = \"polyline\"\n      else\n        self.SetEnabled(false)\n 
     end\n    else\n      self.SetEnabled(false)\n    end\n  end\nelseif (aTask = \"Cut Polygon\") then\n  if (_AVExtAdvEditorTheme = nil) then\n    self.SetEnabled(false)\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n        self.SetApply(\"AVExtAdvEditor.ToolSemiArcPolylineStart\")\n        _AVExtAdvEditorDrawClass = \"polyline\"\n      else\n        self.SetEnabled(false)\n      end\n    else\n      self.SetEnabled(fal
se)\n    end\n  end\nelseif (aTask = \"Split Polyline\") then\n  if (_AVExtAdvEditorTheme = nil) then\n    self.SetEnabled(false)\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPELINE) then\n        self.SetApply(\"AVExtAdvEditor.ToolSemiArcPolylineStart\")\n        _AVExtAdvEditorDrawClass = \"polyline\"\n      else\n        self.SetEnabled(false)\n      end\n    else\n      self.SetEnabled(false)\n    end\n  end  \nelseif (aTask = \"Mod
ify Feature\") then\n  \nelseif (aTask = \"Resape Feature\") then\n  self.SetApply(\"AVExtAdvEditor.ToolSemiArcPolylineStart\")\n  _AVExtAdvEditorDrawClass = \"polyline\"\n  aValid = false\n  aTL = _AVExtAdvEditorList.ReturnKeys\n  for each i in aTL\n    if (_AVExtAdvEditorList.Get(i) = 1) then\n      if (i.GetFTab.IsEditable) then\n        if ((i.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) or (i.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPELINE)) then\n          if (i.GetFTab.GetSelection.Count > 0) then\n    
        aValid = true\n            break\n          end\n        end\n      end\n    end\n  end\n  self.setenabled(aValid)\nelseif (aTask = \"Select Features Using an Area\") then\n  self.SetApply(\"AVExtAdvEditor.ToolSemiArcPolygonStart\")\n  _AVExtAdvEditorDrawClass = \"polygon\"\nelseif (aTask = \"Select Features Using a Line\") then\n  self.SetApply(\"AVExtAdvEditor.ToolSemiArcPolylineStart\")\n  _AVExtAdvEditorDrawClass = \"polyline\"\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2023
	Owner:	2022
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2024
)

(DocAct.2025
	Doc:	2022
)

(SEd.2026
	Name:	"AVExtAdvEditor.ToolStreamPolygon"
	CreationDate:	"22 Июнь 2004 г. 23:25:20"
	GUIName:	"Script"
	Win:	2027
	CSMgr:	2028
	DocExts:	2029
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScratchList <> nil) then\n  if (_AVExtAdvEditorView = av.Getactivedoc) then\n    if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEStream\").IsSelected) then\n      if ( _AVExtAdvEditorDrawClass = \"polygon\") then\n        apt = _AVExtAdvEditorView.getdisplay.returnuserpoint\n        if (_AVExtAdvEditorPan) then\n          aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n          aDisapt = aViewRect.GetWidth / 100\n         
 if (aViewRect.AsPolygon.AsPolyline.Distance(apt).Abs < aDisapt) then\n            aptpan = Polyline.Make({{aViewRect.ReturnCenter,apt}}).Along(10)\n            _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n          end\n        end\n        if (apt <> _AVExtAdvEditoraptL) then\n          _AVExtAdvEditoraptL = apt.Clone\n          _AVExtAdvEditorapt = apt.Clone\n          aSnapReal = 0\n          if (_AVExtAdvEditorSnapEnb) then\n            if (_AVExtAdvEditorSnapTU = \"pixels\") then\n              aSnapTolerance = (
_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.GetWin.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\n            else\n              aSnapTolerance = _AVExtAdvEditorSnapT\n            end\n            aListK = _AVExtAdvEditorView.GetThemes\n            for each aThemeView in aLIstK  \n              aListE = _AVExtAdvEditorListSnap.Get(aThemeView)\n              if (aListE <> nil) then\n                for each aThemeSnapeI in 0..3\n                  aThe
meSnape = aListE.Get(aThemeSnapeI)\n                  if (aThemeSnape <> 0) then\n                    aUserSnapPoint = _AVExtAdvEditorapt.Clone\n                    aThemeView.SetInteractiveSnapTolerance(aSnapTolerance)\n                    if (aThemeSnapeI = 0) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_VERTEX,aUserSnapPoint)\n                    elseif (aThemeSnapeI = 1) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_BOUNDARY,aUserSnapPoint)\n                    elseif (aTh
emeSnapeI = 2) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_ENDPOINT,aUserSnapPoint)\n                    else\n                      aThemeView.UserSnapPoint(#POINT_SNAP_INTERSECTION,aUserSnapPoint)\n                    end\n                    if (aUserSnapPoint <> _AVExtAdvEditorapt) then\n                      _AVExtAdvEditorapt = aUserSnapPoint.Clone\n                      aSnapReal = 1\n                      break\n                    end\n                  end\n                end\n          
    end\n              if (aSnapReal = 1) then\n                if (_AVExtAdvEditorSnapOff <> 0) then\n                  aDis1 = _AVExtAdvEditorapt.Distance(apt)\n                  aptPx = apt.GetX - _AVExtAdvEditorapt.GetX\n                  aptPy = apt.GetY - _AVExtAdvEditorapt.GetY\n                  aCosA = aptPx / aDis1.Abs\n                  aSinA = aptPy / aDis1.Abs\n                  aNewPx = _AVExtAdvEditorSnapOff * aCosA\n                  aNewPy = _AVExtAdvEditorSnapOff * aSinA\n                  aNewPtX =
 aNewPx + _AVExtAdvEditorapt.GetX\n                  aNewPtY = aNewPy + _AVExtAdvEditorapt.GetY\n                  _AVExtAdvEditorapt = aNewPtX@aNewPtY\n                end\n                break\n              end\n            end\n          end        \n          if (_AVExtAdvEditorShowCurP) then\n            if (_AVExtAdvEditorCurGr = nil) then\n              _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n              if (aSnap
Real = 1) then\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              else\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n              end\n              agrlist.Add(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr.invalidate\n            end\n            if (aSnapReal = 1) then\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            else\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n           
 end\n            _AVExtAdvEditorCurGr.invalidate\n            _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.clone)\n            _AVExtAdvEditorCurGr.invalidate\n          else\n            if (aSnapReal = 1) then\n              if (_AVExtAdvEditorCurGr = nil) then\n                _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n                agrlist.A
dd(_AVExtAdvEditorCurGr)\n                _AVExtAdvEditorCurGr.invalidate\n              end\n              _AVExtAdvEditorCurGr.invalidate\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.invalidate\n            else\n              if (_AVExtAdvEditorCurGr <> nil) then\n                agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n                _AVExtAdvEditorCurGr = nil\n              end
\n            end\n          end         \n          if (_AVExtAdvEditorScratchListPart) then\n            if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) = \"Part\") then\n              adrsh = PolyLine.MakeEmpty\n            else\n              adrshlist = list.make \n              adrshlist.add(_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.count - 1).Get(0).Clone)\n              adrshlist.add(_AVExtAdvEditorapt.clone)\n              if (_AVExtAdvEditorScratchList.Get(_AVEx
tAdvEditorScratchList.count - 2).Get(0) <> \"Part\") then\n                aPartNumber = _AVExtAdvEditorScratchListPartNumber.Get(_AVExtAdvEditorScratchListPartNumber.Count -1) + 1\n                adrshlist.add(_AVExtAdvEditorScratchList.Get(aPartNumber).Get(0).Clone)\n              end\n              adrsh = Polyline.Make({adrshlist})\n            end\n          else        \n            adrshlist = list.make \n            adrshlist.add(_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.count - 1).Get(0).Clo
ne)\n            adrshlist.add(_AVExtAdvEditorapt.clone)\n            if (_AVExtAdvEditorScratchList.count > 1) then\n              adrshlist.add(_AVExtAdvEditorScratchList.Get(0).Get(0).clone)\n            end\n            adrsh = Polyline.Make({adrshlist})\n          end     \n          if (_AVExtAdvEditorScrathGrMouse = nil) then\n            _AVExtAdvEditorScrathGrMouse = GraphicShape.Make(adrsh)\n            _AVExtAdvEditorScrathGrMouse.SetName(\"_AVExtAdvEditorScrathGrMouse\")\n            _AVExtAdvEditorScrathGr
Mouse.SetSymbol(_AVExtAdvEditorScratchLE)\n            agrlist.Add(_AVExtAdvEditorScrathGrMouse)\n            _AVExtAdvEditorScrathGrMouse.invalidate\n          end\n          _AVExtAdvEditorScrathGrMouse.invalidate\n          _AVExtAdvEditorScrathGrMouse.SetShape(adrsh)\n          _AVExtAdvEditorScrathGrMouse.invalidate\n          if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) <> _AVExtAdvEditorapt) then\n            if (_AVExtAdvEditorStreamTU = \"pixels\") then\n              aStrea
mTolerance = (_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.GetWin.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorStreamT\n            else\n              aStreamTolerance = _AVExtAdvEditorStreamT\n            end\n            if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0).Distance(_AVExtAdvEditorapt) >= aStreamTolerance) then\n              _AVExtAdvEditorScratchList.add({_AVExtAdvEditorapt.clone,\"Stream\"})\n              a
v.Run(\"AVExtAdvEditor.ToolDrawingPolygon\",nil)\n              if (_AVExtAdvEditorShowVer) then\n                aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n                if (aVertexEnd <> nil) then\n                  if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertexCurve\")\n                  else\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n                  end\n         
         aVertexEnd.invalidate\n                  aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n                  aVertexEnd.invalidate\n                  aVertex = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                  aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n                  aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n                  aVertex.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n                  agrlist.Add(aVertex)\n                end        \n              end\n              if (_AVE
xtAdvEditorPanClick) then\n                _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n              end\n            end\n          end\n        end\n        if (System.IsDoubleClick) then\n          av.Run(\"AVExtAdvEditor.ToolDrawingStop\",nil)\n        elseif (_AVExtAdvEditorClick = 1) then\n          _AVExtAdvEditorClick = nil\n          if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.Pan\n          elseif (_AVExtAdvEditorPanAlt and System.IsControlK
eyDown) then\n            _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          else\n            if (_AVExtAdvEditorScrathGrMouse <> nil) then\n              agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n            end\n            _AVExtAdvEditorScrathGrMouse = nil\n            if (_AVExtAdvEditorCurGr <> nil) then\n               agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n            end\n            _AVExtAdvEditorCurGr = nil\n            _AVExtAdvEditoraptL = nil\n            _AVExtAdvEdito
rapt = nil\n          end\n        else\n          av.DelayedRun(\"AVExtAdvEditor.ToolStreamPolygonEnd\",nil,0)\n        end\n      else\n        _AVExtAdvEditorClick = nil\n        if (_AVExtAdvEditorScrathGrMouse <> nil) then\n          agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n        end\n        _AVExtAdvEditorScrathGrMouse = nil\n        if (_AVExtAdvEditorCurGr <> nil) then\n           agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n        end\n        _AVExtAdvEditorCurGr = nil\n        _AVExtAdvEditoraptL 
= nil\n        _AVExtAdvEditorapt = nil\n      end\n    else\n      _AVExtAdvEditorClick = nil\n      if (_AVExtAdvEditorScrathGrMouse <> nil) then\n        agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n      end\n      _AVExtAdvEditorScrathGrMouse = nil\n      if (_AVExtAdvEditorCurGr <> nil) then\n         agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n      end\n      _AVExtAdvEditorCurGr = nil\n      _AVExtAdvEditoraptL = nil\n      _AVExtAdvEditorapt = nil\n    end\n  else\n    _AVExtAdvEditorClick = nil\n    if (_
AVExtAdvEditorScrathGrMouse <> nil) then\n      agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n    end\n    _AVExtAdvEditorScrathGrMouse = nil\n    if (_AVExtAdvEditorCurGr <> nil) then\n       agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n    end\n    _AVExtAdvEditorCurGr = nil\n    _AVExtAdvEditoraptL = nil\n    _AVExtAdvEditorapt = nil\n  end\nelse\n  _AVExtAdvEditorClick = nil\n  if (_AVExtAdvEditorScrathGrMouse <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n  end\n  _AVExtAdvEditorScrathGr
Mouse = nil\n  if (_AVExtAdvEditorCurGr <> nil) then\n     agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n  end\n  if (_AVExtAdvEditorScrathGr <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGr)\n  end\n  _AVExtAdvEditorScrathGr = nil\n  _AVExtAdvEditorCurGr = nil\n  _AVExtAdvEditoraptL = nil\n  _AVExtAdvEditorapt = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2027
	Owner:	2026
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2028
)

(DocAct.2029
	Doc:	2026
)

(SEd.2030
	Name:	"AVExtAdvEditor.ToolStreamPolygonEnd"
	CreationDate:	"22 Июнь 2004 г. 23:26:01"
	GUIName:	"Script"
	Win:	2031
	CSMgr:	2032
	DocExts:	2033
	Source:	"av.Run(\"AVExtAdvEditor.ToolStreamPolygon\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.2031
	Owner:	2030
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2032
)

(DocAct.2033
	Doc:	2030
)

(SEd.2034
	Name:	"AVExtAdvEditor.ToolStreamPolygonStart"
	CreationDate:	"22 Июнь 2004 г. 23:26:42"
	GUIName:	"Script"
	Win:	2035
	CSMgr:	2036
	DocExts:	2037
	Source:	"if (_AVExtAdvEditorStartSnapPan.Not) then\n  if (System.IsDoubleClick) then\n    av.DelayedRun(\"AVExtAdvEditor.ToolDrawingStop\",nil,0)\n  else\n    if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n      _AVExtAdvEditorView.GetDisplay.Pan\n    elseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n       _AVExtAdvEditorapt = _AVExtAdvEditorView.GetDisplay.returnuserpoint\n      _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n    else\n      if (_AVExtAdvEditorScratchList = nil) then\n      
  _AVExtAdvEditorScratchListPart = false\n        _AVExtAdvEditorScratchList = List.Make\n        adis = _AVExtAdvEditorView.getdisplay\n        agrlist = _AVExtAdvEditorView.getgraphics\n        if (_AVExtAdvEditoraptS = nil) then\n          _AVExtAdvEditoraptS = adis.returnuserpoint\n        else\n          _AVExtAdvEditorapt = adis.returnuserpoint\n        end\n        _AVExtAdvEditorScratchList.Add({_AVExtAdvEditoraptS.Clone,\"line\"})\n        if (_AVExtAdvEditorShowVer) then\n          aVertex = GraphicShape.Make(
_AVExtAdvEditoraptS.Clone)\n          aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n          aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n          aVertex.SetObjectTag(0)\n          agrlist.Add(aVertex)\n        end\n        _AVExtAdvEditoraptS = nil\n      end\n      if (_AVExtAdvEditorClick = nil) then\n        _AVExtAdvEditorClick = 2\n        av.Run(\"AVExtAdvEditor.ToolStreamPolygon\",nil)\n      else\n        _AVExtAdvEditorClick = 1\n      end\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2035
	Owner:	2034
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2036
)

(DocAct.2037
	Doc:	2034
)

(SEd.2038
	Name:	"AVExtAdvEditor.ToolStreamPolyline"
	CreationDate:	"22 Июнь 2004 г. 22:24:30"
	GUIName:	"Script"
	Win:	2039
	CSMgr:	2040
	DocExts:	2041
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScratchList <> nil) then\n  if (_AVExtAdvEditorView = av.Getactivedoc) then\n    if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEStream\").IsSelected) then\n      if ((_AVExtAdvEditorDrawClass = \"polyline\") or (_AVExtAdvEditorDrawClass = \"multi\")) then\n        apt = _AVExtAdvEditorView.getdisplay.returnuserpoint\n        if (_AVExtAdvEditorPan) then\n          aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n          aD
isapt = aViewRect.GetWidth / 100\n          if (aViewRect.AsPolygon.AsPolyline.Distance(apt).Abs < aDisapt) then\n            aptpan = Polyline.Make({{aViewRect.ReturnCenter,apt}}).Along(10)\n            _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n          end\n        end\n        if (apt <> _AVExtAdvEditoraptL) then\n          _AVExtAdvEditoraptL = apt.Clone\n          _AVExtAdvEditorapt = apt.Clone\n          aSnapReal = 0\n          if (_AVExtAdvEditorSnapEnb) then\n            if (_AVExtAdvEditorSnapTU = \"pixe
ls\") then\n              aSnapTolerance = (_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.GetWin.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\n            else\n              aSnapTolerance = _AVExtAdvEditorSnapT\n            end\n            aListK = _AVExtAdvEditorView.GetThemes\n            for each aThemeView in aLIstK  \n              aListE = _AVExtAdvEditorListSnap.Get(aThemeView)\n              if (aListE <> nil) then\n                for each a
ThemeSnapeI in 0..3\n                  aThemeSnape = aListE.Get(aThemeSnapeI)\n                  if (aThemeSnape <> 0) then\n                    aUserSnapPoint = _AVExtAdvEditorapt.Clone\n                    aThemeView.SetInteractiveSnapTolerance(aSnapTolerance)\n                    if (aThemeSnapeI = 0) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_VERTEX,aUserSnapPoint)\n                    elseif (aThemeSnapeI = 1) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_BOUNDARY,aUser
SnapPoint)\n                    elseif (aThemeSnapeI = 2) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_ENDPOINT,aUserSnapPoint)\n                    else\n                      aThemeView.UserSnapPoint(#POINT_SNAP_INTERSECTION,aUserSnapPoint)\n                    end\n                    if (aUserSnapPoint <> _AVExtAdvEditorapt) then\n                      _AVExtAdvEditorapt = aUserSnapPoint.Clone\n                      aSnapReal = 1\n                      break\n                    end\n          
        end\n                end\n              end\n              if (aSnapReal = 1) then\n                if (_AVExtAdvEditorSnapOff <> 0) then\n                  aDis1 = _AVExtAdvEditorapt.Distance(apt)\n                  aptPx = apt.GetX - _AVExtAdvEditorapt.GetX\n                  aptPy = apt.GetY - _AVExtAdvEditorapt.GetY\n                  aCosA = aptPx / aDis1.Abs\n                  aSinA = aptPy / aDis1.Abs\n                  aNewPx = _AVExtAdvEditorSnapOff * aCosA\n                  aNewPy = _AVExtAdvEditorS
napOff * aSinA\n                  aNewPtX = aNewPx + _AVExtAdvEditorapt.GetX\n                  aNewPtY = aNewPy + _AVExtAdvEditorapt.GetY\n                  _AVExtAdvEditorapt = aNewPtX@aNewPtY\n                end\n                break\n              end\n            end\n          end        \n          if (_AVExtAdvEditorShowCurP) then\n            if (_AVExtAdvEditorCurGr = nil) then\n              _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.SetName(\"_AVE
xtAdvEditorCurGr\")\n              if (aSnapReal = 1) then\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              else\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n              end\n              agrlist.Add(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr.invalidate\n            end\n            if (aSnapReal = 1) then\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            else\n              _AVExtAdvEditorCurGr.SetSy
mbol(_AVExtAdvEditorScratchP2)\n            end\n            _AVExtAdvEditorCurGr.invalidate\n            _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.clone)\n            _AVExtAdvEditorCurGr.invalidate\n          else\n            if (aSnapReal = 1) then\n              if (_AVExtAdvEditorCurGr = nil) then\n                _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAd
vEditorScratchP)\n                agrlist.Add(_AVExtAdvEditorCurGr)\n                _AVExtAdvEditorCurGr.invalidate\n              end\n              _AVExtAdvEditorCurGr.invalidate\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.invalidate\n            else\n              if (_AVExtAdvEditorCurGr <> nil) then\n                agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n                _A
VExtAdvEditorCurGr = nil\n              end\n            end\n          end         \n          if (_AVExtAdvEditorScratchListPart) then\n            if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) = \"Part\") then\n              adrsh = PolyLine.MakeEmpty\n            else\n              adrshlist = list.make \n              adrshlist.add(_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.count - 1).Get(0).Clone)\n              adrshlist.add(_AVExtAdvEditorapt.clone)\n            
  adrsh = Polyline.Make({adrshlist})\n            end\n          else        \n            adrshlist = list.make \n            adrshlist.add(_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.count - 1).Get(0).Clone)\n            adrshlist.add(_AVExtAdvEditorapt.clone)\n            adrsh = Polyline.Make({adrshlist})\n          end     \n          if (_AVExtAdvEditorScrathGrMouse = nil) then\n            _AVExtAdvEditorScrathGrMouse = GraphicShape.Make(adrsh)\n            _AVExtAdvEditorScrathGrMouse.SetName(\"_
AVExtAdvEditorScrathGrMouse\")\n            _AVExtAdvEditorScrathGrMouse.SetSymbol(_AVExtAdvEditorScratchLE)\n            agrlist.Add(_AVExtAdvEditorScrathGrMouse)\n            _AVExtAdvEditorScrathGrMouse.invalidate\n          end\n          _AVExtAdvEditorScrathGrMouse.invalidate\n          _AVExtAdvEditorScrathGrMouse.SetShape(adrsh)\n          _AVExtAdvEditorScrathGrMouse.invalidate\n          if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) <> _AVExtAdvEditorapt) then\n            
if (_AVExtAdvEditorStreamTU = \"pixels\") then\n              aStreamTolerance = (_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.GetWin.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorStreamT\n            else\n              aStreamTolerance = _AVExtAdvEditorStreamT\n            end\n            if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0).Distance(_AVExtAdvEditorapt) >= aStreamTolerance) then\n              _AVExtAdvEditorScr
atchList.add({_AVExtAdvEditorapt.clone,\"Stream\"})\n              av.Run(\"AVExtAdvEditor.ToolDrawing\",nil)\n              if (_AVExtAdvEditorShowVer) then\n                aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n                if (aVertexEnd <> nil) then\n                  if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertexCurve\")\n                  else\n                    aVertexEnd.SetNa
me(\"AVExtAdvEditorVertex\")\n                  end\n                  aVertexEnd.invalidate\n                  aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n                  aVertexEnd.invalidate\n                  aVertex = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                  aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n                  aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n                  aVertex.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n                  agrlist.Add(aVertex)\n          
      end        \n              end\n              if (_AVExtAdvEditorPanClick) then\n                _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n              end\n            end\n          end\n        end\n        if (System.IsDoubleClick) then\n          av.Run(\"AVExtAdvEditor.ToolDrawingStop\",nil)\n        elseif (_AVExtAdvEditorClick = 1) then\n          _AVExtAdvEditorClick = nil\n          if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.Pan\n   
       elseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          else\n            if (_AVExtAdvEditorScrathGrMouse <> nil) then\n              agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n            end\n            _AVExtAdvEditorScrathGrMouse = nil\n            if (_AVExtAdvEditorCurGr <> nil) then\n               agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n            end\n            _AVExtAdvEditorCurGr = nil\n      
      _AVExtAdvEditoraptL = nil\n            _AVExtAdvEditorapt = nil\n          end\n        else\n          av.DelayedRun(\"AVExtAdvEditor.ToolStreamPolylineEnd\",nil,0)\n        end\n      else\n        _AVExtAdvEditorClick = nil\n        if (_AVExtAdvEditorScrathGrMouse <> nil) then\n          agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n        end\n        _AVExtAdvEditorScrathGrMouse = nil\n        if (_AVExtAdvEditorCurGr <> nil) then\n           agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n        end\n    
    _AVExtAdvEditorCurGr = nil\n        _AVExtAdvEditoraptL = nil\n        _AVExtAdvEditorapt = nil\n      end\n    else\n      _AVExtAdvEditorClick = nil\n      if (_AVExtAdvEditorScrathGrMouse <> nil) then\n        agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n      end\n      _AVExtAdvEditorScrathGrMouse = nil\n      if (_AVExtAdvEditorCurGr <> nil) then\n         agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n      end\n      _AVExtAdvEditorCurGr = nil\n      _AVExtAdvEditoraptL = nil\n      _AVExtAdvEditorapt = 
nil\n    end\n  else\n    _AVExtAdvEditorClick = nil\n    if (_AVExtAdvEditorScrathGrMouse <> nil) then\n      agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n    end\n    _AVExtAdvEditorScrathGrMouse = nil\n    if (_AVExtAdvEditorCurGr <> nil) then\n       agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n    end\n    _AVExtAdvEditorCurGr = nil\n    _AVExtAdvEditoraptL = nil\n    _AVExtAdvEditorapt = nil\n  end\nelse\n  _AVExtAdvEditorClick = nil\n  if (_AVExtAdvEditorScrathGrMouse <> nil) then\n    agrlist.RemoveGraphic(_A
VExtAdvEditorScrathGrMouse)\n  end\n  _AVExtAdvEditorScrathGrMouse = nil\n  if (_AVExtAdvEditorCurGr <> nil) then\n     agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n  end\n  if (_AVExtAdvEditorScrathGr <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGr)\n  end\n  _AVExtAdvEditorScrathGr = nil\n  _AVExtAdvEditorCurGr = nil\n  _AVExtAdvEditoraptL = nil\n  _AVExtAdvEditorapt = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2039
	Owner:	2038
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2040
)

(DocAct.2041
	Doc:	2038
)

(SEd.2042
	Name:	"AVExtAdvEditor.ToolStreamPolylineClick"
	CreationDate:	"22 Июнь 2004 г. 22:53:47"
	GUIName:	"Script"
	Win:	2043
	CSMgr:	2044
	DocExts:	2045
	Source:	"if (_AVExtAdvEditorScratchList <> nil) then\n  aNum = _AVExtAdvEditorScratchList.Count - 1\n  if (_AVExtAdvEditorScratchList.Get(aNum).Get(0) = nil) then\n    _AVExtAdvEditorScratchList.Remove(aNum)\n  end\n  if (_AVExtAdvEditorShowVer.Not) then\n    agrlist = _AVExtAdvEditorView.getgraphics\n    aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorVertex\")\n    if (aListVertex <> nil) then\n      for each iaListVertex in aListVertex\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexEnd = ag
rlist.FindAllByName(\"AVExtAdvEditorVertexEnd\")\n    if (aListVertexEnd <> nil) then\n      for each iaListVertexEnd in aListVertexEnd\n        agrlist.RemoveGraphic(iaListVertexEnd)\n      end\n    end\n    aListVertexCurve = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurve\")\n    if (aListVertexCurve <> nil) then\n      for each iaListVertex in aListVertexCurve\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexCurveP1 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP1\")\n    if (aListVe
rtexCurveP1 <> nil) then\n      for each iaListVertex in aListVertexCurveP1\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexCurveP2 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP2\")\n    if (aListVertexCurveP2 <> nil) then\n      for each iaListVertex in aListVertexCurveP2\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n  end\nelse\n  if (_AVExtAdvEditorStartSnapRun.Not) then\n     av.Run(\"AVExtAdvEditor.StartSnapPoint\",nil)\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2043
	Owner:	2042
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2044
)

(DocAct.2045
	Doc:	2042
)

(SEd.2046
	Name:	"AVExtAdvEditor.ToolStreamPolylineEnd"
	CreationDate:	"22 Июнь 2004 г. 22:47:35"
	GUIName:	"Script"
	Win:	2047
	CSMgr:	2048
	DocExts:	2049
	Source:	"av.Run(\"AVExtAdvEditor.ToolStreamPolyline\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.2047
	Owner:	2046
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2048
)

(DocAct.2049
	Doc:	2046
)

(SEd.2050
	Name:	"AVExtAdvEditor.ToolStreamPolylineStart"
	CreationDate:	"22 Июнь 2004 г. 22:38:08"
	GUIName:	"Script"
	Win:	2051
	CSMgr:	2052
	DocExts:	2053
	Source:	"if (_AVExtAdvEditorStartSnapPan.Not) then\n  if (System.IsDoubleClick) then\n    av.DelayedRun(\"AVExtAdvEditor.ToolDrawingStop\",nil,0)\n  else\n    if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n      _AVExtAdvEditorView.GetDisplay.Pan\n    elseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n       _AVExtAdvEditorapt = _AVExtAdvEditorView.GetDisplay.returnuserpoint\n      _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n    else\n      if (_AVExtAdvEditorScratchList = nil) then\n      
  _AVExtAdvEditorScratchListPart = false\n        _AVExtAdvEditorScratchList = List.Make\n        adis = _AVExtAdvEditorView.getdisplay\n        agrlist = _AVExtAdvEditorView.getgraphics\n        if (_AVExtAdvEditoraptS = nil) then\n          _AVExtAdvEditoraptS = adis.returnuserpoint\n        else\n          _AVExtAdvEditorapt = adis.returnuserpoint\n        end\n        _AVExtAdvEditorScratchList.Add({_AVExtAdvEditoraptS.Clone,\"line\"})\n        if (_AVExtAdvEditorShowVer) then\n          aVertex = GraphicShape.Make(
_AVExtAdvEditoraptS.Clone)\n          aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n          aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n          aVertex.SetObjectTag(0)\n          agrlist.Add(aVertex)\n        end\n        _AVExtAdvEditoraptS = nil\n      end\n      if (_AVExtAdvEditorClick = nil) then\n        _AVExtAdvEditorClick = 2\n        av.Run(\"AVExtAdvEditor.ToolStreamPolyline\",nil)\n      else\n        _AVExtAdvEditorClick = 1\n      end\n    end\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2051
	Owner:	2050
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2052
)

(DocAct.2053
	Doc:	2050
)

(SEd.2054
	Name:	"AVExtAdvEditor.ToolStreamUpd"
	CreationDate:	"22 Июнь 2004 г. 22:50:24"
	GUIName:	"Script"
	Win:	2055
	CSMgr:	2056
	DocExts:	2057
	Source:	"self.SetEnabled(true)\naTask = av.FindDialog(\"AVExtAdvEditor.Task\").FindByName(\"aCBTask\").GetCurrentValue\nif (aTask = \"Create New Feature\") then\n  if (_AVExtAdvEditorTheme = nil) then\n    self.SetEnabled(false)\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n        self.SetApply(\"AVExtAdvEditor.ToolStreamPolygonStart\")\n        _AVExtAdvEditorDrawClass = \"polygon\"\n      elseif (_AVExtAdvEditorTheme.GetFTab
.FindField(\"Shape\").GetType = #FIELD_SHAPELINE) then\n        self.SetApply(\"AVExtAdvEditor.ToolStreamPolylineStart\")\n        _AVExtAdvEditorDrawClass = \"polyline\"\n      elseif (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEMULTIPOINT) then\n        self.SetApply(\"AVExtAdvEditor.ToolStreamPolylineStart\")\n        _AVExtAdvEditorDrawClass = \"multi\"\n      elseif (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOINT) then\n        self.SetEnabled(false)\n        _AVExt
AdvEditorDrawClass = \"point\"\n      end\n    else\n      self.SetEnabled(false)\n    end\n  end\nelseif (aTask = \"Auto Complete Polygon\") then\n  if (_AVExtAdvEditorTheme = nil) then\n    self.SetEnabled(false)\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n        self.SetApply(\"AVExtAdvEditor.ToolStreamPolylineStart\")\n        _AVExtAdvEditorDrawClass = \"polyline\"\n      else\n        self.SetEnabled(false)\n     
 end\n    else\n      self.SetEnabled(false)\n    end\n  end\nelseif (aTask = \"Cut Polygon\") then\n  if (_AVExtAdvEditorTheme = nil) then\n    self.SetEnabled(false)\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) then\n        self.SetApply(\"AVExtAdvEditor.ToolStreamPolylineStart\")\n        _AVExtAdvEditorDrawClass = \"polyline\"\n      else\n        self.SetEnabled(false)\n      end\n    else\n      self.SetEnabled(false)\n 
   end\n  end\nelseif (aTask = \"Split Polyline\") then\n  if (_AVExtAdvEditorTheme = nil) then\n    self.SetEnabled(false)\n  else\n    if (_AVExtAdvEditorTheme.GetFTab.IsEditable) then\n      if (_AVExtAdvEditorTheme.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPELINE) then\n        self.SetApply(\"AVExtAdvEditor.ToolStreamPolylineStart\")\n        _AVExtAdvEditorDrawClass = \"polyline\"\n      else\n        self.SetEnabled(false)\n      end\n    else\n      self.SetEnabled(false)\n    end\n  end  \nelseif (aTask = \"Modify Fe
ature\") then\n  \nelseif (aTask = \"Resape Feature\") then\n  self.SetApply(\"AVExtAdvEditor.ToolStreamPolylineStart\")\n  _AVExtAdvEditorDrawClass = \"polyline\"\n  aValid = false\n  aTL = _AVExtAdvEditorList.ReturnKeys\n  for each i in aTL\n    if (_AVExtAdvEditorList.Get(i) = 1) then\n      if (i.GetFTab.IsEditable) then\n        if ((i.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPEPOLY) or (i.GetFTab.FindField(\"Shape\").GetType = #FIELD_SHAPELINE)) then\n          if (i.GetFTab.GetSelection.Count > 0) then\n           
 aValid = true\n            break\n          end\n        end\n      end\n    end\n  end\n  self.setenabled(aValid)\nelseif (aTask = \"Select Features Using an Area\") then\n  self.SetApply(\"AVExtAdvEditor.ToolStreamPolygonStart\")\n  _AVExtAdvEditorDrawClass = \"polygon\"\nelseif (aTask = \"Select Features Using a Line\") then\n  self.SetApply(\"AVExtAdvEditor.ToolStreamPolylineStart\")\n  _AVExtAdvEditorDrawClass = \"polyline\"\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2055
	Owner:	2054
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2056
)

(DocAct.2057
	Doc:	2054
)

(SEd.2058
	Name:	"AVExtAdvEditor.ToolUpd"
	CreationDate:	"28 Апрель 2004 г. 1:52:50"
	GUIName:	"Script"
	Win:	2059
	CSMgr:	2060
	DocExts:	2061
	Source:	"av.GetProject.FindGUI(\"AVExtAdvEditView\").Update\n_AVExtAdvEditorView.GetWin.Activate"
	SearchStr:	"NotEditNumV"
)

(DocWin.2059
	Owner:	2058
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2060
)

(DocAct.2061
	Doc:	2058
)

(SEd.2062
	Name:	"AVExtAdvEditor.VertexEdit"
	CreationDate:	"7 Май 2004 г. 1:05:19"
	GUIName:	"Script"
	Win:	2063
	CSMgr:	2064
	DocExts:	2065
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScratchList <> nil) then\n  if (_AVExtAdvEditorView = av.Getactivedoc) then\n    if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEArc\").IsSelected) then\n      if ((_AVExtAdvEditorDrawClass = \"polyline\") or (_AVExtAdvEditorDrawClass = \"multi\")) then\n        apt = _AVExtAdvEditorView.getdisplay.returnuserpoint\n        if (_AVExtAdvEditorPan) then\n          aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n          aDisa
pt = aViewRect.GetWidth / 100\n          if (aViewRect.AsPolygon.AsPolyline.Distance(apt).Abs < aDisapt) then\n            aptpan = Polyline.Make({{aViewRect.ReturnCenter,apt}}).Along(10)\n            _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n          end\n        end\n        if (apt <> _AVExtAdvEditoraptL) then\n          _AVExtAdvEditoraptL = apt.Clone\n          _AVExtAdvEditorapt = apt.Clone\n          aSnapReal = 0\n          if (_AVExtAdvEditorSnapEnb) then\n            if (_AVExtAdvEditorSnapTU = \"pixels\"
) then\n              aSnapTolerance = (_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.GetWin.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\n            else\n              aSnapTolerance = _AVExtAdvEditorSnapT\n            end\n            aListK = _AVExtAdvEditorView.GetThemes\n            for each aThemeView in aLIstK  \n              aListE = _AVExtAdvEditorListSnap.Get(aThemeView)\n              if (aListE <> nil) then\n                for each aThe
meSnapeI in 0..3\n                  aThemeSnape = aListE.Get(aThemeSnapeI)\n                  if (aThemeSnape <> 0) then\n                    aUserSnapPoint = _AVExtAdvEditorapt.Clone\n                    aThemeView.SetInteractiveSnapTolerance(aSnapTolerance)\n                    if (aThemeSnapeI = 0) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_VERTEX,aUserSnapPoint)\n                    elseif (aThemeSnapeI = 1) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_BOUNDARY,aUserSna
pPoint)\n                    elseif (aThemeSnapeI = 2) then\n                      aThemeView.UserSnapPoint(#POINT_SNAP_ENDPOINT,aUserSnapPoint)\n                    else\n                      aThemeView.UserSnapPoint(#POINT_SNAP_INTERSECTION,aUserSnapPoint)\n                    end\n                    if (aUserSnapPoint <> _AVExtAdvEditorapt) then\n                      _AVExtAdvEditorapt = aUserSnapPoint.Clone\n                      aSnapReal = 1\n                      break\n                    end\n             
     end\n                end\n              end\n              if (aSnapReal = 1) then\n                if (_AVExtAdvEditorSnapOff <> 0) then\n                  aDis1 = _AVExtAdvEditorapt.Distance(apt)\n                  aptPx = apt.GetX - _AVExtAdvEditorapt.GetX\n                  aptPy = apt.GetY - _AVExtAdvEditorapt.GetY\n                  aCosA = aptPx / aDis1.Abs\n                  aSinA = aptPy / aDis1.Abs\n                  aNewPx = _AVExtAdvEditorSnapOff * aCosA\n                  aNewPy = _AVExtAdvEditorSnap
Off * aSinA\n                  aNewPtX = aNewPx + _AVExtAdvEditorapt.GetX\n                  aNewPtY = aNewPy + _AVExtAdvEditorapt.GetY\n                  _AVExtAdvEditorapt = aNewPtX@aNewPtY\n                end\n                break\n              end\n            end\n          end        \n          if (_AVExtAdvEditorShowCurP) then\n            if (_AVExtAdvEditorCurGr = nil) then\n              _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.SetName(\"_AVExtA
dvEditorCurGr\")\n              if (aSnapReal = 1) then\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              else\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n              end\n              agrlist.Add(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr.invalidate\n            end\n            if (aSnapReal = 1) then\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            else\n              _AVExtAdvEditorCurGr.SetSymbo
l(_AVExtAdvEditorScratchP2)\n            end\n            _AVExtAdvEditorCurGr.invalidate\n            _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.clone)\n            _AVExtAdvEditorCurGr.invalidate\n          else\n            if (aSnapReal = 1) then\n              if (_AVExtAdvEditorCurGr = nil) then\n                _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n                _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEd
itorScratchP)\n                agrlist.Add(_AVExtAdvEditorCurGr)\n                _AVExtAdvEditorCurGr.invalidate\n              end\n              _AVExtAdvEditorCurGr.invalidate\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.invalidate\n            else\n              if (_AVExtAdvEditorCurGr <> nil) then\n                agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n                _AVEx
tAdvEditorCurGr = nil\n              end\n            end\n          end \n          \n          if (_AVExtAdvEditorScratchListPart) then\n            if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) = \"Part\") then\n              adrsh = PolyLine.MakeEmpty\n            else\n              aLastNumber = _AVExtAdvEditorScratchList.Count - 1\n              if (_AVExtAdvEditorScratchList.Get(aLastNumber).Get(0) = nil) then\n                adrshlist = list.make\n                P0 = _AVExtAdv
EditorScratchList.Get(aLastNumber - 1).Get(0)\n                Pt = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(2)\n                P2 = _AVExtAdvEditorapt\n                P1x = (Pt.GetX - ((0.25 * P0.GetX) + (0.25 * P2.GetX))) / 0.5\n                P1y = (Pt.GetY - ((0.25 * P0.GetY) + (0.25 * P2.GetY))) / 0.5\n                for each t in 0..1 by _AVExtAdvEditorArcT\n                  Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n                  Pty = (((1 - t) ^ 2)
 * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY) \n                  adrshlist.Add(Ptx@Pty)\n                end\n              else    \n                adrshlist = list.make\n                alastpointV = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(0).Clone\n                adrshlist.add(alastpointV)\n                adrshlist.add(_AVExtAdvEditorapt)\n              end\n              adrsh = Polyline.Make({adrshlist})\n            end\n          else\n            aLastNumber = _AVExtAdvEditorScratc
hList.Count - 1\n            if (_AVExtAdvEditorScratchList.Get(aLastNumber).Get(0) = nil) then\n              adrshlist = list.make\n              P0 = _AVExtAdvEditorScratchList.Get(aLastNumber - 1).Get(0)\n              Pt = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(2)\n              P2 = _AVExtAdvEditorapt\n              P1x = (Pt.GetX - ((0.25 * P0.GetX) + (0.25 * P2.GetX))) / 0.5\n              P1y = (Pt.GetY - ((0.25 * P0.GetY) + (0.25 * P2.GetY))) / 0.5\n              for each t in 0..1 by _AVExtAdvEd
itorArcT\n                Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n                Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY) \n                adrshlist.Add(Ptx@Pty)\n              end      \n            else    \n              adrshlist = list.make\n              alastpointV = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(0).Clone\n              adrshlist.add(alastpointV)\n              adrshlist.add(_AVExtAdvEditorapt.clone)\n  
          end\n            adrsh = Polyline.Make({adrshlist})\n          end\n          if (_AVExtAdvEditorScrathGrMouse = nil) then\n            _AVExtAdvEditorScrathGrMouse = GraphicShape.Make(adrsh)\n            _AVExtAdvEditorScrathGrMouse.SetName(\"_AVExtAdvEditorScrathGrMouse\")\n            _AVExtAdvEditorScrathGrMouse.SetSymbol(_AVExtAdvEditorScratchLE)\n            agrlist.Add(_AVExtAdvEditorScrathGrMouse)\n            _AVExtAdvEditorScrathGrMouse.invalidate\n          end\n          _AVExtAdvEditorScrathGrMou
se.invalidate\n          _AVExtAdvEditorScrathGrMouse.SetShape(adrsh)\n          _AVExtAdvEditorScrathGrMouse.invalidate\n        end\n        if (System.IsDoubleClick) then\n          av.Run(\"AVExtAdvEditor.ToolDrawingStop\",nil)\n        elseif (_AVExtAdvEditorClick = 1) then\n          _AVExtAdvEditorClick = nil\n          if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n            _AVExtAdvEditorView.GetDisplay.Pan\n          elseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n            _AV
ExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          else\n            aLastNumber = _AVExtAdvEditorScratchList.Count - 1\n            if (_AVExtAdvEditorScratchListPart) then\n              if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(0) = \"Part\") then\n                _AVExtAdvEditorScratchListPartPoint = _AVExtAdvEditorapt.clone\n                _AVExtAdvEditorScratchList.add({_AVExtAdvEditorapt.clone,\"line\"})\n                aVertexAdded = 3\n              else\n     
           if (_AVExtAdvEditorScratchList.Get(aLastNumber).Get(0) = nil) then\n                  aVertexAdded = 1\n                  aPMiddle = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(2).Clone\n                  _AVExtAdvEditorScratchList.Remove(aLastNumber)\n                  _AVExtAdvEditorScratchList.add({_AVExtAdvEditorapt,\"arc\",aPMiddle})\n                  av.Run(\"AVExtAdvEditor.ToolDrawing\",nil)\n                else\n                  aVertexAdded = 0\n                  _AVExtAdvEditorScratchList.ad
d({nil,\"arc\",_AVExtAdvEditorapt})\n                end\n              end\n            else\n              if (_AVExtAdvEditorScratchList.Get(aLastNumber).Get(0) = nil) then\n                aVertexAdded = 1\n                aPMiddle = _AVExtAdvEditorScratchList.Get(aLastNumber).Get(2).Clone\n                _AVExtAdvEditorScratchList.Remove(aLastNumber)\n                _AVExtAdvEditorScratchList.add({_AVExtAdvEditorapt,\"arc\",aPMiddle})\n                av.Run(\"AVExtAdvEditor.ToolDrawing\",nil)\n              else\n  
              aVertexAdded = 0\n                _AVExtAdvEditorScratchList.add({nil,\"arc\",_AVExtAdvEditorapt})\n              end\n            end\n            if (_AVExtAdvEditorShowVer) then\n              if (aVertexAdded = 1) then\n                aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n                if (aVertexEnd <> nil) then\n                  if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"Arc\") then\n                    aVertexEnd.SetName(\"AVExtAdvEdi
torVertexArc\")\n                  elseif (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertexCurve\")\n                  else\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n                  end\n                  aVertexEnd.invalidate\n                  aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n                  aVertexEnd.invalidate\n                  aVertex = GraphicShape.Make(_AVExtAdvEditor
apt.Clone)\n                  aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n                  aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n                  aVertex.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n                  agrlist.Add(aVertex)\n                  aVertexArc = GraphicShape.Make(_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 1).Get(2).Clone)\n                  aVertexArc.SetName(\"AVExtAdvEditorVertexArcP\")\n                  aVertexArc.SetSymbol(_AVExtAdvEditorVertexArc)\n
                  aVertexArc.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n                  agrlist.Add(aVertexArc)\n                end\n              elseif (aVertexAdded = 3) then\n                aVertexEnd = agrlist.FindByName(\"AVExtAdvEditorVertexEnd\")\n                if (aVertexEnd <> nil) then\n                  if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"Arc\") then\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertexArc\")\n                  elseif (_A
VExtAdvEditorScratchList.Get(_AVExtAdvEditorScratchList.Count - 2).Get(1) = \"curve\") then\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertexCurve\")\n                  else\n                    aVertexEnd.SetName(\"AVExtAdvEditorVertex\")\n                  end\n                  aVertexEnd.invalidate\n                  aVertexEnd.SetSymbol(_AVExtAdvEditorVertex)\n                  aVertexEnd.invalidate\n                  aVertex = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n                  aVertex.SetNam
e(\"AVExtAdvEditorVertexEnd\")\n                  aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n                  aVertex.SetObjectTag(_AVExtAdvEditorScratchList.Count - 1)\n                  agrlist.Add(aVertex)\n                end\n              end        \n            end\n            if (_AVExtAdvEditorPanClick) then\n              _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n            end\n          end\n          av.DelayedRun(\"AVExtAdvEditor.ToolArcPolylineStart\",nil,0)\n        else\n          av.D
elayedRun(\"AVExtAdvEditor.ToolArcPolylineEnd\",nil,0)\n        end\n      else\n        _AVExtAdvEditorClick = nil\n        if (_AVExtAdvEditorScrathGrMouse <> nil) then\n          agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n        end\n        _AVExtAdvEditorScrathGrMouse = nil\n        if (_AVExtAdvEditorCurGr <> nil) then\n           agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n        end\n        _AVExtAdvEditorCurGr = nil\n        _AVExtAdvEditoraptL = nil\n        _AVExtAdvEditorapt = nil\n      end\n    e
lse\n      _AVExtAdvEditorClick = nil\n      if (_AVExtAdvEditorScrathGrMouse <> nil) then\n        agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n      end\n      _AVExtAdvEditorScrathGrMouse = nil\n      if (_AVExtAdvEditorCurGr <> nil) then\n         agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n      end\n      _AVExtAdvEditorCurGr = nil\n      _AVExtAdvEditoraptL = nil\n      _AVExtAdvEditorapt = nil\n    end\n  else\n    _AVExtAdvEditorClick = nil\n    if (_AVExtAdvEditorScrathGrMouse <> nil) then\n      agrlist
.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n    end\n    _AVExtAdvEditorScrathGrMouse = nil\n    if (_AVExtAdvEditorCurGr <> nil) then\n       agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n    end\n    _AVExtAdvEditorCurGr = nil\n    _AVExtAdvEditoraptL = nil\n    _AVExtAdvEditorapt = nil\n  end\nelse\n  _AVExtAdvEditorClick = nil\n  if (_AVExtAdvEditorScrathGrMouse <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n  end\n  _AVExtAdvEditorScrathGrMouse = nil\n  if (_AVExtAdvEditorCurGr <> nil) then\n  
   agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n  end\n  if (_AVExtAdvEditorScrathGr <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGr)\n  end\n  _AVExtAdvEditorScrathGr = nil\n  _AVExtAdvEditorCurGr = nil\n  _AVExtAdvEditoraptL = nil\n  _AVExtAdvEditorapt = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2063
	Owner:	2062
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2064
)

(DocAct.2065
	Doc:	2062
)

(SEd.2066
	Name:	"AVExtAdvEditor.VertexEditArc"
	CreationDate:	"7 Май 2004 г. 3:18:46"
	GUIName:	"Script"
	Win:	2067
	CSMgr:	2068
	DocExts:	2069
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScratchList <> nil) then\n  if (_AVExtAdvEditorView = av.Getactivedoc) then\n    if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEVertex\").IsSelected) then\n      apt = _AVExtAdvEditorView.getdisplay.returnuserpoint\n      if (_AVExtAdvEditorPan) then\n        aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n        aDisapt = aViewRect.GetWidth / 100\n        if (aViewRect.AsPolygon.AsPolyline.Distance(apt).Abs < aDisapt)
 then\n          aptpan = Polyline.Make({{aViewRect.ReturnCenter,apt}}).Along(10)\n          _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n        end\n      end\n      if (apt <> _AVExtAdvEditoraptL) then\n        _AVExtAdvEditoraptL = apt.Clone\n        _AVExtAdvEditorapt = apt.Clone\n        aSnapReal = 0\n        if (_AVExtAdvEditorSnapEnb) then\n          if (_AVExtAdvEditorSnapTU = \"pixels\") then\n            aSnapTolerance = (_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.GetWin.
ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\n          else\n            aSnapTolerance = _AVExtAdvEditorSnapT\n          end\n          aListK = _AVExtAdvEditorView.GetThemes\n          for each aThemeView in aLIstK  \n            aListE = _AVExtAdvEditorListSnap.Get(aThemeView)\n            if (aListE <> nil) then\n              for each aThemeSnapeI in 0..3\n                aThemeSnape = aListE.Get(aThemeSnapeI)\n                if (aThemeSnape <> 0) then\n                  aUserSna
pPoint = _AVExtAdvEditorapt.Clone\n                  aThemeView.SetInteractiveSnapTolerance(aSnapTolerance)\n                  if (aThemeSnapeI = 0) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_VERTEX,aUserSnapPoint)\n                  elseif (aThemeSnapeI = 1) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_BOUNDARY,aUserSnapPoint)\n                  elseif (aThemeSnapeI = 2) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_ENDPOINT,aUserSnapPoint)\n                  
else\n                    aThemeView.UserSnapPoint(#POINT_SNAP_INTERSECTION,aUserSnapPoint)\n                  end\n                  if (aUserSnapPoint <> _AVExtAdvEditorapt) then\n                    _AVExtAdvEditorapt = aUserSnapPoint.Clone\n                    aSnapReal = 1\n                    break\n                  end\n                end\n              end\n            end\n            if (aSnapReal = 1) then\n              if (_AVExtAdvEditorSnapOff <> 0) then\n                aDis1 = _AVExtAdvEditorapt.Dista
nce(apt)\n                aptPx = apt.GetX - _AVExtAdvEditorapt.GetX\n                aptPy = apt.GetY - _AVExtAdvEditorapt.GetY\n                aCosA = aptPx / aDis1.Abs\n                aSinA = aptPy / aDis1.Abs\n                aNewPx = _AVExtAdvEditorSnapOff * aCosA\n                aNewPy = _AVExtAdvEditorSnapOff * aSinA\n                aNewPtX = aNewPx + _AVExtAdvEditorapt.GetX\n                aNewPtY = aNewPy + _AVExtAdvEditorapt.GetY\n                _AVExtAdvEditorapt = aNewPtX@aNewPtY\n              end\n
              break\n            end\n          end\n        end        \n        if (_AVExtAdvEditorShowCurP) then\n          if (_AVExtAdvEditorCurGr = nil) then\n            _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n            _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n            if (aSnapReal = 1) then\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            else\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n            end
\n            agrlist.Add(_AVExtAdvEditorCurGr)\n            _AVExtAdvEditorCurGr.invalidate\n          end\n          if (aSnapReal = 1) then\n            _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n          else\n            _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n          end\n          _AVExtAdvEditorCurGr.invalidate\n          _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.clone)\n          _AVExtAdvEditorCurGr.invalidate\n        else\n          if (aSnapReal = 1) then\n          
  if (_AVExtAdvEditorCurGr = nil) then\n              _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              agrlist.Add(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr.invalidate\n            end\n            _AVExtAdvEditorCurGr.invalidate\n            _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            _AVExtAdvEditorCurGr.
SetShape(_AVExtAdvEditorapt.Clone)\n            _AVExtAdvEditorCurGr.invalidate\n          else\n            if (_AVExtAdvEditorCurGr <> nil) then\n              agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr = nil\n            end\n          end\n        end\n        adrshlist = list.make\n        if (_AVExtAdvEditorVertexNum = (_AVExtAdvEditorScratchList.count - 1)) then          \n          P0 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum - 1).Get(0)\n          Pt = _AVEx
tAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(2)\n          P2 = _AVExtAdvEditorapt\n          P1x = (Pt.GetX - ((0.25 * P0.GetX) + (0.25 * P2.GetX))) / 0.5\n          P1y = (Pt.GetY - ((0.25 * P0.GetY) + (0.25 * P2.GetY))) / 0.5\n          for each t in 0..1 by _AVExtAdvEditorArcT\n            Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n            Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY) \n            adrshlist.Add(Ptx@
Pty)\n          end     \n        else\n          P0 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum - 1).Get(0)\n          Pt = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(2)\n          P2 = _AVExtAdvEditorapt\n          P1x = (Pt.GetX - ((0.25 * P0.GetX) + (0.25 * P2.GetX))) / 0.5\n          P1y = (Pt.GetY - ((0.25 * P0.GetY) + (0.25 * P2.GetY))) / 0.5\n          for each t in 0..1 by _AVExtAdvEditorArcT\n            Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2
) * P2.Getx)\n            Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY) \n            adrshlist.Add(Ptx@Pty)\n          end\n          if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum + 1).Get(1) = \"Arc\") then\n            P0 = _AVExtAdvEditorapt.clone\n            Pt = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum + 1).Get(2)\n            P2 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum + 1).Get(0)\n            P1x = (Pt.GetX - ((0.25 * P0.GetX
) + (0.25 * P2.GetX))) / 0.5\n            P1y = (Pt.GetY - ((0.25 * P0.GetY) + (0.25 * P2.GetY))) / 0.5\n            for each t in 0..1 by _AVExtAdvEditorArcT\n              Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n              Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY) \n              adrshlist.Add(Ptx@Pty)\n            end\n          elseif (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum + 1).Get(1) = \"Curve\") then\n   
         P0 = _AVExtAdvEditorapt.clone\n            P1 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum + 1).Get(2)\n            P2 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum + 1).Get(3)\n            P3 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum + 1).Get(0)\n            for each t in 0..1 by _AVExtAdvEditorCurveT\n              Ptx = (((1 - t) ^ 3) * P0.GetX) + ((3 * t * ((1 - t) ^ 2)) * P1.GetX) + ((3 * (t ^ 2) * (1 - t)) * P2.GetX) + ((t ^ 3) * P3.GetX)\n              Pty 
= (((1 - t) ^ 3) * P0.GetY) + ((3 * t * ((1 - t) ^ 2)) * P1.GetY) + ((3 * (t ^ 2) * (1 - t)) * P2.GetY) + ((t ^ 3) * P3.GetY)\n              adrshlist.Add(Ptx@Pty)\n            end\n          else\n            adrshlist.add(_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum + 1).Get(0).clone)\n          end\n        end\n        adrsh = Polyline.Make({adrshlist})\n        if (_AVExtAdvEditorScrathGrMouse = nil) then\n          _AVExtAdvEditorScrathGrMouse = GraphicShape.Make(adrsh)\n          _AVExtAdvEditorScra
thGrMouse.SetName(\"_AVExtAdvEditorScrathGrMouse\")\n          _AVExtAdvEditorScrathGrMouse.SetSymbol(_AVExtAdvEditorScratchLE)\n          agrlist.Add(_AVExtAdvEditorScrathGrMouse)\n          _AVExtAdvEditorScrathGrMouse.invalidate\n        end\n        _AVExtAdvEditorScrathGrMouse.invalidate\n        _AVExtAdvEditorScrathGrMouse.SetShape(adrsh)\n        _AVExtAdvEditorScrathGrMouse.invalidate\n      end\n      if (_AVExtAdvEditorClickVertex = 1) then\n        if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n  
        _AVExtAdvEditorClickVertex = 2\n          _AVExtAdvEditorView.GetDisplay.Pan\n          av.DelayedRun(\"AVExtAdvEditor.VertexEditArcEnd\",nil,0)\n        elseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n          _AVExtAdvEditorClickVertex = 2\n          _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          av.DelayedRun(\"AVExtAdvEditor.VertexEditArcEnd\",nil,0)\n        else\n          if (_AVExtAdvEditorScrathGrMouse <> nil) then\n            agrlist.RemoveGraphic(_AVExtAdvEditor
ScrathGrMouse)\n          end\n          if (_AVExtAdvEditorCurGr <> nil) then\n            agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n          end\n          _AVExtAdvEditorCurGr = nil\n          _AVExtAdvEditorScrathGrMouse = nil\n          _AVExtAdvEditorClickVertex = nil\n          aNewVertexList = {_AVExtAdvEditorapt,_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(1).clone,_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(2).clone}\n          _AVExtAdvEditorScratchList.Set(_AVExtAdvEd
itorVertexNum,aNewVertexList)\n          if (_AVExtAdvEditorVertexNum <> (_AVExtAdvEditorScratchList.Count - 1)) then\n            aListVertexGr = agrlist.FindAllByName(\"AVExtAdvEditorVertexArc\")\n            if (aListVertexGr <> nil) then\n              for each iaListVertexGr in aListVertexGr\n                if (iaListVertexGr.GetObjectTag = _AVExtAdvEditorVertexNum) then\n                  iaListVertexGr.invalidate\n                  iaListVertexGr.SetShape(_AVExtAdvEditorapt.Clone)\n                  iaListVer
texGr.invalidate\n                  break\n                end\n              end\n            end\n          else\n            aListVertexGr = agrlist.FindAllByName(\"AVExtAdvEditorVertexEnd\")\n            if (aListVertexGr <> nil) then\n              for each iaListVertexGr in aListVertexGr\n                if (iaListVertexGr.GetObjectTag = _AVExtAdvEditorVertexNum) then\n                  iaListVertexGr.invalidate\n                  iaListVertexGr.SetShape(_AVExtAdvEditorapt.Clone)\n                  iaListVertexGr.i
nvalidate\n                  break\n                end\n              end\n            end\n          end\n          iSLN = 0\n          adrgraddShL = {}\n          for each iSL in _AVExtAdvEditorScratchList\n            if (iSL.Get(1) = \"line\") then\n              adrgraddShL.Add(iSL.Get(0).Clone)\n            elseif (iSL.Get(1) = \"Arc\") then       \n              P0 = _AVExtAdvEditorScratchList.Get(iSLN - 1).Get(0)\n              Pt = iSL.Get(2)\n              P2 = iSL.Get(0)\n              P1x = (Pt.GetX - ((0.25 * P0
.GetX) + (0.25 * P2.GetX))) / 0.5\n              P1y = (Pt.GetY - ((0.25 * P0.GetY) + (0.25 * P2.GetY))) / 0.5\n              P1 = P1x@P1y\n              for each t in 0..1 by _AVExtAdvEditorArcT\n                Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1.getX) + ((t ^ 2) * P2.Getx)\n                Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1.getY) + ((t ^ 2) * P2.GetY) \n                adrgraddShL.Add(Ptx@Pty)\n              end\n            elseif (iSL.Get(1) = \"Stream\") then\n   
           adrgraddShL.Add(iSL.Get(0).Clone)\n            elseif (iSL.Get(1) = \"Curve\") then\n              P0 = _AVExtAdvEditorScratchList.Get(iSLN - 1).Get(0)\n              P1 = iSL.Get(2)\n              P2 = iSL.Get(3)\n              P3 = iSL.Get(0)\n              for each t in 0..1 by _AVExtAdvEditorCurveT\n                Ptx = (((1 - t) ^ 3) * P0.GetX) + ((3 * t * ((1 - t) ^ 2)) * P1.GetX) + ((3 * (t ^ 2) * (1 - t)) * P2.GetX) + ((t ^ 3) * P3.GetX)\n                Pty = (((1 - t) ^ 3) * P0.GetY) + ((3 * t *
 ((1 - t) ^ 2)) * P1.GetY) + ((3 * (t ^ 2) * (1 - t)) * P2.GetY) + ((t ^ 3) * P3.GetY)\n                adrgraddShL.Add(Ptx@Pty)\n              end\n            end\n            iSLN = iSLN + 1\n          end\n          adrgraddSh = Polyline.Make({adrgraddShL})\n          if (_AVExtAdvEditorScrathGr = nil) then    \n            _AVExtAdvEditorScrathGr = GraphicShape.Make(adrgraddSh)\n            _AVExtAdvEditorScrathGr.SetName(\"_AVExtAdvEditorScrathGr\")\n            _AVExtAdvEditorScrathGr.SetSymbol(_AVExtAdvEditorSc
ratchL)\n            agrlist.Add(_AVExtAdvEditorScrathGr)\n            _AVExtAdvEditorScrathGr.invalidate\n          end\n          _AVExtAdvEditorScrathGr.invalidate\n          _AVExtAdvEditorScrathGr.SetShape(adrgraddSh)\n          _AVExtAdvEditorScrathGr.invalidate\n          if (_AVExtAdvEditorPanClick) then\n            _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          end\n        end        \n      else\n        av.DelayedRun(\"AVExtAdvEditor.VertexEditArcEnd\",nil,0)\n      end\n    else\n      _AV
ExtAdvEditorClickVertex = nil\n      _AVExtAdvEditorClick = nil\n      if (_AVExtAdvEditorScrathGrMouse <> nil) then\n        agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n      end\n      _AVExtAdvEditorScrathGrMouse = nil\n      if (_AVExtAdvEditorCurGr <> nil) then\n         agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n      end\n      _AVExtAdvEditorCurGr = nil\n      _AVExtAdvEditoraptL = nil\n      _AVExtAdvEditorapt = nil\n    end\n  else\n    _AVExtAdvEditorClick = nil\n    _AVExtAdvEditorClickVertex = nil\n
    if (_AVExtAdvEditorScrathGrMouse <> nil) then\n      agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n    end\n    _AVExtAdvEditorScrathGrMouse = nil\n    if (_AVExtAdvEditorCurGr <> nil) then\n       agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n    end\n    _AVExtAdvEditorCurGr = nil\n    _AVExtAdvEditoraptL = nil\n    _AVExtAdvEditorapt = nil\n  end\nelse\n  _AVExtAdvEditorClick = nil\n  _AVExtAdvEditorClickVertex = nil\n  if (_AVExtAdvEditorScrathGrMouse <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorSc
rathGrMouse)\n  end\n  _AVExtAdvEditorScrathGrMouse = nil\n  if (_AVExtAdvEditorCurGr <> nil) then\n     agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n  end\n  _AVExtAdvEditorCurGr = nil\n  if (_AVExtAdvEditorScrathGr <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGr)\n  end\n  _AVExtAdvEditorScrathGr = nil\n  _AVExtAdvEditoraptL = nil\n  _AVExtAdvEditorapt = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2067
	Owner:	2066
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2068
)

(DocAct.2069
	Doc:	2066
)

(SEd.2070
	Name:	"AVExtAdvEditor.VertexEditArcEnd"
	CreationDate:	"7 Май 2004 г. 3:19:08"
	GUIName:	"Script"
	Win:	2071
	CSMgr:	2072
	DocExts:	2073
	Source:	"av.Run(\"AVExtAdvEditor.VertexEditArc\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.2071
	Owner:	2070
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2072
)

(DocAct.2073
	Doc:	2070
)

(SEd.2074
	Name:	"AVExtAdvEditor.VertexEditArcP"
	CreationDate:	"7 Май 2004 г. 3:50:02"
	GUIName:	"Script"
	Win:	2075
	CSMgr:	2076
	DocExts:	2077
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScratchList <> nil) then\n  if (_AVExtAdvEditorView = av.Getactivedoc) then    \n    if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEVertex\").IsSelected) then\n      apt = _AVExtAdvEditorView.getdisplay.returnuserpoint\n      if (_AVExtAdvEditorPan) then\n        aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n        aDisapt = aViewRect.GetWidth / 100\n        if (aViewRect.AsPolygon.AsPolyline.Distance(apt).Abs < aDis
apt) then\n          aptpan = Polyline.Make({{aViewRect.ReturnCenter,apt}}).Along(10)\n          _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n        end\n      end\n      if (apt <> _AVExtAdvEditoraptL) then\n        _AVExtAdvEditoraptL = apt.Clone\n        _AVExtAdvEditorapt = apt.Clone\n        aSnapReal = 0\n        if (_AVExtAdvEditorSnapEnb) then\n          if (_AVExtAdvEditorSnapTU = \"pixels\") then\n            aSnapTolerance = (_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.Get
Win.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\n          else\n            aSnapTolerance = _AVExtAdvEditorSnapT\n          end\n          aListK = _AVExtAdvEditorView.GetThemes\n          for each aThemeView in aLIstK  \n            aListE = _AVExtAdvEditorListSnap.Get(aThemeView)\n            if (aListE <> nil) then\n              for each aThemeSnapeI in 0..3\n                aThemeSnape = aListE.Get(aThemeSnapeI)\n                if (aThemeSnape <> 0) then\n                  aUse
rSnapPoint = _AVExtAdvEditorapt.Clone\n                  aThemeView.SetInteractiveSnapTolerance(aSnapTolerance)\n                  if (aThemeSnapeI = 0) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_VERTEX,aUserSnapPoint)\n                  elseif (aThemeSnapeI = 1) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_BOUNDARY,aUserSnapPoint)\n                  elseif (aThemeSnapeI = 2) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_ENDPOINT,aUserSnapPoint)\n              
    else\n                    aThemeView.UserSnapPoint(#POINT_SNAP_INTERSECTION,aUserSnapPoint)\n                  end\n                  if (aUserSnapPoint <> _AVExtAdvEditorapt) then\n                    _AVExtAdvEditorapt = aUserSnapPoint.Clone\n                    aSnapReal = 1\n                    break\n                  end\n                end\n              end\n            end\n            if (aSnapReal = 1) then\n              if (_AVExtAdvEditorSnapOff <> 0) then\n                aDis1 = _AVExtAdvEditorapt.D
istance(apt)\n                aptPx = apt.GetX - _AVExtAdvEditorapt.GetX\n                aptPy = apt.GetY - _AVExtAdvEditorapt.GetY\n                aCosA = aptPx / aDis1.Abs\n                aSinA = aptPy / aDis1.Abs\n                aNewPx = _AVExtAdvEditorSnapOff * aCosA\n                aNewPy = _AVExtAdvEditorSnapOff * aSinA\n                aNewPtX = aNewPx + _AVExtAdvEditorapt.GetX\n                aNewPtY = aNewPy + _AVExtAdvEditorapt.GetY\n                _AVExtAdvEditorapt = aNewPtX@aNewPtY\n              
end\n              break\n            end\n          end\n        end        \n        if (_AVExtAdvEditorShowCurP) then\n          if (_AVExtAdvEditorCurGr = nil) then\n            _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n            _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n            if (aSnapReal = 1) then\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            else\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n           
 end\n            agrlist.Add(_AVExtAdvEditorCurGr)\n            _AVExtAdvEditorCurGr.invalidate\n          end\n          if (aSnapReal = 1) then\n            _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n          else\n            _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n          end\n          _AVExtAdvEditorCurGr.invalidate\n          _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.clone)\n          _AVExtAdvEditorCurGr.invalidate\n        else\n          if (aSnapReal = 1) then\n      
      if (_AVExtAdvEditorCurGr = nil) then\n              _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              agrlist.Add(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr.invalidate\n            end\n            _AVExtAdvEditorCurGr.invalidate\n            _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            _AVExtAdvEditorCu
rGr.SetShape(_AVExtAdvEditorapt.Clone)\n            _AVExtAdvEditorCurGr.invalidate\n          else\n            if (_AVExtAdvEditorCurGr <> nil) then\n              agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr = nil\n            end\n          end\n        end\n        adrshlist = list.make          \n        P0 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum - 1).Get(0)\n        Pt = _AVExtAdvEditorapt\n        P2 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).
Get(0)\n        P1x = (Pt.GetX - ((0.25 * P0.GetX) + (0.25 * P2.GetX))) / 0.5\n        P1y = (Pt.GetY - ((0.25 * P0.GetY) + (0.25 * P2.GetY))) / 0.5\n        for each t in 0..1 by _AVExtAdvEditorArcT\n          Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n          Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY) \n          adrshlist.Add(Ptx@Pty)\n        end     \n        adrsh = Polyline.Make({adrshlist})\n        if (_AVExtAdvEditorScrath
GrMouse = nil) then\n          _AVExtAdvEditorScrathGrMouse = GraphicShape.Make(adrsh)\n          _AVExtAdvEditorScrathGrMouse.SetName(\"_AVExtAdvEditorScrathGrMouse\")\n          _AVExtAdvEditorScrathGrMouse.SetSymbol(_AVExtAdvEditorScratchLE)\n          agrlist.Add(_AVExtAdvEditorScrathGrMouse)\n          _AVExtAdvEditorScrathGrMouse.invalidate\n        end\n        _AVExtAdvEditorScrathGrMouse.invalidate\n        _AVExtAdvEditorScrathGrMouse.SetShape(adrsh)\n        _AVExtAdvEditorScrathGrMouse.invalidate\n      end
\n      if (_AVExtAdvEditorClickVertex = 1) then\n        if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n          _AVExtAdvEditorClickVertex = 2\n          _AVExtAdvEditorView.GetDisplay.Pan\n          av.DelayedRun(\"AVExtAdvEditor.VertexEditArcPEnd\",nil,0)\n        elseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n          _AVExtAdvEditorClickVertex = 2\n          _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          av.DelayedRun(\"AVExtAdvEditor.VertexEditArcPEnd\",nil,0)\n 
       else\n          if (_AVExtAdvEditorScrathGrMouse <> nil) then\n            agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n          end\n          if (_AVExtAdvEditorCurGr <> nil) then\n            agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n          end\n          _AVExtAdvEditorCurGr = nil\n          _AVExtAdvEditorScrathGrMouse = nil\n          _AVExtAdvEditorClickVertex = nil\n          aNewVertexList = {_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(0).clone,_AVExtAdvEditorScratchLis
t.Get(_AVExtAdvEditorVertexNum).Get(1).clone,_AVExtAdvEditorapt.clone}\n          _AVExtAdvEditorScratchList.Set(_AVExtAdvEditorVertexNum,aNewVertexList)\n          aListVertexGr = agrlist.FindAllByName(\"AVExtAdvEditorVertexArcP\")\n          if (aListVertexGr <> nil) then\n            for each iaListVertexGr in aListVertexGr\n              if (iaListVertexGr.GetObjectTag = _AVExtAdvEditorVertexNum) then\n                iaListVertexGr.invalidate\n                iaListVertexGr.SetShape(_AVExtAdvEditorapt.Clone)\n  
              iaListVertexGr.invalidate\n                break\n              end\n            end\n          end\n          av.Run(\"AVExtAdvEditor.ToolDrawing\",nil)\n          if (_AVExtAdvEditorPanClick) then\n            _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          end\n        end       \n      else\n        av.DelayedRun(\"AVExtAdvEditor.VertexEditArcPEnd\",nil,0)\n      end\n    else\n      _AVExtAdvEditorClickVertex = nil\n      _AVExtAdvEditorClick = nil\n      if (_AVExtAdvEditorScrathGrMouse 
<> nil) then\n        agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n      end\n      _AVExtAdvEditorScrathGrMouse = nil\n      if (_AVExtAdvEditorCurGr <> nil) then\n         agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n      end\n      _AVExtAdvEditorCurGr = nil\n      _AVExtAdvEditoraptL = nil\n      _AVExtAdvEditorapt = nil\n    end\n  else\n    _AVExtAdvEditorClick = nil\n    _AVExtAdvEditorClickVertex = nil\n    if (_AVExtAdvEditorScrathGrMouse <> nil) then\n      agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrM
ouse)\n    end\n    _AVExtAdvEditorScrathGrMouse = nil\n    if (_AVExtAdvEditorCurGr <> nil) then\n       agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n    end\n    _AVExtAdvEditorCurGr = nil\n    _AVExtAdvEditoraptL = nil\n    _AVExtAdvEditorapt = nil\n  end\nelse\n  _AVExtAdvEditorClick = nil\n  _AVExtAdvEditorClickVertex = nil\n  if (_AVExtAdvEditorScrathGrMouse <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n  end\n  _AVExtAdvEditorScrathGrMouse = nil\n  if (_AVExtAdvEditorCurGr <> nil) then\n     a
grlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n  end\n  _AVExtAdvEditorCurGr = nil\n  if (_AVExtAdvEditorScrathGr <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGr)\n  end\n  _AVExtAdvEditorScrathGr = nil\n  _AVExtAdvEditoraptL = nil\n  _AVExtAdvEditorapt = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2075
	Owner:	2074
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2076
)

(DocAct.2077
	Doc:	2074
)

(SEd.2078
	Name:	"AVExtAdvEditor.VertexEditArcPEnd"
	CreationDate:	"7 Май 2004 г. 3:50:17"
	GUIName:	"Script"
	Win:	2079
	CSMgr:	2080
	DocExts:	2081
	Source:	"av.Run(\"AVExtAdvEditor.VertexEditArcP\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.2079
	Owner:	2078
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2080
)

(DocAct.2081
	Doc:	2078
)

(SEd.2082
	Name:	"AVExtAdvEditor.VertexEditClick"
	CreationDate:	"7 Май 2004 г. 4:01:44"
	GUIName:	"Script"
	Win:	2083
	CSMgr:	2084
	DocExts:	2085
	Source:	"if (_AVExtAdvEditorScratchList <> nil) then\n  agrlist = _AVExtAdvEditorView.getgraphics\n  aNum = _AVExtAdvEditorScratchList.Count - 1\n  if (_AVExtAdvEditorScratchList.Get(aNum).Get(0) = nil) then\n    _AVExtAdvEditorScratchList.Remove(aNum)\n  end\n  if (_AVExtAdvEditorShowVer.Not) then\n    aListVertex = agrlist.FindAllByName(\"AVExtAdvEditorVertex\")\n    if (aListVertex <> nil) then\n      for each iaListVertex in aListVertex\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexEnd = agrl
ist.FindAllByName(\"AVExtAdvEditorVertexEnd\")\n    if (aListVertexEnd <> nil) then\n      for each iaListVertexEnd in aListVertexEnd\n        agrlist.RemoveGraphic(iaListVertexEnd)\n      end\n    end\n    aListVertexArc = agrlist.FindAllByName(\"AVExtAdvEditorVertexArc\")\n    if (aListVertexArc <> nil) then\n      for each iaListVertex in aListVertexArc\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexArcP = agrlist.FindAllByName(\"AVExtAdvEditorVertexArcP\")\n    if (aListVertexArcP <> nil)
 then\n      for each iaListVertex in aListVertexArcP\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexCurve = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurve\")\n    if (aListVertexCurve <> nil) then\n      for each iaListVertex in aListVertexCurve\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexCurveP1 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP1\")\n    if (aListVertexCurveP1 <> nil) then\n      for each iaListVertex in aListVertexCurveP1\n       
 agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aListVertexCurveP2 = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurveP2\")\n    if (aListVertexCurveP2 <> nil) then\n      for each iaListVertex in aListVertexCurveP2\n        agrlist.RemoveGraphic(iaListVertex)\n      end\n    end\n    aNum = _AVExtAdvEditorScratchList.Count - 1\n    iSLN = 0\n    for each iSL in _AVExtAdvEditorScratchList\n      if (iSLN <> aNum) then\n        if (iSL.Get(1) = \"line\") then\n          aVertex = GraphicShape.Make(iSL.Get(0).Clo
ne)\n          aVertex.SetName(\"AVExtAdvEditorVertex\")\n          aVertex.SetSymbol(_AVExtAdvEditorVertex)\n          aVertex.SetObjectTag(iSLN)\n          agrlist.Add(aVertex)\n        elseif (iSL.Get(1) = \"Arc\") then       \n          aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n          aVertex.SetName(\"AVExtAdvEditorVertexArc\")\n          aVertex.SetSymbol(_AVExtAdvEditorVertex)\n          aVertex.SetObjectTag(iSLN)\n          agrlist.Add(aVertex)\n          aVertexP = GraphicShape.Make(iSL.Get(2).Clone)\n      
    aVertexP.SetName(\"AVExtAdvEditorVertexArcP\")\n          aVertexP.SetSymbol(_AVExtAdvEditorVertexArc)\n          aVertexP.SetObjectTag(iSLN)\n          agrlist.Add(aVertexP)\n        elseif (iSL.Get(1) = \"Stream\") then\n          aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n          aVertex.SetName(\"AVExtAdvEditorVertex\")\n          aVertex.SetSymbol(_AVExtAdvEditorVertex)\n          aVertex.SetObjectTag(iSLN)\n          agrlist.Add(aVertex)\n        elseif (iSL.Get(1) = \"Curve\") then\n          aVertex = Graphi
cShape.Make(iSL.Get(0).Clone)\n          aVertex.SetName(\"AVExtAdvEditorVertexCurve\")\n          aVertex.SetSymbol(_AVExtAdvEditorVertex)\n          aVertex.SetObjectTag(iSLN)\n          agrlist.Add(aVertex)\n          aVertexP1 = GraphicShape.Make(iSL.Get(2).Clone)\n          aVertexP1.SetName(\"AVExtAdvEditorVertexCurveP1\")\n          aVertexP1.SetSymbol(_AVExtAdvEditorVertexArc)\n          aVertexP1.SetObjectTag(iSLN)\n          agrlist.Add(aVertexP1)\n          aVertexP2 = GraphicShape.Make(iSL.Get(3).Clone)\n     
     aVertexP2.SetName(\"AVExtAdvEditorVertexCurveP2\")\n          aVertexP2.SetSymbol(_AVExtAdvEditorVertexArc)\n          aVertexP2.SetObjectTag(iSLN)\n          agrlist.Add(aVertexP2)\n        end\n      else\n        if (iSL.Get(1) = \"line\") then\n          aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n          aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n          aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n          aVertex.SetObjectTag(iSLN)\n          agrlist.Add(aVertex)\n        elseif (iSL.Get(1) = \"Arc\") th
en       \n          aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n          aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n          aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n          aVertex.SetObjectTag(iSLN)\n          agrlist.Add(aVertex)\n          aVertexP = GraphicShape.Make(iSL.Get(2).Clone)\n          aVertexP.SetName(\"AVExtAdvEditorVertexArcP\")\n          aVertexP.SetSymbol(_AVExtAdvEditorVertexArc)\n          aVertexP.SetObjectTag(iSLN)\n          agrlist.Add(aVertexP)\n        elseif (iSL.Get(1) = \"Stre
am\") then\n          aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n          aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n          aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n          aVertex.SetObjectTag(iSLN)\n          agrlist.Add(aVertex)\n        elseif (iSL.Get(1) = \"Curve\") then\n          aVertex = GraphicShape.Make(iSL.Get(0).Clone)\n          aVertex.SetName(\"AVExtAdvEditorVertexEnd\")\n          aVertex.SetSymbol(_AVExtAdvEditorVertexEnd)\n          aVertex.SetObjectTag(iSLN)\n          agrlist.Add(aVerte
x)\n          aVertexP1 = GraphicShape.Make(iSL.Get(2).Clone)\n          aVertexP1.SetName(\"AVExtAdvEditorVertexCurveP1\")\n          aVertexP1.SetSymbol(_AVExtAdvEditorVertexArc)\n          aVertexP1.SetObjectTag(iSLN)\n          agrlist.Add(aVertexP1)\n          aVertexP2 = GraphicShape.Make(iSL.Get(3).Clone)\n          aVertexP2.SetName(\"AVExtAdvEditorVertexCurveP2\")\n          aVertexP2.SetSymbol(_AVExtAdvEditorVertexArc)\n          aVertexP2.SetObjectTag(iSLN)\n          agrlist.Add(aVertexP2)\n        end\n      e
nd\n      iSLN = iSLN + 1\n    end\n  end\nend\n"
	SearchStr:	"NotEditNumV"
)

(DocWin.2083
	Owner:	2082
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2084
)

(DocAct.2085
	Doc:	2082
)

(SEd.2086
	Name:	"AVExtAdvEditor.VertexEditCurve"
	CreationDate:	"7 Май 2004 г. 4:39:45"
	GUIName:	"Script"
	Win:	2087
	CSMgr:	2088
	DocExts:	2089
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScratchList <> nil) then\n  if (_AVExtAdvEditorView = av.Getactivedoc) then    \n    if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEVertex\").IsSelected) then\n      apt = _AVExtAdvEditorView.getdisplay.returnuserpoint\n      if (_AVExtAdvEditorPan) then\n        aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n        aDisapt = aViewRect.GetWidth / 100\n        if (aViewRect.AsPolygon.AsPolyline.Distance(apt).Abs < aDis
apt) then\n          aptpan = Polyline.Make({{aViewRect.ReturnCenter,apt}}).Along(10)\n          _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n        end\n      end\n      if (apt <> _AVExtAdvEditoraptL) then\n        _AVExtAdvEditoraptL = apt.Clone\n        _AVExtAdvEditorapt = apt.Clone\n        aSnapReal = 0\n        if (_AVExtAdvEditorSnapEnb) then\n          if (_AVExtAdvEditorSnapTU = \"pixels\") then\n            aSnapTolerance = (_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.Get
Win.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\n          else\n            aSnapTolerance = _AVExtAdvEditorSnapT\n          end\n          aListK = _AVExtAdvEditorView.GetThemes\n          for each aThemeView in aLIstK  \n            aListE = _AVExtAdvEditorListSnap.Get(aThemeView)\n            if (aListE <> nil) then\n              for each aThemeSnapeI in 0..3\n                aThemeSnape = aListE.Get(aThemeSnapeI)\n                if (aThemeSnape <> 0) then\n                  aUse
rSnapPoint = _AVExtAdvEditorapt.Clone\n                  aThemeView.SetInteractiveSnapTolerance(aSnapTolerance)\n                  if (aThemeSnapeI = 0) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_VERTEX,aUserSnapPoint)\n                  elseif (aThemeSnapeI = 1) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_BOUNDARY,aUserSnapPoint)\n                  elseif (aThemeSnapeI = 2) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_ENDPOINT,aUserSnapPoint)\n              
    else\n                    aThemeView.UserSnapPoint(#POINT_SNAP_INTERSECTION,aUserSnapPoint)\n                  end\n                  if (aUserSnapPoint <> _AVExtAdvEditorapt) then\n                    _AVExtAdvEditorapt = aUserSnapPoint.Clone\n                    aSnapReal = 1\n                    break\n                  end\n                end\n              end\n            end\n            if (aSnapReal = 1) then\n              if (_AVExtAdvEditorSnapOff <> 0) then\n                aDis1 = _AVExtAdvEditorapt.D
istance(apt)\n                aptPx = apt.GetX - _AVExtAdvEditorapt.GetX\n                aptPy = apt.GetY - _AVExtAdvEditorapt.GetY\n                aCosA = aptPx / aDis1.Abs\n                aSinA = aptPy / aDis1.Abs\n                aNewPx = _AVExtAdvEditorSnapOff * aCosA\n                aNewPy = _AVExtAdvEditorSnapOff * aSinA\n                aNewPtX = aNewPx + _AVExtAdvEditorapt.GetX\n                aNewPtY = aNewPy + _AVExtAdvEditorapt.GetY\n                _AVExtAdvEditorapt = aNewPtX@aNewPtY\n              
end\n              break\n            end\n          end\n        end        \n        if (_AVExtAdvEditorShowCurP) then\n          if (_AVExtAdvEditorCurGr = nil) then\n            _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n            _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n            if (aSnapReal = 1) then\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            else\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n           
 end\n            agrlist.Add(_AVExtAdvEditorCurGr)\n            _AVExtAdvEditorCurGr.invalidate\n          end\n          if (aSnapReal = 1) then\n            _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n          else\n            _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n          end\n          _AVExtAdvEditorCurGr.invalidate\n          _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.clone)\n          _AVExtAdvEditorCurGr.invalidate\n        else\n          if (aSnapReal = 1) then\n      
      if (_AVExtAdvEditorCurGr = nil) then\n              _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              agrlist.Add(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr.invalidate\n            end\n            _AVExtAdvEditorCurGr.invalidate\n            _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            _AVExtAdvEditorCu
rGr.SetShape(_AVExtAdvEditorapt.Clone)\n            _AVExtAdvEditorCurGr.invalidate\n          else\n            if (_AVExtAdvEditorCurGr <> nil) then\n              agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr = nil\n            end\n          end\n        end\n        adrshlist = list.make\n        if (_AVExtAdvEditorVertexNum = (_AVExtAdvEditorScratchList.count - 1)) then\n          P0 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum - 1).Get(0)\n          P1 = _AVExtAdvEd
itorScratchList.Get(_AVExtAdvEditorVertexNum).Get(2)\n          P2 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(3)\n          P3 = _AVExtAdvEditorapt\n          for each t in 0..1 by _AVExtAdvEditorCurveT\n            Ptx = (((1 - t) ^ 3) * P0.GetX) + ((3 * t * ((1 - t) ^ 2)) * P1.GetX) + ((3 * (t ^ 2) * (1 - t)) * P2.GetX) + ((t ^ 3) * P3.GetX)\n            Pty = (((1 - t) ^ 3) * P0.GetY) + ((3 * t * ((1 - t) ^ 2)) * P1.GetY) + ((3 * (t ^ 2) * (1 - t)) * P2.GetY) + ((t ^ 3) * P3.GetY)\n        
    adrshlist.Add(Ptx@Pty)\n          end     \n        else\n          P0 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum - 1).Get(0)\n          P1 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(2)\n          P2 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(3)\n          P3 = _AVExtAdvEditorapt\n          for each t in 0..1 by _AVExtAdvEditorCurveT\n            Ptx = (((1 - t) ^ 3) * P0.GetX) + ((3 * t * ((1 - t) ^ 2)) * P1.GetX) + ((3 * (t ^ 2) * (1 - t)) * P2.GetX) + ((
t ^ 3) * P3.GetX)\n            Pty = (((1 - t) ^ 3) * P0.GetY) + ((3 * t * ((1 - t) ^ 2)) * P1.GetY) + ((3 * (t ^ 2) * (1 - t)) * P2.GetY) + ((t ^ 3) * P3.GetY)\n            adrshlist.Add(Ptx@Pty)\n          end\n          if (_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum + 1).Get(1) = \"Arc\") then\n            P0 = _AVExtAdvEditorapt.clone\n            Pt = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum + 1).Get(2)\n            P2 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum + 1).Ge
t(0)\n            P1x = (Pt.GetX - ((0.25 * P0.GetX) + (0.25 * P2.GetX))) / 0.5\n            P1y = (Pt.GetY - ((0.25 * P0.GetY) + (0.25 * P2.GetY))) / 0.5\n            for each t in 0..1 by _AVExtAdvEditorArcT\n              Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1x) + ((t ^ 2) * P2.Getx)\n              Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1y) + ((t ^ 2) * P2.GetY) \n              adrshlist.Add(Ptx@Pty)\n            end\n          elseif (_AVExtAdvEditorScratchList.Get(_AVExt
AdvEditorVertexNum + 1).Get(1) = \"Curve\") then\n            P0 = _AVExtAdvEditorapt.clone\n            P1 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum + 1).Get(2)\n            P2 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum + 1).Get(3)\n            P3 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum + 1).Get(0)\n            for each t in 0..1 by _AVExtAdvEditorCurveT\n              Ptx = (((1 - t) ^ 3) * P0.GetX) + ((3 * t * ((1 - t) ^ 2)) * P1.GetX) + ((3 * (t ^ 2) * (1 - t)) *
 P2.GetX) + ((t ^ 3) * P3.GetX)\n              Pty = (((1 - t) ^ 3) * P0.GetY) + ((3 * t * ((1 - t) ^ 2)) * P1.GetY) + ((3 * (t ^ 2) * (1 - t)) * P2.GetY) + ((t ^ 3) * P3.GetY)\n              adrshlist.Add(Ptx@Pty)\n            end\n          else\n            adrshlist.add(_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum + 1).Get(0).clone)\n          end\n        end\n        adrsh = Polyline.Make({adrshlist})\n        if (_AVExtAdvEditorScrathGrMouse = nil) then\n          _AVExtAdvEditorScrathGrMouse = Grap
hicShape.Make(adrsh)\n          _AVExtAdvEditorScrathGrMouse.SetName(\"_AVExtAdvEditorScrathGrMouse\")\n          _AVExtAdvEditorScrathGrMouse.SetSymbol(_AVExtAdvEditorScratchLE)\n          agrlist.Add(_AVExtAdvEditorScrathGrMouse)\n          _AVExtAdvEditorScrathGrMouse.invalidate\n        end\n        _AVExtAdvEditorScrathGrMouse.invalidate\n        _AVExtAdvEditorScrathGrMouse.SetShape(adrsh)\n        _AVExtAdvEditorScrathGrMouse.invalidate\n      end\n      if (_AVExtAdvEditorClickVertex = 1) then\n        if (_AVEx
tAdvEditorPanSh and System.IsShiftKeyDown) then\n          _AVExtAdvEditorClickVertex = 2\n          _AVExtAdvEditorView.GetDisplay.Pan\n          av.DelayedRun(\"AVExtAdvEditor.VertexEditCurveEnd\",nil,0)\n        elseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n          _AVExtAdvEditorClickVertex = 2\n          _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          av.DelayedRun(\"AVExtAdvEditor.VertexEditCurveEnd\",nil,0)\n        else\n          if (_AVExtAdvEditorScrathGrMouse <> nil) 
then\n            agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n          end\n          if (_AVExtAdvEditorCurGr <> nil) then\n            agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n          end\n          _AVExtAdvEditorCurGr = nil\n          _AVExtAdvEditorScrathGrMouse = nil\n          _AVExtAdvEditorClickVertex = nil\n          aNewVertexList = {_AVExtAdvEditorapt,_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(1).clone,_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(2).clone
,_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(3).clone}\n          _AVExtAdvEditorScratchList.Set(_AVExtAdvEditorVertexNum,aNewVertexList)\n          if (_AVExtAdvEditorVertexNum <> (_AVExtAdvEditorScratchList.Count - 1)) then\n            aListVertexGr = agrlist.FindAllByName(\"AVExtAdvEditorVertexCurve\")\n            if (aListVertexGr <> nil) then\n              for each iaListVertexGr in aListVertexGr\n                if (iaListVertexGr.GetObjectTag = _AVExtAdvEditorVertexNum) then\n             
     iaListVertexGr.invalidate\n                  iaListVertexGr.SetShape(_AVExtAdvEditorapt.Clone)\n                  iaListVertexGr.invalidate\n                  break\n                end\n              end\n            end\n          else\n            aListVertexGr = agrlist.FindAllByName(\"AVExtAdvEditorVertexEnd\")\n            if (aListVertexGr <> nil) then\n              for each iaListVertexGr in aListVertexGr\n                if (iaListVertexGr.GetObjectTag = _AVExtAdvEditorVertexNum) then\n                  ia
ListVertexGr.invalidate\n                  iaListVertexGr.SetShape(_AVExtAdvEditorapt.Clone)\n                  iaListVertexGr.invalidate\n                  break\n                end\n              end\n            end\n          end\n          iSLN = 0\n          adrgraddShL = {}\n          for each iSL in _AVExtAdvEditorScratchList\n            if (iSL.Get(1) = \"line\") then\n              adrgraddShL.Add(iSL.Get(0).Clone)\n            elseif (iSL.Get(1) = \"Arc\") then       \n              P0 = _AVExtAdvEditorScratchLi
st.Get(iSLN - 1).Get(0)\n              Pt = iSL.Get(2)\n              P2 = iSL.Get(0)\n              P1x = (Pt.GetX - ((0.25 * P0.GetX) + (0.25 * P2.GetX))) / 0.5\n              P1y = (Pt.GetY - ((0.25 * P0.GetY) + (0.25 * P2.GetY))) / 0.5\n              P1 = P1x@P1y\n              for each t in 0..1 by _AVExtAdvEditorArcT\n                Ptx = (((1 - t) ^ 2) * P0.GetX) + (((2 * t) * (1 - t)) * P1.getX) + ((t ^ 2) * P2.Getx)\n                Pty = (((1 - t) ^ 2) * P0.GetY) + (((2 * t) * (1 - t)) * P1.getY) + ((t ^
 2) * P2.GetY) \n                adrgraddShL.Add(Ptx@Pty)\n              end\n            elseif (iSL.Get(1) = \"Stream\") then\n              adrgraddShL.Add(iSL.Get(0).Clone)\n            elseif (iSL.Get(1) = \"Curve\") then\n              P0 = _AVExtAdvEditorScratchList.Get(iSLN - 1).Get(0)\n              P1 = iSL.Get(2)\n              P2 = iSL.Get(3)\n              P3 = iSL.Get(0)\n              for each t in 0..1 by _AVExtAdvEditorCurveT\n                Ptx = (((1 - t) ^ 3) * P0.GetX) + ((3 * t * ((1 - t) ^ 2)) * P1
.GetX) + ((3 * (t ^ 2) * (1 - t)) * P2.GetX) + ((t ^ 3) * P3.GetX)\n                Pty = (((1 - t) ^ 3) * P0.GetY) + ((3 * t * ((1 - t) ^ 2)) * P1.GetY) + ((3 * (t ^ 2) * (1 - t)) * P2.GetY) + ((t ^ 3) * P3.GetY)\n                adrgraddShL.Add(Ptx@Pty)\n              end\n            end\n            iSLN = iSLN + 1\n          end\n          adrgraddSh = Polyline.Make({adrgraddShL})\n          if (_AVExtAdvEditorScrathGr = nil) then    \n            _AVExtAdvEditorScrathGr = GraphicShape.Make(adrgraddSh)\n        
    _AVExtAdvEditorScrathGr.SetName(\"_AVExtAdvEditorScrathGr\")\n            _AVExtAdvEditorScrathGr.SetSymbol(_AVExtAdvEditorScratchL)\n            agrlist.Add(_AVExtAdvEditorScrathGr)\n            _AVExtAdvEditorScrathGr.invalidate\n          end\n          _AVExtAdvEditorScrathGr.invalidate\n          _AVExtAdvEditorScrathGr.SetShape(adrgraddSh)\n          _AVExtAdvEditorScrathGr.invalidate\n          if (_AVExtAdvEditorPanClick) then\n            _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          
end\n        end      \n      else\n        av.DelayedRun(\"AVExtAdvEditor.VertexEditCurveEnd\",nil,0)\n      end\n    else\n      _AVExtAdvEditorClickVertex = nil\n      _AVExtAdvEditorClick = nil\n      if (_AVExtAdvEditorScrathGrMouse <> nil) then\n        agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n      end\n      _AVExtAdvEditorScrathGrMouse = nil\n      if (_AVExtAdvEditorCurGr <> nil) then\n         agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n      end\n      _AVExtAdvEditorCurGr = nil\n      _AVExtAdvEdito
raptL = nil\n      _AVExtAdvEditorapt = nil\n    end\n  else\n    _AVExtAdvEditorClick = nil\n    _AVExtAdvEditorClickVertex = nil\n    if (_AVExtAdvEditorScrathGrMouse <> nil) then\n      agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n    end\n    _AVExtAdvEditorScrathGrMouse = nil\n    if (_AVExtAdvEditorCurGr <> nil) then\n       agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n    end\n    _AVExtAdvEditorCurGr = nil\n    _AVExtAdvEditoraptL = nil\n    _AVExtAdvEditorapt = nil\n  end\nelse\n  _AVExtAdvEditorClick = nil\n
  _AVExtAdvEditorClickVertex = nil\n  if (_AVExtAdvEditorScrathGrMouse <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n  end\n  _AVExtAdvEditorScrathGrMouse = nil\n  if (_AVExtAdvEditorCurGr <> nil) then\n     agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n  end\n  _AVExtAdvEditorCurGr = nil\n  if (_AVExtAdvEditorScrathGr <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGr)\n  end\n  _AVExtAdvEditorScrathGr = nil\n  _AVExtAdvEditoraptL = nil\n  _AVExtAdvEditorapt = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2087
	Owner:	2086
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2088
)

(DocAct.2089
	Doc:	2086
)

(SEd.2090
	Name:	"AVExtAdvEditor.VertexEditCurveEnd"
	CreationDate:	"7 Май 2004 г. 4:39:53"
	GUIName:	"Script"
	Win:	2091
	CSMgr:	2092
	DocExts:	2093
	Source:	"av.Run(\"AVExtAdvEditor.VertexEditCurve\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.2091
	Owner:	2090
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2092
)

(DocAct.2093
	Doc:	2090
)

(SEd.2094
	Name:	"AVExtAdvEditor.VertexEditCurveP1"
	CreationDate:	"7 Май 2004 г. 4:15:50"
	GUIName:	"Script"
	Win:	2095
	CSMgr:	2096
	DocExts:	2097
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScratchList <> nil) then\n  if (_AVExtAdvEditorView = av.Getactivedoc) then    \n    if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEVertex\").IsSelected) then\n      apt = _AVExtAdvEditorView.getdisplay.returnuserpoint\n      if (_AVExtAdvEditorPan) then\n        aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n        aDisapt = aViewRect.GetWidth / 100\n        if (aViewRect.AsPolygon.AsPolyline.Distance(apt).Abs < aDis
apt) then\n          aptpan = Polyline.Make({{aViewRect.ReturnCenter,apt}}).Along(10)\n          _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n        end\n      end\n      if (apt <> _AVExtAdvEditoraptL) then\n        _AVExtAdvEditoraptL = apt.Clone\n        _AVExtAdvEditorapt = apt.Clone\n        aSnapReal = 0\n        if (_AVExtAdvEditorSnapEnb) then\n          if (_AVExtAdvEditorSnapTU = \"pixels\") then\n            aSnapTolerance = (_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.Get
Win.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\n          else\n            aSnapTolerance = _AVExtAdvEditorSnapT\n          end\n          aListK = _AVExtAdvEditorView.GetThemes\n          for each aThemeView in aLIstK  \n            aListE = _AVExtAdvEditorListSnap.Get(aThemeView)\n            if (aListE <> nil) then\n              for each aThemeSnapeI in 0..3\n                aThemeSnape = aListE.Get(aThemeSnapeI)\n                if (aThemeSnape <> 0) then\n                  aUse
rSnapPoint = _AVExtAdvEditorapt.Clone\n                  aThemeView.SetInteractiveSnapTolerance(aSnapTolerance)\n                  if (aThemeSnapeI = 0) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_VERTEX,aUserSnapPoint)\n                  elseif (aThemeSnapeI = 1) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_BOUNDARY,aUserSnapPoint)\n                  elseif (aThemeSnapeI = 2) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_ENDPOINT,aUserSnapPoint)\n              
    else\n                    aThemeView.UserSnapPoint(#POINT_SNAP_INTERSECTION,aUserSnapPoint)\n                  end\n                  if (aUserSnapPoint <> _AVExtAdvEditorapt) then\n                    _AVExtAdvEditorapt = aUserSnapPoint.Clone\n                    aSnapReal = 1\n                    break\n                  end\n                end\n              end\n            end\n            if (aSnapReal = 1) then\n              if (_AVExtAdvEditorSnapOff <> 0) then\n                aDis1 = _AVExtAdvEditorapt.D
istance(apt)\n                aptPx = apt.GetX - _AVExtAdvEditorapt.GetX\n                aptPy = apt.GetY - _AVExtAdvEditorapt.GetY\n                aCosA = aptPx / aDis1.Abs\n                aSinA = aptPy / aDis1.Abs\n                aNewPx = _AVExtAdvEditorSnapOff * aCosA\n                aNewPy = _AVExtAdvEditorSnapOff * aSinA\n                aNewPtX = aNewPx + _AVExtAdvEditorapt.GetX\n                aNewPtY = aNewPy + _AVExtAdvEditorapt.GetY\n                _AVExtAdvEditorapt = aNewPtX@aNewPtY\n              
end\n              break\n            end\n          end\n        end        \n        if (_AVExtAdvEditorShowCurP) then\n          if (_AVExtAdvEditorCurGr = nil) then\n            _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n            _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n            if (aSnapReal = 1) then\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            else\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n           
 end\n            agrlist.Add(_AVExtAdvEditorCurGr)\n            _AVExtAdvEditorCurGr.invalidate\n          end\n          if (aSnapReal = 1) then\n            _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n          else\n            _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n          end\n          _AVExtAdvEditorCurGr.invalidate\n          _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.clone)\n          _AVExtAdvEditorCurGr.invalidate\n        else\n          if (aSnapReal = 1) then\n      
      if (_AVExtAdvEditorCurGr = nil) then\n              _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              agrlist.Add(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr.invalidate\n            end\n            _AVExtAdvEditorCurGr.invalidate\n            _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            _AVExtAdvEditorCu
rGr.SetShape(_AVExtAdvEditorapt.Clone)\n            _AVExtAdvEditorCurGr.invalidate\n          else\n            if (_AVExtAdvEditorCurGr <> nil) then\n              agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr = nil\n            end\n          end\n        end\n        adrshlist = list.make\n        P0 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum - 1).Get(0)\n        P1 = _AVExtAdvEditorapt\n        P2 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(3)\n   
     P3 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(0)\n        for each t in 0..1 by _AVExtAdvEditorCurveT\n          Ptx = (((1 - t) ^ 3) * P0.GetX) + ((3 * t * ((1 - t) ^ 2)) * P1.GetX) + ((3 * (t ^ 2) * (1 - t)) * P2.GetX) + ((t ^ 3) * P3.GetX)\n          Pty = (((1 - t) ^ 3) * P0.GetY) + ((3 * t * ((1 - t) ^ 2)) * P1.GetY) + ((3 * (t ^ 2) * (1 - t)) * P2.GetY) + ((t ^ 3) * P3.GetY)\n          adrshlist.Add(Ptx@Pty)\n        end    \n        adrsh = Polyline.Make({adrshlist,{_AVExtAdvEditor
ScratchList.Get(_AVExtAdvEditorVertexNum - 1).Get(0),_AVExtAdvEditorapt.clone},{_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(0),_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(3)}})\n        if (_AVExtAdvEditorScrathGrMouse = nil) then\n          _AVExtAdvEditorScrathGrMouse = GraphicShape.Make(adrsh)\n          _AVExtAdvEditorScrathGrMouse.SetName(\"_AVExtAdvEditorScrathGrMouse\")\n          _AVExtAdvEditorScrathGrMouse.SetSymbol(_AVExtAdvEditorScratchLE)\n          agrlist.Add(_AVExt
AdvEditorScrathGrMouse)\n          _AVExtAdvEditorScrathGrMouse.invalidate\n        end\n        _AVExtAdvEditorScrathGrMouse.invalidate\n        _AVExtAdvEditorScrathGrMouse.SetShape(adrsh)\n        _AVExtAdvEditorScrathGrMouse.invalidate\n      end\n      if (_AVExtAdvEditorClickVertex = 1) then\n        if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n          _AVExtAdvEditorClickVertex = 2\n          _AVExtAdvEditorView.GetDisplay.Pan\n          av.DelayedRun(\"AVExtAdvEditor.VertexEditCurveP1End\",nil,0)\n
        elseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n          _AVExtAdvEditorClickVertex = 2\n          _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          av.DelayedRun(\"AVExtAdvEditor.VertexEditCurveP1End\",nil,0)\n        else\n          if (_AVExtAdvEditorScrathGrMouse <> nil) then\n            agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n          end\n          if (_AVExtAdvEditorCurGr <> nil) then\n            agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n          en
d\n          _AVExtAdvEditorCurGr = nil\n          _AVExtAdvEditorScrathGrMouse = nil\n          _AVExtAdvEditorClickVertex = nil\n          aNewVertexList = {_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(0).clone,_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(1).clone,_AVExtAdvEditorapt.clone,_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(3).clone}\n          _AVExtAdvEditorScratchList.Set(_AVExtAdvEditorVertexNum,aNewVertexList)\n          aListVertexGr = agrlist.FindA
llByName(\"AVExtAdvEditorVertexCurveP1\")\n          if (aListVertexGr <> nil) then\n            for each iaListVertexGr in aListVertexGr\n              if (iaListVertexGr.GetObjectTag = _AVExtAdvEditorVertexNum) then\n                iaListVertexGr.invalidate\n                iaListVertexGr.SetShape(_AVExtAdvEditorapt.Clone)\n                iaListVertexGr.invalidate\n                break\n              end\n            end\n          end\n          av.Run(\"AVExtAdvEditor.ToolDrawing\",nil)\n          if (_AVExtAdvEdito
rPanClick) then\n            _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          end\n        end        \n      else\n        av.DelayedRun(\"AVExtAdvEditor.VertexEditCurveP1End\",nil,0)\n      end\n    else\n      _AVExtAdvEditorClickVertex = nil\n      _AVExtAdvEditorClick = nil\n      if (_AVExtAdvEditorScrathGrMouse <> nil) then\n        agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n      end\n      _AVExtAdvEditorScrathGrMouse = nil\n      if (_AVExtAdvEditorCurGr <> nil) then\n         agrlist.
RemoveGraphic(_AVExtAdvEditorCurGr)\n      end\n      _AVExtAdvEditorCurGr = nil\n      _AVExtAdvEditoraptL = nil\n      _AVExtAdvEditorapt = nil\n    end\n  else\n    _AVExtAdvEditorClick = nil\n    _AVExtAdvEditorClickVertex = nil\n    if (_AVExtAdvEditorScrathGrMouse <> nil) then\n      agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n    end\n    _AVExtAdvEditorScrathGrMouse = nil\n    if (_AVExtAdvEditorCurGr <> nil) then\n       agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n    end\n    _AVExtAdvEditorCurGr = nil\n
    _AVExtAdvEditoraptL = nil\n    _AVExtAdvEditorapt = nil\n  end\nelse\n  _AVExtAdvEditorClick = nil\n  _AVExtAdvEditorClickVertex = nil\n  if (_AVExtAdvEditorScrathGrMouse <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n  end\n  _AVExtAdvEditorScrathGrMouse = nil\n  if (_AVExtAdvEditorCurGr <> nil) then\n     agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n  end\n  _AVExtAdvEditorCurGr = nil\n  if (_AVExtAdvEditorScrathGr <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGr)\n  end\n  _AVEx
tAdvEditorScrathGr = nil\n  _AVExtAdvEditoraptL = nil\n  _AVExtAdvEditorapt = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2095
	Owner:	2094
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2096
)

(DocAct.2097
	Doc:	2094
)

(SEd.2098
	Name:	"AVExtAdvEditor.VertexEditCurveP1End"
	CreationDate:	"7 Май 2004 г. 4:16:32"
	GUIName:	"Script"
	Win:	2099
	CSMgr:	2100
	DocExts:	2101
	Source:	"av.Run(\"AVExtAdvEditor.VertexEditCurveP1\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.2099
	Owner:	2098
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2100
)

(DocAct.2101
	Doc:	2098
)

(SEd.2102
	Name:	"AVExtAdvEditor.VertexEditCurveP2"
	CreationDate:	"7 Май 2004 г. 4:34:32"
	GUIName:	"Script"
	Win:	2103
	CSMgr:	2104
	DocExts:	2105
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScratchList <> nil) then\n  if (_AVExtAdvEditorView = av.Getactivedoc) then    \n    if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEVertex\").IsSelected) then\n      apt = _AVExtAdvEditorView.getdisplay.returnuserpoint\n      if (_AVExtAdvEditorPan) then\n        aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n        aDisapt = aViewRect.GetWidth / 100\n        if (aViewRect.AsPolygon.AsPolyline.Distance(apt).Abs < aDis
apt) then\n          aptpan = Polyline.Make({{aViewRect.ReturnCenter,apt}}).Along(10)\n          _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n        end\n      end\n      if (apt <> _AVExtAdvEditoraptL) then\n        _AVExtAdvEditoraptL = apt.Clone\n        _AVExtAdvEditorapt = apt.Clone\n        aSnapReal = 0\n        if (_AVExtAdvEditorSnapEnb) then\n          if (_AVExtAdvEditorSnapTU = \"pixels\") then\n            aSnapTolerance = (_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.Get
Win.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\n          else\n            aSnapTolerance = _AVExtAdvEditorSnapT\n          end\n          aListK = _AVExtAdvEditorView.GetThemes\n          for each aThemeView in aLIstK  \n            aListE = _AVExtAdvEditorListSnap.Get(aThemeView)\n            if (aListE <> nil) then\n              for each aThemeSnapeI in 0..3\n                aThemeSnape = aListE.Get(aThemeSnapeI)\n                if (aThemeSnape <> 0) then\n                  aUse
rSnapPoint = _AVExtAdvEditorapt.Clone\n                  aThemeView.SetInteractiveSnapTolerance(aSnapTolerance)\n                  if (aThemeSnapeI = 0) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_VERTEX,aUserSnapPoint)\n                  elseif (aThemeSnapeI = 1) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_BOUNDARY,aUserSnapPoint)\n                  elseif (aThemeSnapeI = 2) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_ENDPOINT,aUserSnapPoint)\n              
    else\n                    aThemeView.UserSnapPoint(#POINT_SNAP_INTERSECTION,aUserSnapPoint)\n                  end\n                  if (aUserSnapPoint <> _AVExtAdvEditorapt) then\n                    _AVExtAdvEditorapt = aUserSnapPoint.Clone\n                    aSnapReal = 1\n                    break\n                  end\n                end\n              end\n            end\n            if (aSnapReal = 1) then\n              if (_AVExtAdvEditorSnapOff <> 0) then\n                aDis1 = _AVExtAdvEditorapt.D
istance(apt)\n                aptPx = apt.GetX - _AVExtAdvEditorapt.GetX\n                aptPy = apt.GetY - _AVExtAdvEditorapt.GetY\n                aCosA = aptPx / aDis1.Abs\n                aSinA = aptPy / aDis1.Abs\n                aNewPx = _AVExtAdvEditorSnapOff * aCosA\n                aNewPy = _AVExtAdvEditorSnapOff * aSinA\n                aNewPtX = aNewPx + _AVExtAdvEditorapt.GetX\n                aNewPtY = aNewPy + _AVExtAdvEditorapt.GetY\n                _AVExtAdvEditorapt = aNewPtX@aNewPtY\n              
end\n              break\n            end\n          end\n        end        \n        if (_AVExtAdvEditorShowCurP) then\n          if (_AVExtAdvEditorCurGr = nil) then\n            _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n            _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n            if (aSnapReal = 1) then\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            else\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n           
 end\n            agrlist.Add(_AVExtAdvEditorCurGr)\n            _AVExtAdvEditorCurGr.invalidate\n          end\n          if (aSnapReal = 1) then\n            _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n          else\n            _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n          end\n          _AVExtAdvEditorCurGr.invalidate\n          _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.clone)\n          _AVExtAdvEditorCurGr.invalidate\n        else\n          if (aSnapReal = 1) then\n      
      if (_AVExtAdvEditorCurGr = nil) then\n              _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              agrlist.Add(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr.invalidate\n            end\n            _AVExtAdvEditorCurGr.invalidate\n            _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            _AVExtAdvEditorCu
rGr.SetShape(_AVExtAdvEditorapt.Clone)\n            _AVExtAdvEditorCurGr.invalidate\n          else\n            if (_AVExtAdvEditorCurGr <> nil) then\n              agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr = nil\n            end\n          end\n        end\n        adrshlist = list.make\n        P0 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum - 1).Get(0)\n        P1 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(2)\n        P2 = _AVExtAdvEditorapt\n   
     P3 = _AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(0)\n        for each t in 0..1 by _AVExtAdvEditorCurveT\n          Ptx = (((1 - t) ^ 3) * P0.GetX) + ((3 * t * ((1 - t) ^ 2)) * P1.GetX) + ((3 * (t ^ 2) * (1 - t)) * P2.GetX) + ((t ^ 3) * P3.GetX)\n          Pty = (((1 - t) ^ 3) * P0.GetY) + ((3 * t * ((1 - t) ^ 2)) * P1.GetY) + ((3 * (t ^ 2) * (1 - t)) * P2.GetY) + ((t ^ 3) * P3.GetY)\n          adrshlist.Add(Ptx@Pty)\n        end    \n        adrsh = Polyline.Make({adrshlist,{_AVExtAdvEditor
ScratchList.Get(_AVExtAdvEditorVertexNum - 1).Get(0),_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(2)},{_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(0),_AVExtAdvEditorapt.clone}})\n        if (_AVExtAdvEditorScrathGrMouse = nil) then\n          _AVExtAdvEditorScrathGrMouse = GraphicShape.Make(adrsh)\n          _AVExtAdvEditorScrathGrMouse.SetName(\"_AVExtAdvEditorScrathGrMouse\")\n          _AVExtAdvEditorScrathGrMouse.SetSymbol(_AVExtAdvEditorScratchLE)\n          agrlist.Add(_AVExt
AdvEditorScrathGrMouse)\n          _AVExtAdvEditorScrathGrMouse.invalidate\n        end\n        _AVExtAdvEditorScrathGrMouse.invalidate\n        _AVExtAdvEditorScrathGrMouse.SetShape(adrsh)\n        _AVExtAdvEditorScrathGrMouse.invalidate\n      end\n      if (_AVExtAdvEditorClickVertex = 1) then\n        if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n          _AVExtAdvEditorClickVertex = 2\n          _AVExtAdvEditorView.GetDisplay.Pan\n          av.DelayedRun(\"AVExtAdvEditor.VertexEditCurveP2End\",nil,0)\n
        elseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n          _AVExtAdvEditorClickVertex = 2\n          _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          av.DelayedRun(\"AVExtAdvEditor.VertexEditCurveP2End\",nil,0)\n        else\n          if (_AVExtAdvEditorScrathGrMouse <> nil) then\n            agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n          end\n          if (_AVExtAdvEditorCurGr <> nil) then\n            agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n          en
d\n          _AVExtAdvEditorCurGr = nil\n          _AVExtAdvEditorScrathGrMouse = nil\n          _AVExtAdvEditorClickVertex = nil\n          aNewVertexList = {_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(0).clone,_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(1).clone,_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(2).clone,_AVExtAdvEditorapt.clone}\n          _AVExtAdvEditorScratchList.Set(_AVExtAdvEditorVertexNum,aNewVertexList)\n          aListVertexGr = agrlist.FindA
llByName(\"AVExtAdvEditorVertexCurveP2\")\n          if (aListVertexGr <> nil) then\n            for each iaListVertexGr in aListVertexGr\n              if (iaListVertexGr.GetObjectTag = _AVExtAdvEditorVertexNum) then\n                iaListVertexGr.invalidate\n                iaListVertexGr.SetShape(_AVExtAdvEditorapt.Clone)\n                iaListVertexGr.invalidate\n                break\n              end\n            end\n          end\n          av.Run(\"AVExtAdvEditor.ToolDrawing\",nil)\n          if (_AVExtAdvEdito
rPanClick) then\n            _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          end\n        end       \n      else\n        av.DelayedRun(\"AVExtAdvEditor.VertexEditCurveP2End\",nil,0)\n      end\n    else\n      _AVExtAdvEditorClickVertex = nil\n      _AVExtAdvEditorClick = nil\n      if (_AVExtAdvEditorScrathGrMouse <> nil) then\n        agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n      end\n      _AVExtAdvEditorScrathGrMouse = nil\n      if (_AVExtAdvEditorCurGr <> nil) then\n         agrlist.R
emoveGraphic(_AVExtAdvEditorCurGr)\n      end\n      _AVExtAdvEditorCurGr = nil\n      _AVExtAdvEditoraptL = nil\n      _AVExtAdvEditorapt = nil\n    end\n  else\n    _AVExtAdvEditorClick = nil\n    _AVExtAdvEditorClickVertex = nil\n    if (_AVExtAdvEditorScrathGrMouse <> nil) then\n      agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n    end\n    _AVExtAdvEditorScrathGrMouse = nil\n    if (_AVExtAdvEditorCurGr <> nil) then\n       agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n    end\n    _AVExtAdvEditorCurGr = nil\n 
   _AVExtAdvEditoraptL = nil\n    _AVExtAdvEditorapt = nil\n  end\nelse\n  _AVExtAdvEditorClick = nil\n  _AVExtAdvEditorClickVertex = nil\n  if (_AVExtAdvEditorScrathGrMouse <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n  end\n  _AVExtAdvEditorScrathGrMouse = nil\n  if (_AVExtAdvEditorCurGr <> nil) then\n     agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n  end\n  _AVExtAdvEditorCurGr = nil\n  if (_AVExtAdvEditorScrathGr <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGr)\n  end\n  _AVExt
AdvEditorScrathGr = nil\n  _AVExtAdvEditoraptL = nil\n  _AVExtAdvEditorapt = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2103
	Owner:	2102
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2104
)

(DocAct.2105
	Doc:	2102
)

(SEd.2106
	Name:	"AVExtAdvEditor.VertexEditCurveP2End"
	CreationDate:	"7 Май 2004 г. 4:34:48"
	GUIName:	"Script"
	Win:	2107
	CSMgr:	2108
	DocExts:	2109
	Source:	"av.Run(\"AVExtAdvEditor.VertexEditCurveP2\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.2107
	Owner:	2106
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2108
)

(DocAct.2109
	Doc:	2106
)

(SEd.2110
	Name:	"AVExtAdvEditor.VertexEditEnd"
	CreationDate:	"7 Май 2004 г. 1:48:24"
	GUIName:	"Script"
	Win:	2111
	CSMgr:	2112
	DocExts:	2113
	Source:	"av.Run(\"AVExtAdvEditor.VertexEdit\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.2111
	Owner:	2110
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2112
)

(DocAct.2113
	Doc:	2110
)

(SEd.2114
	Name:	"AVExtAdvEditor.VertexEditOne"
	CreationDate:	"8 Май 2004 г. 18:00:22"
	GUIName:	"Script"
	Win:	2115
	CSMgr:	2116
	DocExts:	2117
	Source:	"agrlist = _AVExtAdvEditorView.getgraphics\nif (_AVExtAdvEditorScratchList <> nil) then\n  if (_AVExtAdvEditorView = av.Getactivedoc) then    \n    if (av.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.FindByName(\"AEVertex\").IsSelected) then\n      apt = _AVExtAdvEditorView.getdisplay.returnuserpoint\n      if (_AVExtAdvEditorPan) then\n        aViewRect = _AVExtAdvEditorView.getdisplay.ReturnVisExtent\n        aDisapt = aViewRect.GetWidth / 100\n        if (aViewRect.AsPolygon.AsPolyline.Distance(apt).Abs < aDis
apt) then\n          aptpan = Polyline.Make({{aViewRect.ReturnCenter,apt}}).Along(10)\n          _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\n        end\n      end\n      if (apt <> _AVExtAdvEditoraptL) then\n        _AVExtAdvEditoraptL = apt.Clone\n        _AVExtAdvEditorapt = apt.Clone\n        aSnapReal = 0\n        if (_AVExtAdvEditorSnapEnb) then\n          if (_AVExtAdvEditorSnapTU = \"pixels\") then\n            aSnapTolerance = (_AVExtAdvEditorView.GetDisplay.ReturnVisExtent.GetWidth / (_AVExtAdvEditorView.Get
Win.ReturnExtent.GetX - _AVExtAdvEditorView.GetTOCWidth)) * _AVExtAdvEditorSnapT\n          else\n            aSnapTolerance = _AVExtAdvEditorSnapT\n          end\n          aListK = _AVExtAdvEditorView.GetThemes\n          for each aThemeView in aLIstK  \n            aListE = _AVExtAdvEditorListSnap.Get(aThemeView)\n            if (aListE <> nil) then\n              for each aThemeSnapeI in 0..3\n                aThemeSnape = aListE.Get(aThemeSnapeI)\n                if (aThemeSnape <> 0) then\n                  aUse
rSnapPoint = _AVExtAdvEditorapt.Clone\n                  aThemeView.SetInteractiveSnapTolerance(aSnapTolerance)\n                  if (aThemeSnapeI = 0) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_VERTEX,aUserSnapPoint)\n                  elseif (aThemeSnapeI = 1) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_BOUNDARY,aUserSnapPoint)\n                  elseif (aThemeSnapeI = 2) then\n                    aThemeView.UserSnapPoint(#POINT_SNAP_ENDPOINT,aUserSnapPoint)\n              
    else\n                    aThemeView.UserSnapPoint(#POINT_SNAP_INTERSECTION,aUserSnapPoint)\n                  end\n                  if (aUserSnapPoint <> _AVExtAdvEditorapt) then\n                    _AVExtAdvEditorapt = aUserSnapPoint.Clone\n                    aSnapReal = 1\n                    break\n                  end\n                end\n              end\n            end\n            if (aSnapReal = 1) then\n              if (_AVExtAdvEditorSnapOff <> 0) then\n                aDis1 = _AVExtAdvEditorapt.D
istance(apt)\n                aptPx = apt.GetX - _AVExtAdvEditorapt.GetX\n                aptPy = apt.GetY - _AVExtAdvEditorapt.GetY\n                aCosA = aptPx / aDis1.Abs\n                aSinA = aptPy / aDis1.Abs\n                aNewPx = _AVExtAdvEditorSnapOff * aCosA\n                aNewPy = _AVExtAdvEditorSnapOff * aSinA\n                aNewPtX = aNewPx + _AVExtAdvEditorapt.GetX\n                aNewPtY = aNewPy + _AVExtAdvEditorapt.GetY\n                _AVExtAdvEditorapt = aNewPtX@aNewPtY\n              
end\n              break\n            end\n          end\n        end        \n        if (_AVExtAdvEditorShowCurP) then\n          if (_AVExtAdvEditorCurGr = nil) then\n            _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n            _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n            if (aSnapReal = 1) then\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            else\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n           
 end\n            agrlist.Add(_AVExtAdvEditorCurGr)\n            _AVExtAdvEditorCurGr.invalidate\n          end\n          if (aSnapReal = 1) then\n            _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n          else\n            _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP2)\n          end\n          _AVExtAdvEditorCurGr.invalidate\n          _AVExtAdvEditorCurGr.SetShape(_AVExtAdvEditorapt.clone)\n          _AVExtAdvEditorCurGr.invalidate\n        else\n          if (aSnapReal = 1) then\n      
      if (_AVExtAdvEditorCurGr = nil) then\n              _AVExtAdvEditorCurGr = GraphicShape.Make(_AVExtAdvEditorapt.Clone)\n              _AVExtAdvEditorCurGr.SetName(\"_AVExtAdvEditorCurGr\")\n              _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n              agrlist.Add(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr.invalidate\n            end\n            _AVExtAdvEditorCurGr.invalidate\n            _AVExtAdvEditorCurGr.SetSymbol(_AVExtAdvEditorScratchP)\n            _AVExtAdvEditorCu
rGr.SetShape(_AVExtAdvEditorapt.Clone)\n            _AVExtAdvEditorCurGr.invalidate\n          else\n            if (_AVExtAdvEditorCurGr <> nil) then\n              agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n              _AVExtAdvEditorCurGr = nil\n            end\n          end\n        end\n        aListVertexGr = agrlist.FindAllByName(\"AVExtAdvEditorVertexEnd\")\n        if (aListVertexGr <> nil) then\n          for each iaListVertexGr in aListVertexGr\n            if (iaListVertexGr.GetObjectTag = _AVExtAdvEdito
rVertexNum) then\n              iaListVertexGr.invalidate\n              iaListVertexGr.SetShape(_AVExtAdvEditorapt.Clone)\n              iaListVertexGr.invalidate\n              break\n            end\n          end\n        end\n      end\n      if (_AVExtAdvEditorClickVertex = 1) then\n        if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n          _AVExtAdvEditorClickVertex = 2\n          _AVExtAdvEditorView.GetDisplay.Pan\n          av.DelayedRun(\"AVExtAdvEditor.VertexEditOneEnd\",nil,0)\n        elseif (
_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n          _AVExtAdvEditorClickVertex = 2\n          _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          av.DelayedRun(\"AVExtAdvEditor.VertexEditOneEnd\",nil,0)\n        else\n          if (_AVExtAdvEditorScrathGrMouse <> nil) then\n            agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n          end\n          if (_AVExtAdvEditorCurGr <> nil) then\n            agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n          end\n          _AVExtAd
vEditorCurGr = nil\n          _AVExtAdvEditorScrathGrMouse = nil\n          _AVExtAdvEditorClickVertex = nil\n          aNewVertexList = {_AVExtAdvEditorapt.clone,_AVExtAdvEditorScratchList.Get(_AVExtAdvEditorVertexNum).Get(1).clone}\n          _AVExtAdvEditorScratchList.Set(_AVExtAdvEditorVertexNum,aNewVertexList)\n          aListVertexGr = agrlist.FindAllByName(\"AVExtAdvEditorVertexEnd\")\n          if (aListVertexGr <> nil) then\n            for each iaListVertexGr in aListVertexGr\n              if (iaListVertex
Gr.GetObjectTag = _AVExtAdvEditorVertexNum) then\n                iaListVertexGr.invalidate\n                iaListVertexGr.SetShape(_AVExtAdvEditorapt.Clone)\n                iaListVertexGr.invalidate\n                break\n              end\n            end\n          end\n          if (_AVExtAdvEditorPanClick) then\n            _AVExtAdvEditorView.GetDisplay.PanTo(_AVExtAdvEditorapt)\n          end\n        end       \n      else\n        av.DelayedRun(\"AVExtAdvEditor.VertexEditOneEnd\",nil,0)\n      end\n    else\n    
  _AVExtAdvEditorClickVertex = nil\n      _AVExtAdvEditorClick = nil\n      if (_AVExtAdvEditorScrathGrMouse <> nil) then\n        agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n      end\n      _AVExtAdvEditorScrathGrMouse = nil\n      if (_AVExtAdvEditorCurGr <> nil) then\n         agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n      end\n      _AVExtAdvEditorCurGr = nil\n      _AVExtAdvEditoraptL = nil\n      _AVExtAdvEditorapt = nil\n    end\n  else\n    _AVExtAdvEditorClick = nil\n    _AVExtAdvEditorClickVertex =
 nil\n    if (_AVExtAdvEditorScrathGrMouse <> nil) then\n      agrlist.RemoveGraphic(_AVExtAdvEditorScrathGrMouse)\n    end\n    _AVExtAdvEditorScrathGrMouse = nil\n    if (_AVExtAdvEditorCurGr <> nil) then\n       agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n    end\n    _AVExtAdvEditorCurGr = nil\n    _AVExtAdvEditoraptL = nil\n    _AVExtAdvEditorapt = nil\n  end\nelse\n  _AVExtAdvEditorClick = nil\n  _AVExtAdvEditorClickVertex = nil\n  if (_AVExtAdvEditorScrathGrMouse <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEdi
torScrathGrMouse)\n  end\n  _AVExtAdvEditorScrathGrMouse = nil\n  if (_AVExtAdvEditorCurGr <> nil) then\n     agrlist.RemoveGraphic(_AVExtAdvEditorCurGr)\n  end\n  _AVExtAdvEditorCurGr = nil\n  if (_AVExtAdvEditorScrathGr <> nil) then\n    agrlist.RemoveGraphic(_AVExtAdvEditorScrathGr)\n  end\n  _AVExtAdvEditorScrathGr = nil\n  _AVExtAdvEditoraptL = nil\n  _AVExtAdvEditorapt = nil\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2115
	Owner:	2114
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2116
)

(DocAct.2117
	Doc:	2114
)

(SEd.2118
	Name:	"AVExtAdvEditor.VertexEditOneEnd"
	CreationDate:	"8 Май 2004 г. 18:04:01"
	GUIName:	"Script"
	Win:	2119
	CSMgr:	2120
	DocExts:	2121
	Source:	"av.Run(\"AVExtAdvEditor.VertexEditOne\",nil)"
	SearchStr:	"NotEditNumV"
)

(DocWin.2119
	Owner:	2118
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2120
)

(DocAct.2121
	Doc:	2118
)

(SEd.2122
	Name:	"AVExtAdvEditor.VertexEditStart"
	CreationDate:	"6 Май 2004 г. 4:15:42"
	GUIName:	"Script"
	Win:	2123
	CSMgr:	2124
	DocExts:	2125
	Source:	"if (_AVExtAdvEditorPanSh and System.IsShiftKeyDown) then\n  _AVExtAdvEditorView.GetDisplay.Pan\nelseif (_AVExtAdvEditorPanAlt and System.IsControlKeyDown) then\n  aptpan = _AVExtAdvEditorView.getdisplay.returnuserpoint\n  _AVExtAdvEditorView.GetDisplay.PanTo(aptpan)\nelse\n  if (_AVExtAdvEditorClickVertex = nil) then\n    if (_AVExtAdvEditorScratchList <> nil) then\n      _AVExtAdvEditorScratchListPartVertexEdit = nil\n      adis = _AVExtAdvEditorView.getdisplay\n      agrlist = _AVExtAdvEditorView.getgraphics\n      
apt = adis.returnuserpoint\n      aLIst = agrlist.FindAllByLocation(apt)\n      if (aList <> nil) then\n        aGrVer = nil\n        aPat = \"AVExtAdvEditorVertex*\".AsPattern\n        for each i in aList\n          if (aPat = i.GetName) then\n            aGrVer = i\n            break\n          end\n        end\n        if (aGrVer <> nil) then\n          _AVExtAdvEditorVertexNum = aGrVer.GetObjectTag\n          _AVExtAdvEditorClickVertex = 2\n          _AVExtAdvEditorVertexName = aGrVer.GetName\n          \n        else\n  
        'Если не выделен вертекс\n        end\n      else\n          'Если не выделена графика\n      end\n    else\n      'еслди скретча нет\n    end\n  else\n    _AVExtAdvEditorClickVertex = 1\n  end\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2123
	Owner:	2122
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2124
)

(DocAct.2125
	Doc:	2122
)

(SEd.2126
	Name:	"AVExtAdvEditor.VertexEditUpd"
	CreationDate:	"8 Май 2004 г. 3:11:52"
	GUIName:	"Script"
	Win:	2127
	CSMgr:	2128
	DocExts:	2129
	Source:	"if (_AVExtAdvEditorScratchList = nil) then\n  self.SetEnabled(false)\nelse\n  self.SetEnabled(true)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2127
	Owner:	2126
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2128
)

(DocAct.2129
	Doc:	2126
)

(SEd.2130
	Name:	"AVExtAdvEditor.ViewStart"
	CreationDate:	"15 Март 2004 г. 10:11:47"
	GUIName:	"Script"
	Win:	2131
	CSMgr:	2132
	DocExts:	2133
	Source:	"aProject = av.GetProject\naGUI1 = aProject.FindGUI(\"AVExtAdvEditView\")\naList1 = aProject.GetDocsWithGUI(aGUI1)\nif (aList1.Count > 0) then\n  aFin = msgbox.YesNo(\"Before start of a new session of editing it is necessary to finish previous. To finish the previous session?\",\"Advanced Editor\",true)\n  if (aFin) then\n    av.Run(\"AVExtAdvEditor.EditEnd\",nil)\n    exit\n  else\n    aList1.Get(0).GetWin.Open\n    aList1.Get(0).GetWin.Activate\n    exit\n  end\nelse\n  aView = av.GetActiveDoc\n  _AVExtAdvEditorView = aView.Clon
e\n  _AVExtAdvEditorView.SetName(\"Editing\" ++ aView.GetName)\n  _AVExtAdvEditorView.SetGUI(\"AVExtAdvEditView\")\n  aList = _AVExtAdvEditorView.getThemes\n  for each i in aList.Clone\n    _AVExtAdvEditorView.DeleteTheme(i)\n  end\n  if (aView.GetGraphics.Count > 0) then\n    aShGr = msgbox.YesNo(\"Hide Graphics?\",\"Advanced Editor\",true)\n    if (aShGr) then\n      _AVExtAdvEditorView.GetGraphics.Empty\n    else\n      _AVExtAdvEditorView.GetGraphics.Empty\n       aNewGr = aView.GetGraphics.DeepClone\n       aAVList = _AVExt
AdvEditorView.GetGraphics\n       aAVList.Merge(aNewGr)\n    end\n  end\n  av.DelayedRun(\"AVExtAdvEditor.ViewStartPart2\",aView,0)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2131
	Owner:	2130
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2132
)

(DocAct.2133
	Doc:	2130
)

(SEd.2134
	Name:	"AVExtAdvEditor.ViewStartPart2"
	CreationDate:	"16 Март 2004 г. 0:57:04"
	GUIName:	"Script"
	Win:	2135
	CSMgr:	2136
	DocExts:	2137
	Source:	"aView = self\naList = aView.getThemes\naListReal = {}\nfor each i in aList\n  aListReal.Insert(i.Clone)\nend\naThemeList = {}\nNotEditNumV = 1\nNotEditNum = 0\n_AVExtAdvEditorListDocTh = Dictionary.Make(aListReal.Count + 20)\naNotEdit = _AVExtAdvEditorView.Clone\naNotEdit.SetGUI(\"AVExtAdvEditTheme\")\naNotEdit.SetName(\"AVExtAdvEditThemeDoc_NotEditable\")\naList = aNotEdit.getThemes\nfor each y in aList.Clone\n  aNotEdit.DeleteTheme(y)\nend\naNotEdit.GetWin.Close\nfor each i in aListReal\n  if (i.CanEdit) then\n    AdThemeView = 
_AVExtAdvEditorView.Clone\n    AdThemeView.SetGUI(\"AVExtAdvEditTheme\")\n    AdThemeView.SetName(\"AVExtAdvEditThemeDoc_Start_\" + (_AVExtAdvEditorListDocTh.Count + 1).AsString)\n    aList = AdThemeView.getThemes\n    for each y in aList.Clone\n      AdThemeView.DeleteTheme(y)\n    end\n    i.SetActive(false)\n    AdThemeView.AddTheme(i)\n    aThemeList.Add(AdThemeView)\n    AdThemeView.GetWin.Close\n    _AVExtAdvEditorListDocTh.Add(AdThemeView.GetThemes.Get(0),AdThemeView)\n  else\n    i.SetActive(false)\n    aNotEdit.AddT
heme(i)\n    aThemeList.Add(NotEditNum)\n    NotEditNum = NotEditNum + 1\n  end\nend\n_AVExtAdvEditorView.SetCloseScript(\"AVExtAdvEditor.EditorViewClose\")\n_AVExtAdvEditorView.SetOpenScript(\"AVExtAdvEditor.EditorViewOpen\")\n_AVExtAdvEditorView.SetUpdateScript(\"AVExtAdvEditor.EditorViewOpen\")\n_AVExtAdvEditorList = Dictionary.Make(aThemeList.Count + 20)\n_AVExtAdvEditorListSnap = Dictionary.Make(aThemeList.Count + 20)\n_AVExtAdvEditorSelectable = Dictionary.Make(aThemeList.Count + 20)\n_AVExtAdvEditorSelectableBitmap =
 Dictionary.Make(aThemeList.Count + 20)\n_AVExtAdvEditorVisible = Dictionary.Make(aThemeList.Count + 20)\n_AVExtAdvEditorTheme = nil\n\nfor each i in aThemeList\n  if (i.Is(Number)) then\n    aThemeList = av.FindDoc(\"AVExtAdvEditThemeDoc_NotEditable\").GetThemes\n    aThemeListI = aThemeList.Get((av.FindDoc(\"AVExtAdvEditThemeDoc_NotEditable\").GetThemes.Count - 1) - i)\n    _AVExtAdvEditorView.AddTheme(aThemeListI)\n    if (aThemeListI.CanSelect) then\n      if (aThemeListI.IsVisible) then\n        _AVExtAdvEditorVisibl
e.Add(aThemeListI,1)\n      else\n        _AVExtAdvEditorVisible.Add(aThemeListI,0)\n      end\n      _AVExtAdvEditorListSnap.Add(aThemeListI,{0,0,0,0})\n      _AVExtAdvEditorSelectableBitmap.Add(aThemeListI,aThemeListI.GetFTab.GetSelection.Clone)\n      _AVExtAdvEditorList.Add(aThemeListI,2)\n      _AVExtAdvEditorSelectable.Add(aThemeListI,0)\n    end\n  else\n    _AVExtAdvEditorView.AddTheme(i.GetThemes.Get(0))\n    if (i.GetThemes.Get(0).CanSelect) then\n      if (i.GetThemes.Get(0).IsVisible) then\n        _AVExtAdv
EditorVisible.Add(i.GetThemes.Get(0),1)\n      else\n        _AVExtAdvEditorVisible.Add(i.GetThemes.Get(0),0)\n      end\n      _AVExtAdvEditorListSnap.Add(i.GetThemes.Get(0),{0,0,0,0})\n      _AVExtAdvEditorSelectableBitmap.Add(i.GetThemes.Get(0),i.GetThemes.Get(0).GetFTab.GetSelection.Clone)\n      if (i.GetThemes.Get(0).CanEdit) then\n        if (NotEditNumV = 1) then\n          clsName = i.GetThemes.Get(0).GetFTab.GetShapeClass.GetClassName\n          if ((clsName = \"Point\") or (clsName = \"MultiPoint\") or (clsNa
me = \"PolyLine\") or (clsName = \"Polygon\") or (clsName = \"GeoEvent\")) then\n            _AVExtAdvEditorList.Add(i.GetThemes.Get(0),0)\n            _AVExtAdvEditorSelectable.Add(i.GetThemes.Get(0),1)\n          else\n            _AVExtAdvEditorList.Add(i.GetThemes.Get(0),2)\n            _AVExtAdvEditorSelectable.Add(i.GetThemes.Get(0),0)\n          end\n        else\n          if ((i.GetThemes.Get(0).GetFTab.GetDefinition = \"\") and (i.GetThemes.Get(0).GetFTab.GetNumRecords >= 50) and (i.GetThemes.Get(0).GetFTab.GetNu
mRecords <= 60)) then\n            clsName = i.GetThemes.Get(0).GetFTab.GetShapeClass.GetClassName\n            if ((clsName = \"Point\") or (clsName = \"MultiPoint\") or (clsName = \"PolyLine\") or (clsName = \"Polygon\") or (clsName = \"GeoEvent\")) then\n              _AVExtAdvEditorList.Add(i.GetThemes.Get(0),0)\n              _AVExtAdvEditorSelectable.Add(i.GetThemes.Get(0),1)\n            else\n              _AVExtAdvEditorList.Add(i.GetThemes.Get(0),2)\n              _AVExtAdvEditorSelectable.Add(i.GetThemes.Get(0),0
)\n            end\n          else\n            _AVExtAdvEditorList.Add(i.GetThemes.Get(0),2)\n            _AVExtAdvEditorSelectable.Add(i.GetThemes.Get(0),0)\n          end\n        end\n      else\n        _AVExtAdvEditorList.Add(i.GetThemes.Get(0),2)\n        _AVExtAdvEditorSelectable.Add(i.GetThemes.Get(0),0)\n      end\n    end\n  end\nend\n_AVExtAdvEditorView.GetWin.Open\n_AVExtAdvEditorConfir = false\n_AVExtAdvEditorIcvis = Icon.Make(\"$AVEXT/ExtAdvEdit/icon/adveditvis.gif\".AsFileName)\n_AVExtAdvEditorIcvisf = Icon.Ma
ke(\"$AVEXT/ExtAdvEdit/icon/adveditvisf.gif\".AsFileName)\n_AVExtAdvEditorIcedf = Icon.Make(\"$AVEXT/ExtAdvEdit/icon/advediteditf.gif\".AsFileName)\n_AVExtAdvEditorIcedf = Icon.Make(\"$AVEXT/ExtAdvEdit/icon/advediteditf.gif\".AsFileName)\n_AVExtAdvEditorIcebf = Icon.Make(\"$AVEXT/ExtAdvEdit/icon/adveditedblef.gif\".AsFileName)\n_AVExtAdvEditorIced = Icon.Make(\"$AVEXT/ExtAdvEdit/icon/adveditedit.gif\".AsFileName)\n_AVExtAdvEditorIceb = Icon.Make(\"$AVEXT/ExtAdvEdit/icon/adveditedble.gif\".AsFileName)\n_AVExtAdvEditorIcebn = 
Icon.Make(\"$AVEXT/ExtAdvEdit/icon/adveditedblen.gif\".AsFileName)\n_AVExtAdvEditorSnapb = Icon.Make(\"$AVEXT/ExtAdvEdit/icon/adveditsnapb.gif\".AsFileName)\n_AVExtAdvEditorSnapi = Icon.Make(\"$AVEXT/ExtAdvEdit/icon/adveditsnapi.gif\".AsFileName)\n_AVExtAdvEditorSnape = Icon.Make(\"$AVEXT/ExtAdvEdit/icon/adveditsnape.gif\".AsFileName)\n_AVExtAdvEditorSnapv = Icon.Make(\"$AVEXT/ExtAdvEdit/icon/adveditsnapv.gif\".AsFileName)\n_AVExtAdvEditorSnapdis = Icon.Make(\"$AVEXT/ExtAdvEdit/icon/adveditsnapdis.gif\".AsFileName)\n_AVExtAd
vEditorSnapen = Icon.Make(\"$AVEXT/ExtAdvEdit/icon/adveditsnapen.gif\".AsFileName)\n_AVExtAdvEditorAtrIconP = Icon.Make(\"$AVEXT/ExtAdvEdit/icon/adveditsp.gif\".AsFileName)\n_AVExtAdvEditorAtrIconPg = Icon.Make(\"$AVEXT/ExtAdvEdit/icon/adveditspg.gif\".AsFileName)\n_AVExtAdvEditorAtrIconPl = Icon.Make(\"$AVEXT/ExtAdvEdit/icon/adveditspl.gif\".AsFileName)\n_AVExtAdvEditorScratchRestore = nil\n_AVExtAdvEditorAutoClose = true\n_AVExtAdvEditorThemeQueryWin = nil\n_AVExtAdvEditorResetParam = true\n_AVExtAdvEditorScratchListPart
 = nil\n_AVExtAdvEditorScratchListPartNumber = nil\n_AVExtAdvEditorRotateMoveClick = nil\n_AVExtAdvEditorScratchListPartPoint = nil\n_AVExtAdvEditorMeasureShape = nil\n_AVExtAdvEditorScratchListPartVertexEdit = nil\n_AVExtAdvEditorLengthEnb = false\n_AVExtAdvEditorLengthSet = nil\n_AVExtAdvEditorDeflectionEnb = false\n_AVExtAdvEditorDeflectionCos = nil\n_AVExtAdvEditorDeflectionSin = nil\n_AVExtAdvEditorAngleEnb = false\n_AVExtAdvEditorStartSnapPan = false\n_AVExtAdvEditorStartMovePan = false\n_AVExtAdvEditorAngleCos = n
il\n_AVExtAdvEditorMeasurePoint = nil\n_AVExtAdvEditorAngleSin = nil\n_AVExtAdvEditorDrawClass = \"polyline\"\n_AVExtAdvEditorPanSh = true\n_AVExtAdvEditorPanAlt = true\n_AVExtAdvEditorPan = false\n_AVExtAdvEditoraptSR = nil\n_AVExtAdvEditorPanClick = false\n_AVExtAdvEditorCurGr = nil\n_AVExtAdvEditoraptSL = nil\n_AVExtAdvEditoraptSM = nil\n_AVExtAdvEditoraptSLM = nil\n_AVExtAdvEditoraptL = nil\n_AVExtAdvEditorStartSnapRun = false\n_AVExtAdvEditorStartMoveRun = false\n_AVExtAdvEditoraptMoving = false\n_AVExtAdvEditoraptMoveSL
M = nil\n_AVExtAdvEditoraptMoveSM = nil\n_AVExtAdvEditorMoveCenterRun = false\n_AVExtAdvEditorMeasureRun = false\n_AVExtAdvEditorRotateClick = nil\n_AVExtAdvEditorRotateStartPt = nil\n_AVExtAdvEditorVertexNum = nil\n_AVExtAdvEditorClickVertex = nil\n_AVExtAdvEditorShowCurP = false\n_AVExtAdvEditorShowVer = true\n_AVExtAdvEditorArcT = 0.01\n_AVExtAdvEditorSemiArcT = 0.01\n_AVExtAdvEditorCurveT = 0.01\n_AVExtAdvEditorStreamT = 7\n_AVExtAdvEditorStreamTU = \"pixels\"\n_AVExtAdvEditorStreamG = 50\n_AVExtAdvEditorSnapT = 7\n_AVExt
AdvEditorSnapOff = 0\n_AVExtAdvEditorSnapTU = \"pixels\"\n_AVExtAdvEditorSnapEnb = false\n_AVExtAdvEditorScratchL = BasicPen.Make\n_AVExtAdvEditorScratchLC = \"Green\"\n_AVExtAdvEditorScratchLD = \"Normal\"\n_AVExtAdvEditorScratchLS = 1\naScratchLC = av.Run(\"AVExtAdvEditor.ColorSet\",_AVExtAdvEditorScratchLC.Clone)\n_AVExtAdvEditorScratchL.SetColor(aScratchLC)\n_AVExtAdvEditorScratchL.SetSize(_AVExtAdvEditorScratchLS)\n_AVExtAdvEditorScratchLE = BasicPen.Make\n_AVExtAdvEditorScratchLEC = \"Red\"\n_AVExtAdvEditorScratchLED = \"No
rmal\"\n_AVExtAdvEditorScratchLES = 1\naScratchLEC = av.Run(\"AVExtAdvEditor.ColorSet\",_AVExtAdvEditorScratchLEC.Clone)\n_AVExtAdvEditorScratchLE.SetColor(aScratchLEC)\n_AVExtAdvEditorScratchLE.SetSize(_AVExtAdvEditorScratchLES)\n_AVExtAdvEditorScratchP = BasicMarker.Make\n_AVExtAdvEditorScratchPC = \"Cyan\"\n_AVExtAdvEditorScratchPS = 24\n_AVExtAdvEditorScratchP.SetFont(Font.Make(\"ESRI Environmental & Icons\",\"Normal\"))\n_AVExtAdvEditorScratchP.SetCharacter(240)\n_AVExtAdvEditorScratchP.SetSize(_AVExtAdvEditorScratchPS)\n
_AVExtAdvEditorScratchP.SetAngle(360)\naScratchPC = av.Run(\"AVExtAdvEditor.ColorSet\",_AVExtAdvEditorScratchPC.Clone)\n_AVExtAdvEditorScratchP.SetColor(aScratchPC)\n_AVExtAdvEditorBono = nil\n_AVExtAdvEditorScratchP2 = BasicMarker.Make\n_AVExtAdvEditorScratchP2.SetFont(Font.Make(\"ESRI Geometric Symbols\",\"Normal\"))\n_AVExtAdvEditorScratchP2.SetCharacter(83)\n_AVExtAdvEditorScratchP2.SetSize(_AVExtAdvEditorScratchPS)\n_AVExtAdvEditorScratchP2.SetAngle(360)\n_AVExtAdvEditorScratchP2.SetColor(aScratchPC)\n_AVExtAdvEditorV
ertexSb = 1\n_AVExtAdvEditorVertexC = \"Green\"\n_AVExtAdvEditorVertexS = 7\n_AVExtAdvEditorVertex = BasicMarker.Make\n_AVExtAdvEditorVertex.SetFont(Font.Make(\"ESRI Geometric Symbols\",\"Normal\"))\n_AVExtAdvEditorVertex.SetCharacter(37)\n_AVExtAdvEditorVertex.SetSize(_AVExtAdvEditorVertexS)\naVertexC = av.Run(\"AVExtAdvEditor.ColorSet\",_AVExtAdvEditorVertexC.Clone)\n_AVExtAdvEditorVertex.SetColor(aVertexC)\n_AVExtAdvEditorVertexArc = BasicMarker.Make\n_AVExtAdvEditorVertexArc.SetFont(Font.Make(\"ESRI Geometric Symbols\",\"No
rmal\"))\n_AVExtAdvEditorVertexArc.SetCharacter(73)\n_AVExtAdvEditorVertexArc.SetSize(_AVExtAdvEditorVertexS)\n_AVExtAdvEditorVertexArc.SetColor(aVertexC)\n_AVExtAdvEditorVertexEndC = \"Red\"\n_AVExtAdvEditorVertexEndS = 7\n_AVExtAdvEditorVertexEnd = BasicMarker.Make\n_AVExtAdvEditorVertexEnd.SetFont(Font.Make(\"ESRI Geometric Symbols\",\"Normal\"))\n_AVExtAdvEditorVertexEnd.SetCharacter(37)\n_AVExtAdvEditorVertexEnd.SetSize(_AVExtAdvEditorVertexEndS)\naVertexEndC = av.Run(\"AVExtAdvEditor.ColorSet\",_AVExtAdvEditorVertexEndC
.Clone)\n_AVExtAdvEditorVertexEnd.SetColor(aVertexEndC)\n_AVExtAdvEditorSelectionLC = \"Cyan\"\n_AVExtAdvEditorSelectionLS = 2\n_AVExtAdvEditorSelectionSketch = BasicPen.Make\n_AVExtAdvEditorSelectionSketch.SetSize(_AVExtAdvEditorSelectionLS)\naSelectionSketchC = av.Run(\"AVExtAdvEditor.ColorSet\",_AVExtAdvEditorSelectionLC.Clone)\n_AVExtAdvEditorSelectionSketch.SetColor(aSelectionSketchC)\n_AVExtAdvEditorSelectionPoint = BasicMarker.Make\n_AVExtAdvEditorSelectionPoint.SetColor(aSelectionSketchC)\n_AVExtAdvEditorSelectio
nPoint.SetFont(Font.Make(\"ESRI Geometric Symbols\",\"Normal\"))\n_AVExtAdvEditorSelectionPoint.SetCharacter(35)\n_AVExtAdvEditorSelectionPointS = 10\n_AVExtAdvEditorSelectionPoint.SetSize(_AVExtAdvEditorSelectionPointS)\n_AVExtAdvEditorSelectionCenter = BasicMarker.Make\n_AVExtAdvEditorSelectionCenter.SetColor(Color.GetRed.Clone)\n_AVExtAdvEditorSelectionCenter.SetFont(Font.Make(\"ESRI Geometric Symbols\",\"Normal\"))\n_AVExtAdvEditorSelectionCenter.SetCharacter(82)\n_AVExtAdvEditorSelectionCenter.SetSize(10)\nav.FindDialo
g(\"AVExtAdvEditor.Target\").Open\naListTask = {\"Create New Feature\",\"Auto Complete Polygon\",\"Cut Polygon\",\"Split Polyline\",\"Modify Feature\",\"Resape Feature\",\n          \"Select Features Using an Area\",\"Select Features Using a Line\"}\naDT = av.FindDialog(\"AVExtAdvEditor.Task\")\naDT.FindByName(\"aCBTask\").DefineFromList(aListTask)\naDT.Open\nav.GetProject.FindGUI(\"AVExtAdvEditView\").GetToolBar.GetControls.Get(0).Select\n_AVExtAdvEditorView.GetDisplay.SetExtent(aView.GetDisplay.ReturnVisExtent)"
	SearchStr:	"NotEditNumV"
)

(DocWin.2135
	Owner:	2134
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2136
)

(DocAct.2137
	Doc:	2134
)

(SEd.2138
	Name:	"AVExtAdvEditor.ViewStartUpd"
	CreationDate:	"28 Июнь 2004 г. 11:38:09"
	GUIName:	"Script"
	Win:	2139
	CSMgr:	2140
	DocExts:	2141
	Source:	"self.SetEnabled(false)\naLIst = av.GEtActiveDoc.GetTHemes\nif (aLIst.count > 0) then\n  self.SetEnabled(True)\nend"
	SearchStr:	"NotEditNumV"
)

(DocWin.2139
	Owner:	2138
	X:	-4
	Y:	-4
	W:	1162
	H:	739
)

(CSMgr.2140
)

(DocAct.2141
	Doc:	2138
)

(LButn.2142
	HelpTopic:	"New_button"
	Update:	"Doc.NewUpdate"
	Label:	"&New"
	Click:	"Script.New"
)

(LButn.2143
	HelpTopic:	"Open_button"
	Update:	"Doc.OpenUpdate"
	Label:	"&Open"
	Click:	"Doc.Open"
)

(LButn.2144
	HelpTopic:	"Run_button"
	Update:	"Script.ActionUpdate"
	Label:	"&Run"
	Click:	"Script.Action"
)

(FN.2145
	Path:	"$AVEXT/dialog.avx"
)

(NameDict.2146
)

(NameDict.2147
	Obj:	2148
	Obj:	2151
	Obj:	2165
)

(AVDict.2148
	InternalName:	"Dialog Designer"
	Key:	2149
	Value:	2150
)

(AVStr.2149
	S:	"IsVisible"
)

(Bool.2150
	Truth:	1
)

(AVDict.2151
	InternalName:	"Table of Contents Defaults Dialog"
	Key:	2152
	Value:	2153
)

(AVStr.2152
	S:	"TocDefs"
)

(List.2153
	Child:	2154
	Child:	2155
	Child:	2156
)

(AVStr.2154
	S:	"Прямая"
)

(AVStr.2155
	S:	"Нормальный"
)

(TxSym.2156
	Color:	2157
	Font:	2158
	BgColor:	2163
	OlColor:	2164
	Size:	12.00000000000000
)

(TClr.2157
)

(NFont.2158
	Family:	2159
	Name:	2160
	Style:	2161
	CommonFamily:	2162
	Weight:	1
	Wideness:	1
)

(AVStr.2159
	S:	"Arial"
)

(AVStr.2160
	S:	"Arial"
)

(AVStr.2161
	S:	"Обычный"
)

(AVStr.2162
	S:	"Helvetica"
)

(TClr.2163
	Red:	0xff
	Green:	0xff
	Blue:	0xff
)

(TClr.2164
	Red:	0xff
	Green:	0xff
	Blue:	0xff
)

(AVDict.2165
	InternalName:	"_Thor_"
	Key:	2166
	Value:	2167
)

(AVStr.2166
	S:	"DLOGS"
)

(NameDict.2167
)

(DocGUI.2168
	Name:	"View"
	Type:	"View"
	Modified:	1
	Visible:	1
	MenuBar:	2169
	ButnBar:	2294
	Popups:	2338
	ToolBar:	2360
	NewScript:	"View.New"
	OpenScript:	"Doc.Open"
	ActionScript:	"Doc.Action"
	NewUpdateScript:	"Doc.NewUpdate"
	OpenUpdateScript:	"Doc.OpenUpdate"
	ActionUpdateScript:	"Doc.ActionUpdate"
	Title:	"Views"
	Icon:	2437
)

(MenuBar.2169
	Child:	2170
	Child:	2189
	Child:	2209
	Child:	2233
	Child:	2256
	Child:	2274
	Child:	2289
)

(PMenu.2170
	InternalName:	"File"
	Child:	2171
	Child:	2172
	Child:	2173
	Child:	2174
	Child:	2175
	Child:	2176
	Child:	2177
	Child:	2178
	Child:	2179
	Child:	2180
	Child:	2181
	Child:	2182
	Child:	2183
	Child:	2184
	Child:	2185
	Child:	2186
	Child:	2187
	Child:	2188
	Label:	"&File"
)

(Choice.2171
	Help:	"Closes the active component"
	HelpTopic:	"Close"
	Label:	"&Close"
	Click:	"Project.CloseDoc"
	Shortcut:	"Keys.None"
)

(Choice.2172
	Help:	"Closes all components"
	HelpTopic:	"Close_All"
	Label:	"Close &All"
	Click:	"Project.CloseAll"
	Shortcut:	"Keys.None"
)

(Space.2173
)

(Choice.2174
	Help:	"Allows you to specify the current working directory"
	HelpTopic:	"Set_Working_Directory"
	Label:	"Set &Working Directory..."
	Click:	"Project.SetProjectWorkDir"
	Shortcut:	"Keys.None"
)

(Choice.2175
	Help:	"Saves the current project"
	HelpTopic:	"Save_Project"
	Label:	"&Save Project"
	Click:	"Project.Save"
	Shortcut:	"Keys.Ctrl+S"
)

(Choice.2176
	Help:	"Saves the current project with a new name"
	HelpTopic:	"Save_Project_As"
	Label:	"Save Project As..."
	Click:	"Project.SaveAs"
	Shortcut:	"Keys.None"
)

(Space.2177
)

(Choice.2178
	Help:	"Displays the Extensions dialog"
	HelpTopic:	"Extensions"
	Label:	"Extensions..."
	Click:	"Appl.GetExtensionWin"
	Shortcut:	"Keys.None"
)

(Space.2179
)

(Choice.2180
	Help:	"Prints the view"
	HelpTopic:	"Print"
	Label:	"&Print..."
	Click:	"View.Print"
	Shortcut:	"Keys.None"
)

(Choice.2181
	Help:	"Edits the printer and the printing options"
	HelpTopic:	"Print_Setup"
	Label:	"P&rint Setup..."
	Click:	"Project.PrintSetup"
	Shortcut:	"Keys.None"
)

(Choice.2182
	Disabled:	1
	Help:	"Exports the view"
	HelpTopic:	"Export"
	Update:	"View.HasThemesUpdate"
	Label:	"&Export..."
	Click:	"View.ExportDisp"
	Shortcut:	"Keys.None"
)

(Space.2183
)

(Choice.2184
	Help:	"Displays the dialog box to delete, edit, and copy data sources"
	HelpTopic:	"Manage_Sources"
	Label:	"&Manage Data Sources..."
	Click:	"View.ManageSources"
	Shortcut:	"Keys.None"
)

(Space.2185
)

(Choice.2186
	Help:	"Display the dialog box of the code page profile"
	HelpTopic:	"Code_Page_Profile"
	Label:	"C&ode Page Profile..."
	Click:	"ShowCodepage"
	Shortcut:	"Keys.None"
)

(Space.2187
)

(Choice.2188
	Help:	"Exits ArcView"
	HelpTopic:	"Exit"
	Label:	"E&xit"
	Click:	"Project.Exit"
	Shortcut:	"Keys.None"
)

(PMenu.2189
	InternalName:	"Edit"
	Child:	2190
	Child:	2191
	Child:	2192
	Child:	2193
	Child:	2194
	Child:	2195
	Child:	2196
	Child:	2197
	Child:	2198
	Child:	2199
	Child:	2200
	Child:	2201
	Child:	2202
	Child:	2203
	Child:	2204
	Child:	2205
	Child:	2206
	Child:	2207
	Child:	2208
	Label:	"&Edit"
)

(Choice.2190
	Disabled:	1
	Help:	"Cuts the active themes to the clipboard"
	HelpTopic:	"Cut_Themes"
	Update:	"View.ActiveDeletableThemesUpdate"
	Label:	"Cut T&hemes"
	Click:	"View.CutThemes"
	Shortcut:	"Keys.None"
)

(Choice.2191
	Disabled:	1
	Help:	"Copies the active themes to the clipboard"
	HelpTopic:	"Copy_Themes"
	Update:	"View.ActiveThemesUpdate"
	Label:	"Cop&y Themes"
	Click:	"View.CopyThemes"
	Shortcut:	"Keys.None"
)

(Choice.2192
	Disabled:	1
	Help:	"Removes the active themes from the view"
	HelpTopic:	"Delete_Themes"
	Update:	"View.ActiveDeletableThemesUpdate"
	Label:	"De&lete Themes"
	Click:	"View.DeleteThemes"
	Shortcut:	"Keys.None"
)

(Space.2193
)

(Choice.2194
	Disabled:	1
	Help:	"Отменяет последнее редактирование графических объектов в Виде"
	HelpTopic:	"Undo_Graphic_Edit_on_a_view"
	Update:	"View.UndoEditUpdate"
	Label:	"&Отменить изменения графики"
	Click:	"View.UndoEdit"
	Shortcut:	"Keys.Ctrl+Z"
)

(Choice.2195
	Disabled:	1
	Invisible:	1
	Help:	"Redo the last edit operation on a theme that was undone"
	HelpTopic:	"Redo_Feature_Edit_on_a_view"
	Update:	"View.RedoEditUpdate"
	Label:	"&Redo Feature Edit"
	Click:	"View.RedoEdit"
	Shortcut:	"Keys.Ctrl+Y"
)

(Space.2196
)

(Choice.2197
	Disabled:	1
	Help:	"Помещает выбранные графические объекты в буфер обмена"
	HelpTopic:	"Cut_Graphics"
	Update:	"View.CutUpdate"
	Label:	"В&ырезать графику"
	Click:	"View.CutGraphics"
	Shortcut:	"Keys.Ctrl+X"
)

(Choice.2198
	Disabled:	1
	Help:	"Копирует выбранные графические объекты в буфер обмена"
	HelpTopic:	"Copy_Graphics"
	Update:	"View.CopyUpdate"
	Label:	"&Копировать графику"
	Click:	"View.CopyGraphics"
	Shortcut:	"Keys.Ctrl+C"
)

(Choice.2199
	Disabled:	1
	Help:	"Удаляет выбранные графические объекты из Вида"
	HelpTopic:	"Delete_Graphics"
	Update:	"View.DeleteUpdate"
	Label:	"&Удалить графику"
	Click:	"View.DeleteGraphics"
	Shortcut:	"Keys.Del"
)

(Space.2200
)

(Choice.2201
	Disabled:	1
	Help:	"Combines the selected polygons"
	HelpTopic:	"Combine_Graphics"
	Update:	"View.CombineUpdate"
	Label:	"Ко&мбинировать графику"
	Click:	"View.CombineGraphics"
	Shortcut:	"Keys.None"
)

(Choice.2202
	Disabled:	1
	Help:	"Объединяет выбранные графические объекты для создания нового графического объекта"
	HelpTopic:	"Union_Graphics"
	Update:	"View.UnionUpdate"
	Label:	"О&бъединить графику"
	Click:	"View.UnionGraphics"
	Shortcut:	"Keys.None"
)

(Choice.2203
	Disabled:	1
	Help:	"Subtracts one selected polygon from the other selected polygon"
	HelpTopic:	"Subtract_Graphics"
	Update:	"View.SubtractUpdate"
	Label:	"&Вычесть графику"
	Click:	"View.SubtractGraphics"
	Shortcut:	"Keys.None"
)

(Choice.2204
	Disabled:	1
	Help:	"Creates a new polygon from the area  of overlap between the selected polygons"
	HelpTopic:	"Intersect_Graphics"
	Update:	"View.IntersectUpdate"
	Label:	"Пе&ресечь графику"
	Click:	"View.IntersectGraphics"
	Shortcut:	"Keys.None"
)

(Space.2205
)

(Choice.2206
	Disabled:	1
	Help:	"Inserts the contents of the clipboard"
	HelpTopic:	"Paste"
	Update:	"View.PasteUpdate"
	Label:	"&Paste"
	Click:	"View.Paste"
	Shortcut:	"Keys.Ctrl+V"
)

(Space.2207
)

(Choice.2208
	Disabled:	1
	Help:	"Selects all graphics in the view"
	HelpTopic:	"Select_All_Graphics"
	Update:	"View.HasGraphicsUpdate"
	Label:	"Select &All Graphics"
	Click:	"Graphic.SelectAll"
	Shortcut:	"Keys.None"
)

(PMenu.2209
	InternalName:	"View"
	Child:	2210
	Child:	2211
	Child:	2212
	Child:	2213
	Child:	2214
	Child:	2215
	Child:	2216
	Child:	2217
	Child:	2218
	Child:	2219
	Child:	2220
	Child:	2221
	Child:	2222
	Child:	2223
	Child:	2224
	Child:	2225
	Child:	2226
	Child:	2227
	Child:	2228
	Child:	2229
	Child:	2230
	Child:	2231
	Child:	2232
	Label:	"&View"
)

(Choice.2210
	Help:	"Displays the dialog box to edit properties of the view"
	HelpTopic:	"View_Properties"
	Label:	"&Properties..."
	Click:	"View.Properties"
	Shortcut:	"Keys.None"
)

(Space.2211
)

(Choice.2212
	Disabled:	1
	Help:	"Advanced Editor"
	Update:	"AVExtAdvEditor.ViewStartUpd"
	Label:	"Advanced Editor"
	Click:	"AVExtAdvEditor.ViewStart"
	Shortcut:	"Keys.None"
)

(Choice.2213
	Help:	"Inserts themes into the view"
	HelpTopic:	"Add_Theme"
	Label:	"&Add Theme..."
	Click:	"View.Add"
	Shortcut:	"Keys.Ctrl+T"
)

(Choice.2214
	Disabled:	1
	Help:	"Displays a dialog box to create a geocoded theme"
	HelpTopic:	"Geocode_Addresses"
	Update:	"View.GeocodeUpdate"
	Label:	"&Geocode Addresses..."
	Click:	"View.Geocode"
	Shortcut:	"Keys.None"
)

(Choice.2215
	Disabled:	1
	Help:	"Displays a dialog box to create an XY or dynamic segmentation event-based theme "
	HelpTopic:	"Add_Event_Theme"
	Update:	"View.AddEventUpdate"
	Label:	"Add &Event Theme..."
	Click:	"View.AddEvent"
	Shortcut:	"Keys.None"
)

(Choice.2216
	Help:	"Creates a new theme"
	HelpTopic:	"New_Theme"
	Label:	"&New Theme..."
	Click:	"View.NewTheme"
	Shortcut:	"Keys.None"
)

(Choice.2217
	Disabled:	1
	Help:	"Makes all themes visible"
	HelpTopic:	"Themes_On_Themes_Off"
	Update:	"View.HasThemesUpdate"
	Label:	"&Themes On"
	Click:	"View.ThemesOn"
	Shortcut:	"Keys.None"
)

(Choice.2218
	Disabled:	1
	Help:	"Makes all themes invisible"
	HelpTopic:	"Themes_On_Themes_Off"
	Update:	"View.HasThemesUpdate"
	Label:	"T&hemes Off"
	Click:	"View.ThemesOff"
	Shortcut:	"Keys.None"
)

(Space.2219
)

(Choice.2220
	Disabled:	1
	Help:	"Create a Layout from the View"
	HelpTopic:	"Layout_menu_choice"
	Update:	"View.HasThemesUpdate"
	Label:	"La&yout..."
	Click:	"View.Layout"
	Shortcut:	"Keys.None"
)

(Space.2221
)

(Choice.2222
	Help:	"Shows a dialog where you can change the style of the TOC"
	HelpTopic:	"TOC_Defaults"
	Update:	"TocDefs.ShowUpdate"
	Label:	"TOC Style..."
	Click:	"TocDefs.Show"
	Shortcut:	"Keys.None"
)

(Space.2223
)

(Choice.2224
	Disabled:	1
	Help:	"Zooms to the extent of all themes"
	HelpTopic:	"Zoom_to_Full_Extent"
	Update:	"View.HasDataUpdate"
	Label:	"Full E&xtent"
	Click:	"View.ZoomFullExtent"
	Shortcut:	"Keys.None"
)

(Choice.2225
	Disabled:	1
	Help:	"Zooms in on the center of the display"
	HelpTopic:	"Zoom_In"
	Update:	"View.HasDataUpdate"
	Label:	"Zoom &In"
	Click:	"View.ZoomIn"
	Shortcut:	"Keys.None"
)

(Choice.2226
	Disabled:	1
	Help:	"Zooms out from the center of the display"
	HelpTopic:	"Zoom_Out"
	Update:	"View.HasDataUpdate"
	Label:	"Zoom &Out"
	Click:	"View.ZoomOut"
	Shortcut:	"Keys.None"
)

(Choice.2227
	Disabled:	1
	Help:	"Zooms to the extent of active themes"
	HelpTopic:	"Zoom_to_Active_Theme"
	Update:	"View.ActiveThemesUpdate"
	Label:	"&Zoom To Themes"
	Click:	"View.ZoomToThemes"
	Shortcut:	"Keys.None"
)

(Choice.2228
	Disabled:	1
	Help:	"Zooms to the extent of the selected features"
	HelpTopic:	"Zoom_to_Selected"
	Update:	"View.SelectableThemesUpdate"
	Label:	"Zoom To &Selected"
	Click:	"View.ZoomToSelected"
	Shortcut:	"Keys.None"
)

(Choice.2229
	Disabled:	1
	Help:	"Goes back to the previous extent you were viewing"
	HelpTopic:	"Zoom_Previous"
	Update:	"View.UndoZoomUpdate"
	Label:	"Zoom Pre&vious"
	Click:	"View.UndoZoom"
	Shortcut:	"Keys.None"
)

(Space.2230
)

(Choice.2231
	Disabled:	1
	Help:	"Finds features in the active themes using the text you enter"
	HelpTopic:	"Find"
	Update:	"View.TabularThemesUpdate"
	Label:	"&Find..."
	Click:	"View.Find"
	Shortcut:	"Keys.Ctrl+F"
)

(Choice.2232
	Disabled:	1
	Help:	"Locates an address in the active, matchable theme"
	HelpTopic:	"Locate_Address"
	Update:	"View.LocateUpdate"
	Label:	"&Locate Address..."
	Click:	"View.Locate"
	Shortcut:	"Keys.None"
)

(PMenu.2233
	InternalName:	"Theme"
	Child:	2234
	Child:	2235
	Child:	2236
	Child:	2237
	Child:	2238
	Child:	2239
	Child:	2240
	Child:	2241
	Child:	2242
	Child:	2243
	Child:	2244
	Child:	2245
	Child:	2246
	Child:	2247
	Child:	2248
	Child:	2249
	Child:	2250
	Child:	2251
	Child:	2252
	Child:	2253
	Child:	2254
	Child:	2255
	Label:	"&Theme"
)

(Choice.2234
	Disabled:	1
	Help:	"Displays the dialog box to edit properties of the active theme"
	HelpTopic:	"Theme_Properties"
	Update:	"View.ActiveThemesUpdate"
	Label:	"&Properties..."
	Click:	"View.ThemeProperties"
	Shortcut:	"Keys.None"
)

(Space.2235
)

(Choice.2236
	Disabled:	1
	Help:	"Starts or stops editing of shapefile"
	HelpTopic:	"Start_Stop_Editing_in_a_view"
	Update:	"View.ToggleEditingUpdate"
	Label:	"Начать редакт&ирование"
	Click:	"View.ToggleEditing"
	Shortcut:	"Keys.None"
)

(Choice.2237
	Disabled:	1
	Help:	"Save edits to the source shapefile"
	HelpTopic:	"Save_edits_theme"
	Update:	"View.SaveEditsUpdate"
	Label:	"Save Ed&its"
	Click:	"View.SaveEdits"
	Shortcut:	"Keys.None"
)

(Choice.2238
	Disabled:	1
	Help:	"Saves edits to a new shapefile"
	HelpTopic:	"Save_edits_as_theme"
	Update:	"View.SaveEditsUpdate"
	Label:	"Save E&dits As..."
	Click:	"View.SaveEditsAs"
	Shortcut:	"Keys.None"
)

(Choice.2239
	Disabled:	1
	Help:	"Converts a theme to a shapefile"
	HelpTopic:	"Convert_to_Shapefile"
	Update:	"View.ExportUpdate"
	Label:	"Convert to &Shapefile..."
	Click:	"View.Export"
	Shortcut:	"Keys.None"
)

(Space.2240
)

(Choice.2241
	Disabled:	1
	Help:	"Displays the legends of the active themes"
	HelpTopic:	"Edit_Legend"
	Update:	"View.ActiveThemesUpdate"
	Label:	"Edit &Legend..."
	Click:	"View.EditLegendClick"
	Shortcut:	"Keys.None"
)

(Choice.2242
	Disabled:	1
	Help:	"Shows or hides the active themes' legends"
	HelpTopic:	"Hide_show_Legend"
	Update:	"View.ActiveThemesUpdate"
	Label:	"&Hide/Show Legend"
	Click:	"View.ToggleLegend"
	Shortcut:	"Keys.None"
)

(Space.2243
)

(Choice.2244
	Disabled:	1
	Help:	"Displays the Re-match dialog for re-matching addresses"
	HelpTopic:	"Re_match_Addresses"
	Update:	"View.EditMatchUpdate"
	Label:	"&Re-match Addresses..."
	Click:	"View.EditMatch"
	Shortcut:	"Keys.None"
)

(Space.2245
)

(Choice.2246
	Disabled:	1
	Help:	"Labels features in active, visible themes"
	HelpTopic:	"Auto_label"
	Update:	"View.LabelThemesUpdate"
	Label:	"&Auto-label..."
	Click:	"View.LabelThemes"
	Shortcut:	"Keys.Ctrl+L"
)

(Choice.2247
	Disabled:	1
	Help:	"Removes any labels from active themes"
	HelpTopic:	"Remove_Labels"
	Update:	"View.RemoveThemeLabelsUpdate"
	Label:	"Rem&ove Labels"
	Click:	"View.RemoveThemeLabels"
	Shortcut:	"Keys.Ctrl+R"
)

(Choice.2248
	Disabled:	1
	Help:	"Removes the overlapping labels from active themes, if they are still green."
	HelpTopic:	"Remove_Overlapping_Labels"
	Update:	"View.RemoveOverlapThemeLabelsUpdate"
	Label:	"Remove Overlappi&ng Labels"
	Click:	"View.RemoveOverlapThemeLabels"
	Shortcut:	"Keys.None"
)

(Choice.2249
	Disabled:	1
	Help:	"Converts selected overlapping labels to symbol of selected good label"
	HelpTopic:	"Convert_Overlapping_Labels"
	Update:	"View.ConvertOverlapLabelsUpdate"
	Label:	"&Convert Overlapping Labels"
	Click:	"View.ConvertOverlapLabels"
	Shortcut:	"Keys.Ctrl+O"
)

(Space.2250
)

(Choice.2251
	Disabled:	1
	Help:	"Opens the tables of the active themes"
	HelpTopic:	"Open_Theme_Table"
	Update:	"View.TabularThemesUpdate"
	Label:	"&Table..."
	Click:	"View.ShowTable"
	Shortcut:	"Keys.None"
)

(Choice.2252
	Disabled:	1
	Help:	"Displays the Query Builder to select features with a logical expression"
	HelpTopic:	"Query_Builder"
	Update:	"View.AttributeThemesUpdate"
	Label:	"&Query..."
	Click:	"View.Query"
	Shortcut:	"Keys.Ctrl+Q"
)

(Choice.2253
	Disabled:	1
	Help:	"Selects features in the active themes using another theme's features"
	HelpTopic:	"Select_By_Theme"
	Update:	"View.SelectableThemesUpdate"
	Label:	"Select &By Theme..."
	Click:	"View.SelectByTheme"
	Shortcut:	"Keys.None"
)

(Choice.2254
	Disabled:	1
	Help:	"Creates buffers around features"
	HelpTopic:	"Create_Buffer_Choice"
	Update:	"WizardBuffer.OpenDialogUpdate"
	Label:	"Create Buffers..."
	Click:	"WizardBuffer.OpenDialog"
	Shortcut:	"Keys.None"
)

(Choice.2255
	Disabled:	1
	Help:	"Unselects the selected features of all active themes"
	HelpTopic:	"Clear_Selected_Features"
	Update:	"View.AttributeThemesUpdate"
	Label:	"Clear Selected &Features"
	Click:	"View.ClearSelect"
	Shortcut:	"Keys.None"
)

(PMenu.2256
	InternalName:	"Graphics"
	Child:	2257
	Child:	2258
	Child:	2259
	Child:	2260
	Child:	2261
	Child:	2262
	Child:	2263
	Child:	2264
	Child:	2265
	Child:	2268
	Child:	2269
	Child:	2270
	Child:	2271
	Child:	2272
	Child:	2273
	Label:	"&Graphics"
)

(Choice.2257
	Disabled:	1
	Help:	"Displays the property editor for the selected graphic"
	HelpTopic:	"Graphic_Properties"
	Update:	"Graphic.HasSelectionUpdate"
	Label:	"&Properties..."
	Click:	"Graphic.Edit"
	Shortcut:	"Keys.None"
)

(Space.2258
)

(Choice.2259
	Help:	"Shows a dialog where you can set the default values for the label and text tools"
	HelpTopic:	"Default_settings_for_text_and_label_tools"
	Label:	"&Text and Label Defaults..."
	Click:	"Graphic.Label Defaults Show"
	Shortcut:	"Keys.None"
)

(Space.2260
)

(Choice.2261
	Disabled:	1
	Help:	"Displays a dialog box to adjust size and position of selected graphic"
	HelpTopic:	"Size_and_Position"
	Update:	"Graphic.SingleSelectionUpdate"
	Label:	"&Size and Position..."
	Click:	"Graphic.SizePos"
	Shortcut:	"Keys.None"
)

(Choice.2262
	Disabled:	1
	Help:	"Aligns the selected graphics"
	HelpTopic:	"Align"
	Update:	"Graphic.HasSelectionUpdate"
	Label:	"&Align..."
	Click:	"Graphic.Align"
	Shortcut:	"Keys.Ctrl+A"
)

(Space.2263
)

(Choice.2264
	Disabled:	1
	Help:	"Moves selected graphics in front of other graphics"
	HelpTopic:	"Bring_to_Front_on_a_view"
	Update:	"Graphic.HasSelectionUpdate"
	Label:	"Bring to &Front"
	Click:	"Graphic.ToFront"
	Shortcut:	"Keys.None"
)

(Choice.2265
	Disabled:	1
	Help:	"Moves selected graphics behind other graphics"
	HelpTopic:	"Send_to_Back_on_a_view"
	Update:	"Graphic.HasSelectionUpdate"
	Label:	"Send to &Back "
	Click:	"Graphic.ToBack"
	Shortcut:	"Keys.None"
)

(Choice.2268
	Disabled:	1
	Help:	"Groups selected graphics"
	HelpTopic:	"Group_on_a_view"
	Update:	"Graphic.GroupUpdate"
	Label:	"&Group"
	Click:	"Graphic.Group"
	Shortcut:	"Keys.Ctrl+G"
)

(Choice.2269
	Disabled:	1
	Help:	"Ungroups selected graphics"
	HelpTopic:	"Ungroup_on_a_view"
	Update:	"Graphic.UngroupUpdate"
	Label:	"&Ungroup"
	Click:	"Graphic.Ungroup"
	Shortcut:	"Keys.Ctrl+U"
)

(Space.2270
)

(Choice.2271
	Disabled:	1
	Help:	"Associates selected graphics with active themes"
	HelpTopic:	"Attach_Graphics"
	Update:	"View.AddGraphicsUpdate"
	Label:	"A&ttach Graphics"
	Click:	"View.AddGraphics"
	Shortcut:	"Keys.None"
)

(Choice.2272
	Disabled:	1
	Help:	"Removes association between graphics and active themes"
	HelpTopic:	"Detach_Graphics"
	Update:	"View.ClearGraphicsUpdate"
	Label:	"&Detach Graphics"
	Click:	"View.ClearGraphics"
	Shortcut:	"Keys.None"
)

(Space.2273
)

(PMenu.2274
	InternalName:	"Window"
	Child:	2275
	Child:	2276
	Child:	2277
	Child:	2278
	Child:	2279
	Child:	2281
	Child:	2283
	Child:	2284
	Child:	2285
	Child:	2286
	Child:	2287
	Child:	2288
	Label:	"&Window"
)

(Choice.2275
	Help:	"Arranges windows as non-overlapping tiles"
	HelpTopic:	"Tile"
	Label:	"&Tile"
	Click:	"Project.Tile"
	Shortcut:	"Keys.None"
)

(Choice.2276
	Help:	"Arranges windows"
	HelpTopic:	"Cascade"
	Label:	"&Cascade"
	Click:	"Project.Cascade"
	Shortcut:	"Keys.None"
)

(Choice.2277
	Help:	"Arranges iconified windows"
	HelpTopic:	"Arrange_Icons"
	Label:	"&Arrange Icons"
	Click:	"Project.ArrangeIcons"
	Shortcut:	"Keys.None"
)

(Space.2278
)

(Choice.2279
	Help:	"Shows the symbol window"
	HelpTopic:	"Show_Symbol_Window"
	Label:	"Show Symbol Window..."
	Click:	"Project.ShowHideSymWin"
	Shortcut:	"Keys.Ctrl+P"
)

(Space.2281
	ObjectTag:	2282
	Update:	"WindowMenuUpdate"
)

(AVStr.2282
	S:	"40.apr AVExtAdvEditor.ToolMeasureSelected AVExtAdvEditor.ToolMeasureSelectedClick AVExtAdvEditor.ToolMeasureSelectedEnd AVExtAdvEditor.ToolMeasureSelectedUpd View1"
)

(Choice.2283
	Help:	"Активизирует 40.apr"
	Label:	"&1 40.apr"
	Click:	"WindowActivate"
	Shortcut:	"Keys.None"
)

(Choice.2284
	Help:	"Активизирует AVExtAdvEditor.ToolMeasureSelected"
	Label:	"&2 AVExtAdvEditor.ToolMeasureSelected"
	Click:	"WindowActivate"
	Shortcut:	"Keys.None"
)

(Choice.2285
	Help:	"Активизирует AVExtAdvEditor.ToolMeasureSelectedClick"
	Label:	"&3 AVExtAdvEditor.ToolMeasureSelectedClick"
	Click:	"WindowActivate"
	Shortcut:	"Keys.None"
)

(Choice.2286
	Help:	"Активизирует AVExtAdvEditor.ToolMeasureSelectedEnd"
	Label:	"&4 AVExtAdvEditor.ToolMeasureSelectedEnd"
	Click:	"WindowActivate"
	Shortcut:	"Keys.None"
)

(Choice.2287
	Help:	"Активизирует AVExtAdvEditor.ToolMeasureSelectedUpd"
	Label:	"&5 AVExtAdvEditor.ToolMeasureSelectedUpd"
	Click:	"WindowActivate"
	Shortcut:	"Keys.None"
)

(Choice.2288
	Help:	"Активизирует View1"
	Label:	"&6 View1"
	Click:	"WindowActivate"
	Shortcut:	"Keys.None"
)

(PMenu.2289
	InternalName:	"Help"
	Child:	2290
	Child:	2291
	Child:	2292
	Child:	2293
	Label:	"&Help"
)

(Choice.2290
	Help:	"Displays the dialog for browsing and searching ArcView's help system"
	HelpTopic:	"Help_on_Help_Topics"
	Label:	"Help &Topics..."
	Click:	"Project.HelpTopics"
	Shortcut:	"Keys.None"
)

(Choice.2291
	Help:	"Provides instructions for how to obtain help from ArcView"
	HelpTopic:	"Help_on_How_to_Get_Help"
	Label:	"&How to Get Help..."
	Click:	"Project.HelpHelp"
	Shortcut:	"Keys.None"
)

(Space.2292
)

(Choice.2293
	Help:	"Provides information about ArcView"
	HelpTopic:	"About"
	Label:	"&About ArcView..."
	Click:	"Project.About"
	Shortcut:	"Keys.None"
)

(ButnBar.2294
	Child:	2295
	Child:	2297
	Child:	2298
	Child:	2300
	Child:	2301
	Child:	2303
	Child:	2304
	Child:	2306
	Child:	2308
	Child:	2310
	Child:	2311
	Child:	2313
	Child:	2315
	Child:	2317
	Child:	2318
	Child:	2320
	Child:	2322
	Child:	2324
	Child:	2326
	Child:	2328
	Child:	2330
	Child:	2331
	Child:	2333
	Child:	2335
	Child:	2336
)

(Butn.2295
	Help:	"Save Project//Saves the current project"
	HelpTopic:	"Save_Project"
	Icon:	2296
	Click:	"Project.Save"
)

(AVIcon.2296
	Name:	"Save"
	Res:	"Icons.Save"

)

(Space.2297
)

(Butn.2298
	Help:	"Add Theme//Inserts themes into the view"
	HelpTopic:	"Add_Theme"
	Icon:	2299
	Click:	"View.Add"
)

(AVIcon.2299
	Name:	"AddTheme"
	Res:	"Icons.AddTheme"

)

(Space.2300
)

(Butn.2301
	Disabled:	1
	Help:	"Advanced Editor//Advanced Editor"
	Update:	"AVExtAdvEditor.ViewStartUpd"
	Icon:	2302
	Click:	"AVExtAdvEditor.ViewStart"
)

(AVIcon.2302
	Name:	"advedittoolc.gif"
	Data:	4e442049 6d616765 00010011 00110000 
	Data:	01210404 04040404 04040404 04040404 
	Data:	04040402 02020404 04040404 03040404 
	Data:	04010101 04040404 04040404 04040404 
	Data:	04040404 04040404 03030304 04040404 
	Data:	04040404 04040404 04040404 04040404 
	Data:	04040404 04040404 04040202 04040404 
	Data:	04040404 04040404 04030404 04040403 
	Data:	04040404 04040101 01040404 04040404 
	Data:	04040403 04040403 04040404 04040404 
	Data:	04040404 04040202 04040404 04040202 
	Data:	04040404 04040404 04040404 04040404 
	Data:	04040404 04040404 04040404 04040403 
	Data:	04040403 04040404 04040404 04040202 
	Data:	02040404 04040304 04040404 01010102 
	Data:	02020404 04040404 03040404 04040304 
	Data:	04040404 04040404 04040403 03030404 
	Data:	04040404 04040404 04040404 04020204 
	Data:	04040404 04040404 04040404 04040404 
	Data:	04040400 00002000 ffffff00 ff000000 
	Data:	00820000 00000002 c0c0c000 00000000 
	Data:	00000000 00000000 02000800 0a002000 
	Data:	02000000 00000000 000000
)

(Space.2303
)

(Butn.2304
	Disabled:	1
	Help:	"Theme Properties//Displays the dialog box to edit properties of the active theme"
	HelpTopic:	"Theme_Properties"
	Update:	"View.ActiveThemesUpdate"
	Icon:	2305
	Click:	"View.ThemeProperties"
)

(AVIcon.2305
	Name:	"Props"
	Res:	"Icons.Props"

)

(Butn.2306
	Disabled:	1
	Help:	"Edit Legend//Displays the legends of the active themes"
	HelpTopic:	"Edit_Legend"
	Update:	"View.ActiveThemesUpdate"
	Icon:	2307
	Click:	"View.EditLegendClick"
)

(AVIcon.2307
	Name:	"Legend"
	Res:	"Icons.Legend"

)

(Butn.2308
	Disabled:	1
	Help:	"Open Theme Table//Opens the tables of the active themes"
	HelpTopic:	"Open_Theme_Table"
	Update:	"View.TabularThemesUpdate"
	Icon:	2309
	Click:	"View.ShowTable"
)

(AVIcon.2309
	Name:	"Table"
	Res:	"Icons.Table"

)

(Space.2310
)

(Butn.2311
	Disabled:	1
	Help:	"Find//Finds features in the active themes using the text you enter"
	HelpTopic:	"Find"
	Update:	"View.TabularThemesUpdate"
	Icon:	2312
	Click:	"View.Find"
)

(AVIcon.2312
	Name:	"Find"
	Res:	"Icons.Find"

)

(Butn.2313
	Disabled:	1
	Help:	"Locate Address//Locates an address in the active, matchable theme"
	HelpTopic:	"Locate_Address"
	Update:	"View.LocateUpdate"
	Icon:	2314
	Click:	"View.Locate"
)

(AVIcon.2314
	Name:	"AddMatch"
	Res:	"Icons.AddMatch"

)

(Butn.2315
	Disabled:	1
	Help:	"Query Builder//Displays the Query Builder to select features with a logical expression"
	HelpTopic:	"Query_Builder"
	Update:	"View.AttributeThemesUpdate"
	Icon:	2316
	Click:	"View.Query"
)

(AVIcon.2316
	Name:	"QueryBuilder"
	Res:	"Icons.QueryBuilder"

)

(Space.2317
)

(Butn.2318
	Disabled:	1
	Help:	"Zoom to Full Extent//Zooms to the extent of all themes"
	HelpTopic:	"Zoom_to_Full_Extent"
	Update:	"View.HasDataUpdate"
	Icon:	2319
	Click:	"View.ZoomFullExtent"
)

(AVIcon.2319
	Name:	"ZoomView"
	Res:	"Icons.ZoomView"

)

(Butn.2320
	Disabled:	1
	Help:	"Zoom to Active Theme(s)//Zooms to the extent of active themes"
	HelpTopic:	"Zoom_to_Active_Theme"
	Update:	"View.ActiveThemesUpdate"
	Icon:	2321
	Click:	"View.ZoomToThemes"
)

(AVIcon.2321
	Name:	"ZoomTheme"
	Res:	"Icons.ZoomTheme"

)

(Butn.2322
	Disabled:	1
	Help:	"Zoom to Selected//Zooms to the extent of the selected features"
	HelpTopic:	"Zoom_to_Selected"
	Update:	"View.SelectableThemesUpdate"
	Icon:	2323
	Click:	"View.ZoomToSelected"
)

(AVIcon.2323
	Name:	"ZoomToSelected"
	Res:	"Icons.ZoomToSelected"

)

(Butn.2324
	Disabled:	1
	Help:	"Zoom In//Zooms in on the center of the display"
	HelpTopic:	"Zoom_In"
	Update:	"View.HasDataUpdate"
	Icon:	2325
	Click:	"View.ZoomIn"
)

(AVIcon.2325
	Name:	"ZoomIn"
	Res:	"Icons.ZoomIn"

)

(Butn.2326
	Disabled:	1
	Help:	"Zoom Out//Zooms out from the center of the display"
	HelpTopic:	"Zoom_Out"
	Update:	"View.HasDataUpdate"
	Icon:	2327
	Click:	"View.ZoomOut"
)

(AVIcon.2327
	Name:	"ZoomOut"
	Res:	"Icons.ZoomOut"

)

(Butn.2328
	Disabled:	1
	Help:	"Zoom to Previous Extent//Goes back to the previous extent you were viewing"
	HelpTopic:	"Zoom_Previous"
	Update:	"View.UndoZoomUpdate"
	Icon:	2329
	Click:	"View.UndoZoom"
)

(AVIcon.2329
	Name:	"ZoomPrevious"
	Res:	"Icons.ZoomPrevious"

)

(Space.2330
)

(Butn.2331
	Disabled:	1
	Help:	"Select Features Using Graphic//Selects features in active themes using selected graphics"
	HelpTopic:	"Select_Features_Using_Graphic"
	Update:	"View.SpatialSelectUpdate"
	Icon:	2332
	Click:	"View.SpatialSelect"
)

(AVIcon.2332
	Name:	"SpatialSelect"
	Res:	"Icons.SpatialSelect"

)

(Butn.2333
	Disabled:	1
	Help:	"Clear Selected Features//Unselects the selected features of all active themes"
	HelpTopic:	"Clear_Selected_Features"
	Update:	"View.AttributeThemesUpdate"
	Icon:	2334
	Click:	"View.ClearSelect"
)

(AVIcon.2334
	Name:	"SelectNone"
	Res:	"Icons.SelectNone"

)

(Space.2335
)

(Butn.2336
	Help:	"Help//Gets help about the next button, tool, or menu choice you click"
	HelpTopic:	"Help_button"
	Icon:	2337
	Click:	"Help.Tool"
)

(AVIcon.2337
	Name:	"HelpTool"
	Res:	"Icons.HelpTool"

)

(PopupSet.2338
	Child:	2339
)

(Popup.2339
	Child:	2340
	Child:	2341
	Child:	2342
	Child:	2343
	Child:	2344
	Child:	2345
	Child:	2346
	Child:	2347
	Child:	2348
	Child:	2349
	Child:	2350
	Child:	2351
	Child:	2352
	Child:	2353
	Child:	2354
	Child:	2355
	Child:	2356
	Child:	2357
	Child:	2358
	Child:	2359
	Label:	"Menu"
)

(Choice.2340
	Disabled:	1
	Invisible:	1
	Help:	"Deletes the last entered point on the line or polygon being drawn"
	Update:	"View.DelLastPointUpdate"
	Label:	"Delete Last Point"
	Click:	"View.DeleteLastPoint"
	Shortcut:	"Keys.None"
)

(Choice.2341
	Disabled:	1
	Help:	"Отменяет последнее редактирование объектов темы"
	HelpTopic:	"Undo_Feature_Edit_on_a_view"
	Update:	"View.UndoEditUpdate"
	Label:	"Отменить изменения объекта"
	Click:	"View.UndoEdit"
	Shortcut:	"Keys.None"
)

(Choice.2342
	Disabled:	1
	Help:	"Redo the last edit operation on a theme that was undone"
	Update:	"View.RedoEditUpdate"
	Label:	"Redo Feature Edit"
	Click:	"View.RedoEdit"
	Shortcut:	"Keys.None"
)

(Space.2343
)

(Choice.2344
	Help:	"Включает общее замыкание"
	Update:	"View.ToggleGeneralSnapUpdate"
	Label:	"Включает общее замыкание"
	Click:	"View.ToggleGeneralSnap"
	Shortcut:	"Keys.None"
)

(Choice.2345
	Help:	"Включает интерактивное замыкание"
	Update:	"View.ToggleInteractiveSnapUpdate"
	Label:	"Включить интерактивное замыкание"
	Click:	"View.ToggleInteractiveSnap"
	Shortcut:	"Keys.None"
)

(Choice.2346
	Help:	"Выключает курсор допуска замыкания"
	Update:	"View.ToggleTolCursorUpdate"
	Label:	"Скрыть курсор допуска замыкания"
	Click:	"View.ToggleTolCursor"
	Shortcut:	"Keys.None"
)

(Space.2347
)

(Choice.2348
	Disabled:	1
	Invisible:	1
	Help:	"Snaps the next entered point to the nearest vertex within the user tolerance"
	Update:	"View.InteractiveSnapUpdate"
	Label:	"Snap to Vertex"
	Click:	"View.SnapToVertex"
	Shortcut:	"Keys.None"
)

(Choice.2349
	Disabled:	1
	Invisible:	1
	Help:	"Snaps the next entered point to the nearest line segment"
	Update:	"View.InteractiveSnapUpdate"
	Label:	"Snap to Boundary"
	Click:	"View.SnapToBoundary"
	Shortcut:	"Keys.None"
)

(Choice.2350
	Disabled:	1
	Invisible:	1
	Help:	"Snaps the next entered point to the nearest node common to two or more features"
	Update:	"View.InteractiveSnapUpdate"
	Label:	"Snap to Intersection"
	Click:	"View.SnapToIntersection"
	Shortcut:	"Keys.None"
)

(Choice.2351
	Disabled:	1
	Invisible:	1
	Help:	"Snaps the next entered point to the nearest endpoint of an existing line"
	Update:	"View.SnapToEndPointUpdate"
	Label:	"Snap to Endpoint"
	Click:	"View.SnapToEndPoint"
	Shortcut:	"Keys.None"
)

(Space.2352
)

(Choice.2353
	Help:	"Unselects the selected features in all active themes"
	Update:	"View.AttributeThemesUpdate"
	Label:	"Clear Selection"
	Click:	"View.ClearSelect"
	Shortcut:	"Keys.None"
)

(Choice.2354
	Help:	"Zooms in at point where you click to bring up popup menu"
	Update:	"View.HasDataUpdate"
	Label:	"Zoom In"
	Click:	"View.PopupZoomIn"
	Shortcut:	"Keys.None"
)

(Choice.2355
	Help:	"Zooms out from point where you click to bring up popup menu"
	Update:	"View.HasDataUpdate"
	Label:	"Zoom Out"
	Click:	"View.PopupZoomOut"
	Shortcut:	"Keys.None"
)

(Choice.2356
	Help:	"Zooms to the extent of the selected features"
	Update:	"View.SelectableThemesUpdate"
	Label:	"Zoom to Selected"
	Click:	"View.ZoomToSelected"
	Shortcut:	"Keys.None"
)

(Choice.2357
	Help:	"Centers display on point where you click to bring up popup"
	Update:	"View.HasDataUpdate"
	Label:	"Pan"
	Click:	"View.PopupPan"
	Shortcut:	"Keys.None"
)

(Space.2358
)

(Choice.2359
	Help:	"Opens the shape properties window for editing vertex locations"
	Update:	"ShapeWin.PopUp Update"
	Label:	"Shape Properties"
	Click:	"ShapeWin.PopUp Open"
	Shortcut:	"Keys.None"
)

(ToolBar.2360
	Child:	2361
	Child:	2363
	Child:	2365
	Child:	2367
	Child:	2369
	Child:	2371
	Child:	2373
	Child:	2375
	Child:	2377
	Child:	2379
	Child:	2381
	Child:	2400
	Child:	2413
	Child:	2432
)

(Tool.2361
	Disabled:	1
	Help:	"Identify//Provides information about a feature"
	HelpTopic:	"Identify_tool"
	Update:	"View.IdentifyUpdate"
	Icon:	2362
	Cursor:	"Cursors.ID"
	Apply:	"View.Identify"
)

(AVIcon.2362
	Name:	"ID"
	Res:	"Icons.ID"

)

(Tool.2363
	Disabled:	1
	Help:	"Pointer//Selects, moves, and resizes graphics"
	HelpTopic:	"Pointer_tool"
	Update:	"View.HasDataUpdate"
	Icon:	2364
	Cursor:	"Cursors.Select"
	Apply:	"View.Select"
	Click:	"View.SelectTool"
)

(AVIcon.2364
	Name:	"Select"
	Res:	"Icons.Select"

)

(Tool.2365
	Disabled:	1
	Help:	"Vertex Edit//Adds, moves, and deletes vertices of features and graphics"
	HelpTopic:	"Vertex_Edit_tool"
	Update:	"View.SelectToEditUpdate"
	Icon:	2366
	Cursor:	"Cursors.SelectEdit"
	Apply:	"View.SelectToEdit"
	Click:	"View.SelectToEditTool"
)

(AVIcon.2366
	Name:	"SelectEdit"
	Res:	"Icons.SelectEdit"

)

(Tool.2367
	Disabled:	1
	Help:	"Select Feature//Selects features in the active themes by pointing or dragging"
	HelpTopic:	"Select_Feature_tool"
	Update:	"View.SelectableThemesUpdate"
	Icon:	2368
	Cursor:	"Cursors.Default"
	Apply:	"View.SelectPoint"
)

(AVIcon.2368
	Name:	"FeatureSelect"
	Res:	"Icons.FeatureSelect"

)

(Tool.2369
	Disabled:	1
	Help:	"Zoom In//Zooms in at a point you click or zooms in on a rectangle you drag"
	HelpTopic:	"Zoom_In_tool"
	Update:	"View.HasDataUpdate"
	Icon:	2370
	Cursor:	"Cursors.ZoomIn"
	Apply:	"View.ZoomInTool"
)

(AVIcon.2370
	Name:	"ZoomInTool"
	Res:	"Icons.ZoomInTool"

)

(Tool.2371
	Disabled:	1
	Help:	"Zoom Out//Zooms out from a point you click or zooms out to include a rectangle you drag"
	HelpTopic:	"Zoom_Out_tool"
	Update:	"View.HasDataUpdate"
	Icon:	2372
	Cursor:	"Cursors.ZoomOut"
	Apply:	"View.ZoomOutTool"
)

(AVIcon.2372
	Name:	"ZoomOutTool"
	Res:	"Icons.ZoomOutTool"

)

(Tool.2373
	Disabled:	1
	Help:	"Pan//Drags the display in the direction you move the cursor"
	HelpTopic:	"Pan_tool"
	Update:	"View.HasDataUpdate"
	Icon:	2374
	Cursor:	"Cursors.Pan"
	Apply:	"View.Pan"
)

(AVIcon.2374
	Name:	"Pan"
	Res:	"Icons.Pan"

)

(Tool.2375
	Disabled:	1
	Help:	"Measure//Measures distance"
	HelpTopic:	"Measure_tool"
	Update:	"View.HasDataUpdate"
	Icon:	2376
	Cursor:	"Cursors.Measure"
	Apply:	"View.Measure"
)

(AVIcon.2376
	Name:	"Measure"
	Res:	"Icons.Measure"

)

(Tool.2377
	Disabled:	1
	Help:	"Hot Link//Follows a hot link in the active themes"
	HelpTopic:	"Hot_Link_tool"
	Update:	"View.HotLinkUpdate"
	Icon:	2378
	Cursor:	"Cursors.Media"
	Apply:	"View.HotLink"
)

(AVIcon.2378
	Name:	"Media"
	Res:	"Icons.Media"

)

(Tool.2379
	Disabled:	1
	Help:	"Area of Interest//Sets the view's Area Of Interest for library-based themes"
	HelpTopic:	"Area_Of_Interest_tool"
	Update:	"View.AOIToolUpdate"
	Icon:	2380
	Cursor:	"Cursors.Default"
	Apply:	"View.AOITool"
)

(AVIcon.2380
	Name:	"AOI"
	Res:	"Icons.AOI"

)

(ToolMenu.2381
	Disabled:	1
	Help:	"Label//Labels a feature in the active theme with data from its table"
	HelpTopic:	"Label_Tool"
	Update:	"View.LabelToolUpdate"
	Icon:	2382
	Cursor:	"Cursors.Tag"
	Apply:	"View.LabelTool"
	Child:	2383
	Child:	2384
	Child:	2386
	Child:	2388
	Child:	2390
	Child:	2392
	Child:	2394
	Child:	2396
	Child:	2398
)

(AVIcon.2382
	Name:	"Tag"
	Res:	"Icons.Tag"

)

(Tool.2383
	Disabled:	1
	Help:	"Label//Labels a feature in the active theme with data from its table"
	HelpTopic:	"Label_Tool"
	Update:	"View.LabelToolUpdate"
	Icon:	2382
	Cursor:	"Cursors.Tag"
	Apply:	"View.LabelTool"
)

(Tool.2384
	Disabled:	1
	Help:	"Callout Label//Click on a feature and drag in the direction you want the label to appear"
	HelpTopic:	"Label_Tool"
	Update:	"View.CalloutUpdate"
	Icon:	2385
	Cursor:	"Cursors.Tag"
	Apply:	"View.CalloutLabelTool"
)

(AVIcon.2385
	Name:	"CallOutLabel1"
	Res:	"Icons.CallOutLabel1"

)

(Tool.2386
	Disabled:	1
	Help:	"Bullet Leader Label//Click on a feature and drag in the direction you want the label to appear"
	HelpTopic:	"Label_Tool"
	Update:	"View.CalloutUpdate"
	Icon:	2387
	Cursor:	"Cursors.Tag"
	Apply:	"View.BulletLeaderLabelTool"
)

(AVIcon.2387
	Name:	"CallOutLabel2"
	Res:	"Icons.CallOutLabel2"

)

(Tool.2388
	Disabled:	1
	Help:	"Banner Label//Click on a feature you want to label"
	HelpTopic:	"Label_Tool"
	Update:	"View.CalloutUpdate"
	Icon:	2389
	Cursor:	"Cursors.Tag"
	Apply:	"View.ShadowBoxLabelTool"
)

(AVIcon.2389
	Name:	"CallOutLabel3"
	Res:	"Icons.CallOutLabel3"

)

(Tool.2390
	Disabled:	1
	Help:	"U.S. Interstate//Click where you want to place a highway shield"
	HelpTopic:	"Label_Tool"
	Update:	"View.CalloutUpdate"
	Icon:	2391
	Cursor:	"Cursors.Tag"
	Apply:	"View.Highway1 Apply"
)

(AVIcon.2391
	Name:	"BW US Interstate"
	Res:	"Icons.BW US Interstate"

)

(Tool.2392
	Disabled:	1
	Help:	"U.S. Route//Click where you want to place a highway shield"
	HelpTopic:	"Label_Tool"
	Update:	"View.CalloutUpdate"
	Icon:	2393
	Cursor:	"Cursors.Tag"
	Apply:	"View.Highway2 Apply"
)

(AVIcon.2393
	Name:	"USRoute"
	Res:	"Icons.USRoute"

)

(Tool.2394
	Disabled:	1
	Help:	"Generic State Hwy//Click where you want to place a highway shield"
	HelpTopic:	"Label_Tool"
	Update:	"View.CalloutUpdate"
	Icon:	2395
	Cursor:	"Cursors.Tag"
	Apply:	"View.Highway3 Apply"
)

(AVIcon.2395
	Name:	"GenericStateHighway"
	Res:	"Icons.GenericStateHighway"

)

(Tool.2396
	Disabled:	1
	Help:	"Generic Square Hwy//Click where you want to place a highway shield"
	HelpTopic:	"Label_Tool"
	Update:	"View.CalloutUpdate"
	Icon:	2397
	Cursor:	"Cursors.Tag"
	Apply:	"View.Highway4 Apply"
)

(AVIcon.2397
	Name:	"GenericHighway1"
	Res:	"Icons.GenericHighway1"

)

(Tool.2398
	Disabled:	1
	Help:	"Generic Oval Hwy//Click where you want to place a highway shield"
	Update:	"View.CalloutUpdate"
	Icon:	2399
	Cursor:	"Cursors.Tag"
	Apply:	"View.Highway5 Apply"
)

(AVIcon.2399
	Name:	"GenericHighway2"
	Res:	"Icons.GenericHighway2"

)

(ToolMenu.2400
	Help:	"Text//Creates text on the display"
	HelpTopic:	"Text_tool"
	Update:	"View.TextToolUpdate"
	Icon:	2401
	Cursor:	"Cursors.Text"
	Apply:	"View.TextTool"
	Click:	"SymWin.DisplayFontPanel"
	Child:	2402
	Child:	2403
	Child:	2405
	Child:	2407
	Child:	2409
	Child:	2411
)

(AVIcon.2401
	Name:	"Text"
	Res:	"Icons.Text"

)

(Tool.2402
	Help:	"Text//Creates text on the display"
	HelpTopic:	"Text_tool"
	Update:	"View.TextToolUpdate"
	Icon:	2401
	Cursor:	"Cursors.Text"
	Apply:	"View.TextTool"
	Click:	"SymWin.DisplayFontPanel"
)

(Tool.2403
	Help:	"Callout Text//Click and drag to where you want your text to appear, then enter the text"
	HelpTopic:	"Text_tool"
	Update:	"View.TextToolUpdate"
	Icon:	2404
	Cursor:	"Cursors.Bullseye"
	Apply:	"View.CalloutTextTool"
)

(AVIcon.2404
	Name:	"CallOutText1"
	Res:	"Icons.CallOutText1"

)

(Tool.2405
	Help:	"Bullet Leader Text//Click and drag to where you want your text to appear, then enter the text"
	HelpTopic:	"Text_tool"
	Update:	"View.TextToolUpdate"
	Icon:	2406
	Cursor:	"Cursors.Bullseye"
	Apply:	"View.BulletLeaderTextTool"
)

(AVIcon.2406
	Name:	"CallOutText2"
	Res:	"Icons.CallOutText2"

)

(Tool.2407
	Help:	"Banner Text//Click where you want your label to appear and enter your text"
	HelpTopic:	"Text_tool"
	Update:	"View.TextToolUpdate"
	Icon:	2408
	Cursor:	"Cursors.Bullseye"
	Apply:	"View.ShadowBoxTextTool"
)

(AVIcon.2408
	Name:	"CallOutText3"
	Res:	"Icons.CallOutText3"

)

(Tool.2409
	Help:	"Drop-Shadow Text//Click where you want your text to appear and enter your text"
	HelpTopic:	"Text_tool"
	Update:	"View.TextToolUpdate"
	Icon:	2410
	Cursor:	"Cursors.Target"
	Apply:	"View.CreateDropShadowText"
)

(AVIcon.2410
	Name:	"DropShadowText"
	Res:	"Icons.DropShadowText"

)

(Tool.2411
	Help:	"Spline Text//Adds text that is aligned to a splined baseline"
	HelpTopic:	"Text_tool"
	Update:	"View.TextToolUpdate"
	Icon:	2412
	Cursor:	"Cursors.Bullseye"
	Apply:	"View.SplineText"
)

(AVIcon.2412
	Name:	"TextAligned"
	Res:	"Icons.TextAligned"

)

(ToolMenu.2413
	Help:	"Draw Point//Creates a point on the display"
	HelpTopic:	"Draw_tool"
	Update:	"View.PointToolUpdate"
	Icon:	2414
	Cursor:	"Cursors.CrossHair"
	Apply:	"View.PointTool"
	Click:	"SymWin.DisplayMarkerPanel"
	Child:	2415
	Child:	2416
	Child:	2418
	Child:	2420
	Child:	2422
	Child:	2424
	Child:	2426
	Child:	2428
	Child:	2430
)

(AVIcon.2414
	Name:	"Point"
	Res:	"Icons.Point"

)

(Tool.2415
	Help:	"Draw Point//Creates a point on the display"
	HelpTopic:	"Draw_tool"
	Update:	"View.PointToolUpdate"
	Icon:	2414
	Cursor:	"Cursors.CrossHair"
	Apply:	"View.PointTool"
	Click:	"SymWin.DisplayMarkerPanel"
)

(Tool.2416
	Help:	"Draw Straight Line//Creates a line on the display"
	HelpTopic:	"Draw_tool"
	Update:	"View.GraphicToolUpdate"
	Icon:	2417
	Cursor:	"Cursors.CrossHair"
	Apply:	"View.LineTool"
	Click:	"SymWin.DisplayPenPanel"
)

(AVIcon.2417
	Name:	"SelectLine"
	Res:	"Icons.SelectLine"

)

(Tool.2418
	Help:	"Draw Line//Creates a line with two or more points on the display"
	HelpTopic:	"Draw_tool"
	Update:	"View.PolyLineToolUpdate"
	Icon:	2419
	Cursor:	"Cursors.CrossHair"
	Apply:	"View.PolyLineTool"
	Click:	"SymWin.DisplayPenPanel"
)

(AVIcon.2419
	Name:	"Lines"
	Res:	"Icons.Lines"

)

(Tool.2420
	Help:	"Draw Rectangle//Creates a rectangle on the display"
	HelpTopic:	"Draw_tool"
	Update:	"View.PolyToolUpdate"
	Icon:	2421
	Cursor:	"Cursors.CrossHair"
	Apply:	"View.RectTool"
	Click:	"SymWin.DisplayFillPanel"
)

(AVIcon.2421
	Name:	"Rect"
	Res:	"Icons.Rect"

)

(Tool.2422
	Help:	"Draw Circle//Creates a circle on the display"
	HelpTopic:	"Draw_tool"
	Update:	"View.PolyToolUpdate"
	Icon:	2423
	Cursor:	"Cursors.CrossHair"
	Apply:	"View.CircleTool"
	Click:	"SymWin.DisplayFillPanel"
)

(AVIcon.2423
	Name:	"Disk"
	Res:	"Icons.Disk"

)

(Tool.2424
	Help:	"Draw Polygon//Creates a polygon on the display"
	HelpTopic:	"Draw_tool"
	Update:	"View.PolyToolUpdate"
	Icon:	2425
	Cursor:	"Cursors.CrossHair"
	Apply:	"View.PolyTool"
	Click:	"SymWin.DisplayFillPanel"
)

(AVIcon.2425
	Name:	"Poly"
	Res:	"Icons.Poly"

)

(Tool.2426
	Disabled:	1
	Help:	"Draw Line to Split Feature//Creates a line to split line features"
	HelpTopic:	"Draw_tool"
	Update:	"View.SplitLineToolUpdate"
	Icon:	2427
	Cursor:	"Cursors.CrossHair"
	Apply:	"View.SplitTool"
)

(AVIcon.2427
	Name:	"SplitLine"
	Res:	"Icons.SplitLine"

)

(Tool.2428
	Disabled:	1
	Help:	"Draw Line to Split Polygon//Creates a line to split polygon features"
	HelpTopic:	"Draw_tool"
	Update:	"View.SplitPolyToolUpdate"
	Icon:	2429
	Cursor:	"Cursors.CrossHair"
	Apply:	"View.SplitTool"
)

(AVIcon.2429
	Name:	"SplitPoly"
	Res:	"Icons.SplitPoly"

)

(Tool.2430
	Disabled:	1
	Help:	"Draw Line to Append Polygon//Appends a new polygon adjacent to other polygons"
	HelpTopic:	"Draw_tool"
	Update:	"View.AutoCompleteUpdate"
	Icon:	2431
	Cursor:	"Cursors.CrossHair"
	Apply:	"View.AutoCompleteTool"
)

(AVIcon.2431
	Name:	"AutoComplete"
	Res:	"Icons.AutoComplete"

)

(ToolMenu.2432
	Disabled:	1
	Invisible:	1
	Help:	"Snap//Sets the general snapping tolerance for the editable theme"
	HelpTopic:	"Snap_tools"
	Update:	"View.SnapToolUpdate"
	Icon:	2433
	Cursor:	"Cursors.Default"
	Apply:	"View.SnapTool"
	Child:	2434
	Child:	2435
)

(AVIcon.2433
	Name:	"SnapTool"
	Res:	"Icons.SnapTool"

)

(Tool.2434
	Disabled:	1
	Invisible:	1
	Help:	"Snap//Sets the general snapping tolerance for the editable theme"
	HelpTopic:	"Snap_tools"
	Update:	"View.SnapToolUpdate"
	Icon:	2433
	Cursor:	"Cursors.Default"
	Apply:	"View.SnapTool"
)

(Tool.2435
	Disabled:	1
	Invisible:	1
	Help:	"Snap//Sets the interactive snapping tolerance for the editable theme"
	HelpTopic:	"Snap_tools"
	Update:	"View.InteractiveSnapToolUpdate"
	Icon:	2436
	Cursor:	"Cursors.Default"
	Apply:	"View.InteractiveSnapTool"
)

(AVIcon.2436
	Name:	"SnapFeatureTool"
	Res:	"Icons.SnapFeatureTool"

)

(AVIcon.2437
	Name:	"Icon"
	Res:	"View.Icon"

)

(DocGUI.2564
	Name:	"Layout"
	Type:	"Layout"
	Modified:	1
	MenuBar:	2565
	ButnBar:	2640
	Popups:	2683
	ToolBar:	2695
	NewScript:	"Layout.New"
	OpenScript:	"Doc.Open"
	ActionScript:	"Doc.Action"
	NewUpdateScript:	"Doc.NewUpdate"
	OpenUpdateScript:	"Doc.OpenUpdate"
	ActionUpdateScript:	"Doc.ActionUpdate"
	Title:	"Layouts"
	Icon:	2747
)

(MenuBar.2565
	Child:	2566
	Child:	2582
	Child:	2591
	Child:	2609
	Child:	2624
	Child:	2635
)

(PMenu.2566
	InternalName:	"File"
	Child:	2567
	Child:	2568
	Child:	2569
	Child:	2570
	Child:	2571
	Child:	2572
	Child:	2573
	Child:	2574
	Child:	2575
	Child:	2576
	Child:	2577
	Child:	2578
	Child:	2579
	Child:	2580
	Child:	2581
	Label:	"&File"
)

(Choice.2567
	Help:	"Closes the active component"
	HelpTopic:	"Close"
	Label:	"&Close"
	Click:	"Project.CloseDoc"
	Shortcut:	"Keys.None"
)

(Choice.2568
	Help:	"Closes all components"
	HelpTopic:	"Close_All"
	Label:	"Close &All"
	Click:	"Project.CloseAll"
	Shortcut:	"Keys.None"
)

(Space.2569
)

(Choice.2570
	Help:	"Saves the current project"
	HelpTopic:	"Save_Project"
	Label:	"&Save Project"
	Click:	"Project.Save"
	Shortcut:	"Keys.Ctrl+S"
)

(Choice.2571
	Help:	"Saves the current project with a new name"
	HelpTopic:	"Save_Project_As"
	Label:	"Save Project As..."
	Click:	"Project.SaveAs"
	Shortcut:	"Keys.None"
)

(Space.2572
)

(Choice.2573
	Help:	"Displays the Extensions Dialog"
	HelpTopic:	"Extensions"
	Label:	"Extensions..."
	Click:	"Appl.GetExtensionWin"
	Shortcut:	"Keys.None"
)

(Space.2574
)

(Choice.2575
	Help:	"Prints the layout"
	HelpTopic:	"Print"
	Label:	"&Print..."
	Click:	"Doc.Print"
	Shortcut:	"Keys.None"
)

(Choice.2576
	Help:	"Edits the printer and the printing options"
	HelpTopic:	"Print_Setup"
	Label:	"P&rint Setup..."
	Click:	"Project.PrintSetup"
	Shortcut:	"Keys.None"
)

(Choice.2577
	Help:	"Exports the Layout to a graphics file"
	HelpTopic:	"Export"
	Label:	"&Export..."
	Click:	"Layout.Export"
	Shortcut:	"Keys.None"
)

(Space.2578
)

(Choice.2579
	Help:	"Display the dialog box of the code page profile"
	HelpTopic:	"Code_Page_Profile"
	Label:	"C&ode Page Profile..."
	Click:	"ShowCodepage"
	Shortcut:	"Keys.None"
)

(Space.2580
)

(Choice.2581
	Help:	"Exits ArcView"
	HelpTopic:	"Exit"
	Label:	"E&xit"
	Click:	"Project.Exit"
	Shortcut:	"Keys.None"
)

(PMenu.2582
	InternalName:	"Edit"
	Child:	2583
	Child:	2584
	Child:	2585
	Child:	2586
	Child:	2587
	Child:	2588
	Child:	2589
	Child:	2590
	Label:	"&Edit"
)

(Choice.2583
	Disabled:	1
	Help:	"Undo last edit"
	HelpTopic:	"Undo"
	Update:	"Layout.UndoUpdate"
	Label:	"&Undo"
	Click:	"Layout.Undo"
	Shortcut:	"Keys.Ctrl+Z"
)

(Space.2584
)

(Choice.2585
	Disabled:	1
	Help:	"Copies selected graphics to the clipboard and removes them from the layout"
	HelpTopic:	"Cut"
	Update:	"Graphic.HasSelectionUpdate"
	Label:	"Cu&t"
	Click:	"Layout.Cut"
	Shortcut:	"Keys.Ctrl+X"
)

(Choice.2586
	Disabled:	1
	Help:	"Copies the selected shapes or graphics to the clipboard"
	HelpTopic:	"Copy"
	Update:	"Graphic.HasSelectionUpdate"
	Label:	"&Copy"
	Click:	"Layout.Copy"
	Shortcut:	"Keys.Ctrl+C"
)

(Choice.2587
	Disabled:	1
	Help:	"Inserts the contents of the clipboard"
	HelpTopic:	"Paste"
	Update:	"Layout.PasteUpdate"
	Label:	"&Paste"
	Click:	"Layout.Paste"
	Shortcut:	"Keys.Ctrl+V"
)

(Choice.2588
	Disabled:	1
	Help:	"Removes the selected frames or graphics from the layout"
	HelpTopic:	"Delete"
	Update:	"Graphic.HasSelectionUpdate"
	Label:	"&Delete"
	Click:	"Layout.Clear"
	Shortcut:	"Keys.Del"
)

(Space.2589
)

(Choice.2590
	Disabled:	1
	Help:	"Selects all graphics in the layout"
	HelpTopic:	"Select_All"
	Update:	"Layout.HasGraphicsUpdate"
	Label:	"Select &All"
	Click:	"Graphic.SelectAll"
	Shortcut:	"Keys.None"
)

(PMenu.2591
	InternalName:	"Layout"
	Child:	2592
	Child:	2593
	Child:	2594
	Child:	2595
	Child:	2596
	Child:	2597
	Child:	2598
	Child:	2599
	Child:	2600
	Child:	2601
	Child:	2602
	Child:	2603
	Child:	2604
	Child:	2605
	Child:	2606
	Child:	2607
	Child:	2608
	Label:	"&Layout"
)

(Choice.2592
	Help:	"Displays the dialog box to edit properties of the layout"
	HelpTopic:	"Layout_Properties"
	Label:	"&Properties..."
	Click:	"Layout.Properties"
	Shortcut:	"Keys.None"
)

(Choice.2593
	Help:	"Displays the page setup dialog"
	HelpTopic:	"Page_Setup"
	Label:	"Page Se&tup..."
	Click:	"Layout.PageSetup"
	Shortcut:	"Keys.None"
)

(Space.2594
)

(Choice.2595
	Help:	"Zooms to the extent of the layout's page"
	HelpTopic:	"Zoom_to_Page"
	Label:	"&Zoom to Page"
	Click:	"Layout.ZoomPage"
	Shortcut:	"Keys.None"
)

(Choice.2596
	Help:	"Zooms to display the actual size of the layout (1:1)"
	HelpTopic:	"Zoom_to_Actual_Size"
	Label:	"Zoom to &Actual"
	Click:	"Layout.ZoomActual"
	Shortcut:	"Keys.None"
)

(Choice.2597
	Disabled:	1
	Help:	"Zooms to the extent of the selected layout graphics"
	HelpTopic:	"Zoom_to_Selected"
	Update:	"Graphic.HasSelectionUpdate"
	Label:	"Zoom to &Selected"
	Click:	"Layout.ZoomSelected"
	Shortcut:	"Keys.None"
)

(Choice.2598
	Help:	"Zooms in on the center of the display"
	HelpTopic:	"Zoom_In"
	Label:	"Zoom &In"
	Click:	"Layout.ZoomIn"
	Shortcut:	"Keys.None"
)

(Choice.2599
	Help:	"Zooms out from the center of the display"
	HelpTopic:	"Zoom_Out"
	Label:	"Zoom &Out"
	Click:	"Layout.ZoomOut"
	Shortcut:	"Keys.None"
)

(Space.2600
)

(Choice.2601
	Help:	"Shows or hides the layout's grid"
	HelpTopic:	"Show_Hide_Grid"
	Update:	"Layout.ShowHideGridUpdate"
	Label:	"Hide &Grid"
	Click:	"Layout.ShowHideGrid"
	Shortcut:	"Keys.None"
)

(Choice.2602
	Help:	"Shows or hides the layout's margins"
	HelpTopic:	"Show_Hide_Margins"
	Update:	"Layout.ShowHideMarginsUpdate"
	Label:	"Hide &Margins"
	Click:	"Layout.ShowHideMargins"
	Shortcut:	"Keys.None"
)

(Space.2603
)

(Choice.2604
	Help:	"Places a neatline around your graphics or inside your margins "
	HelpTopic:	"Layout_Neatline"
	Update:	"Graphic.Neatline ShowUpdate"
	Label:	"Add Neatline..."
	Click:	"Graphic.Neatline Show"
	Shortcut:	"Keys.None"
)

(Space.2605
)

(Choice.2606
	Help:	"Create a new layout by using a predefined template"
	HelpTopic:	"Use_Template"
	Label:	"&Use Template..."
	Click:	"Layout.Template"
	Shortcut:	"Keys.None"
)

(Choice.2607
	Help:	"Store the current layout as a template"
	HelpTopic:	"Store_As_Template"
	Label:	"Sto&re As Template..."
	Click:	"Layout.TemplateStore"
	Shortcut:	"Keys.None"
)

(Choice.2608
	Disabled:	1
	Help:	"Store each graphic group in the current layout as a north arrow"
	HelpTopic:	"Store_North_Arrows"
	Update:	"Graphic.HasSelectionUpdate"
	Label:	"Store &North Arrows"
	Click:	"Graphic.StoreNorthArrow"
	Shortcut:	"Keys.None"
)

(PMenu.2609
	InternalName:	"Graphics"
	Child:	2610
	Child:	2611
	Child:	2612
	Child:	2613
	Child:	2614
	Child:	2615
	Child:	2616
	Child:	2617
	Child:	2618
	Child:	2620
	Child:	2621
	Child:	2622
	Child:	2623
	Label:	"&Graphics"
)

(Choice.2610
	Disabled:	1
	Help:	"Displays the property editor for the selected graphic"
	HelpTopic:	"Graphic_Properties"
	Update:	"Graphic.HasSelectionUpdate"
	Label:	"&Properties..."
	Click:	"Graphic.Edit"
	Shortcut:	"Keys.None"
)

(Space.2611
)

(Choice.2612
	Help:	"Shows a dialog where you can set the default values for the text tools"
	HelpTopic:	"Default_settings_for_text_and_label_tools"
	Label:	"&Text Tool Defaults..."
	Click:	"Graphic.Label Defaults Show"
	Shortcut:	"Keys.None"
)

(Space.2613
)

(Choice.2614
	Disabled:	1
	Help:	"Displays a dialog box to adjust size and position of selected graphic"
	HelpTopic:	"Size_and_Position"
	Update:	"Graphic.SingleSelectionUpdate"
	Label:	"&Size and Position..."
	Click:	"Graphic.SizePos"
	Shortcut:	"Keys.None"
)

(Choice.2615
	Disabled:	1
	Help:	"Aligns the selected graphics"
	HelpTopic:	"Align"
	Update:	"Graphic.HasSelectionUpdate"
	Label:	"&Align..."
	Click:	"Graphic.Align"
	Shortcut:	"Keys.Ctrl+A"
)

(Space.2616
)

(Choice.2617
	Disabled:	1
	Help:	"Moves selected graphics in front of other graphics"
	HelpTopic:	"Bring_to_Front"
	Update:	"Graphic.HasSelectionUpdate"
	Label:	"Bring to &Front"
	Click:	"Graphic.ToFront"
	Shortcut:	"Keys.None"
)

(Choice.2618
	Disabled:	1
	Help:	"Moves selected graphics behind other graphics"
	HelpTopic:	"Send_to_Back"
	Update:	"Graphic.HasSelectionUpdate"
	Label:	"Send to &Back"
	Click:	"Graphic.ToBack"
	Shortcut:	"Keys.None"
)

(Choice.2620
	Disabled:	1
	Help:	"Groups selected graphics"
	HelpTopic:	"Group"
	Update:	"Graphic.GroupUpdate"
	Label:	"&Group"
	Click:	"Graphic.Group"
	Shortcut:	"Keys.Ctrl+G"
)

(Choice.2621
	Disabled:	1
	Help:	"Ungroups selected graphics"
	HelpTopic:	"Ungroup"
	Update:	"Graphic.UngroupUpdate"
	Label:	"&Ungroup"
	Click:	"Graphic.Ungroup"
	Shortcut:	"Keys.Ctrl+U"
)

(Space.2622
)

(Choice.2623
	Disabled:	1
	Help:	"Simplify selected graphics by converting them to a set of shapes"
	HelpTopic:	"Simplify"
	Update:	"Graphic.HasSelectionUpdate"
	Label:	"S&implify"
	Click:	"Graphic.Simplify"
	Shortcut:	"Keys.None"
)

(PMenu.2624
	InternalName:	"Window"
	Child:	2625
	Child:	2626
	Child:	2627
	Child:	2628
	Child:	2629
	Child:	2631
	Child:	2633
	Child:	2634
	Label:	"&Window"
)

(Choice.2625
	Help:	"Arranges windows as non-overlapping tiles"
	HelpTopic:	"Tile"
	Label:	"&Tile"
	Click:	"Project.Tile"
	Shortcut:	"Keys.None"
)

(Choice.2626
	Help:	"Arranges windows"
	HelpTopic:	"Cascade"
	Label:	"&Cascade"
	Click:	"Project.Cascade"
	Shortcut:	"Keys.None"
)

(Choice.2627
	Help:	"Arranges iconified windows"
	HelpTopic:	"Arrange_Icons"
	Label:	"&Arrange Icons"
	Click:	"Project.ArrangeIcons"
	Shortcut:	"Keys.None"
)

(Space.2628
)

(Choice.2629
	Help:	"Shows the symbol window"
	HelpTopic:	"Show_Symbol_Window"
	Label:	"Show Symbol Window..."
	Click:	"Project.ShowHideSymWin"
	Shortcut:	"Keys.Ctrl+P"
)

(Space.2631
	ObjectTag:	2632
	Update:	"WindowMenuUpdate"
)

(AVStr.2632
	S:	"Untitled Layout1"
)

(Choice.2633
	Help:	"Activates Untitled"
	Label:	"&1 Untitled"
	Click:	"WindowActivate"
	Shortcut:	"Keys.None"
)

(Choice.2634
	Help:	"Activates Layout1"
	Label:	"&2 Layout1"
	Click:	"WindowActivate"
	Shortcut:	"Keys.None"
)

(PMenu.2635
	InternalName:	"Help"
	Child:	2636
	Child:	2637
	Child:	2638
	Child:	2639
	Label:	"&Help"
)

(Choice.2636
	Help:	"Displays the dialog for browsing and searching ArcView's help system"
	HelpTopic:	"Help_on_Help_Topics"
	Label:	"Help &Topics..."
	Click:	"Project.HelpTopics"
	Shortcut:	"Keys.None"
)

(Choice.2637
	Help:	"Provides instructions for how to obtain help from ArcView"
	HelpTopic:	"Help_on_How_to_Get_Help"
	Label:	"&How to Get Help..."
	Click:	"Project.HelpHelp"
	Shortcut:	"Keys.None"
)

(Space.2638
)

(Choice.2639
	Help:	"Provides information about ArcView"
	HelpTopic:	"About"
	Label:	"&About ArcView..."
	Click:	"Project.About"
	Shortcut:	"Keys.None"
)

(ButnBar.2640
	Child:	2641
	Child:	2643
	Child:	2644
	Child:	2646
	Child:	2648
	Child:	2650
	Child:	2651
	Child:	2653
	Child:	2655
	Child:	2657
	Child:	2659
	Child:	2661
	Child:	2663
	Child:	2664
	Child:	2666
	Child:	2668
	Child:	2670
	Child:	2672
	Child:	2674
	Child:	2675
	Child:	2677
	Child:	2678
	Child:	2680
	Child:	2681
)

(Butn.2641
	Help:	"Save Project//Saves the current project"
	HelpTopic:	"Save_Project"
	Icon:	2642
	Click:	"Project.Save"
)

(AVIcon.2642
	Name:	"Save"
	Res:	"Icons.Save"

)

(Space.2643
)

(Butn.2644
	Disabled:	1
	Help:	"Cut//Cuts the selection and puts it into the clipboard"
	HelpTopic:	"Cut"
	Update:	"Graphic.HasSelectionUpdate"
	Icon:	2645
	Click:	"Layout.Cut"
)

(AVIcon.2645
	Name:	"Cut"
	Res:	"Icons.Cut"

)

(Butn.2646
	Disabled:	1
	Help:	"Copy//Copies the selected graphics to the clipboard"
	HelpTopic:	"Copy"
	Update:	"Graphic.HasSelectionUpdate"
	Icon:	2647
	Click:	"Layout.Copy"
)

(AVIcon.2647
	Name:	"Copy"
	Res:	"Icons.Copy"

)

(Butn.2648
	Disabled:	1
	Help:	"Paste//Inserts the contents of the clipboard"
	HelpTopic:	"Paste"
	Update:	"Layout.PasteUpdate"
	Icon:	2649
	Click:	"Layout.Paste"
)

(AVIcon.2649
	Name:	"Paste"
	Res:	"Icons.Paste"

)

(Space.2650
)

(Butn.2651
	Help:	"Layout Properties//Displays the dialog box to edit properties of the layout"
	HelpTopic:	"Layout_Properties"
	Icon:	2652
	Click:	"Layout.Properties"
)

(AVIcon.2652
	Name:	"Props"
	Res:	"Icons.Props"

)

(Butn.2653
	Disabled:	1
	Help:	"Group//Groups selected graphics"
	HelpTopic:	"Group"
	Update:	"Graphic.GroupUpdate"
	Icon:	2654
	Click:	"Graphic.Group"
)

(AVIcon.2654
	Name:	"Group"
	Res:	"Icons.Group"

)

(Butn.2655
	Disabled:	1
	Help:	"Ungroup//Ungroups selected graphics"
	HelpTopic:	"Ungroup"
	Update:	"Graphic.UngroupUpdate"
	Icon:	2656
	Click:	"Graphic.Ungroup"
)

(AVIcon.2656
	Name:	"Ungroup"
	Res:	"Icons.Ungroup"

)

(Butn.2657
	Disabled:	1
	Help:	"Bring to Front//Moves selected graphics in front of other graphics"
	HelpTopic:	"Bring_to_Front"
	Update:	"Graphic.HasSelectionUpdate"
	Icon:	2658
	Click:	"Graphic.ToFront"
)

(AVIcon.2658
	Name:	"MoveToFront"
	Res:	"Icons.MoveToFront"

)

(Butn.2659
	Disabled:	1
	Help:	"Send to Back//Moves selected graphics behind other graphics"
	HelpTopic:	"Send_to_Back"
	Update:	"Graphic.HasSelectionUpdate"
	Icon:	2660
	Click:	"Graphic.ToBack"
)

(AVIcon.2660
	Name:	"SendToBack"
	Res:	"Icons.SendToBack"

)

(Butn.2661
	Disabled:	1
	Help:	"Undo//Undo last edit"
	HelpTopic:	"Undo"
	Update:	"Layout.UndoUpdate"
	Icon:	2662
	Click:	"Layout.Undo"
)

(AVIcon.2662
	Name:	"Undo"
	Res:	"Icons.Undo"

)

(Space.2663
)

(Butn.2664
	Help:	"Zoom to Page//Zooms to the page"
	HelpTopic:	"Zoom_to_Page"
	Icon:	2665
	Click:	"Layout.ZoomPage"
)

(AVIcon.2665
	Name:	"ZoomToPage"
	Res:	"Icons.ZoomToPage"

)

(Butn.2666
	Help:	"Zoom to Actual Size//Zooms to display the actual size of the layout (1:1)"
	HelpTopic:	"Zoom_to_Actual_Size"
	Icon:	2667
	Click:	"Layout.ZoomActual"
)

(AVIcon.2667
	Name:	"ZoomToActual"
	Res:	"Icons.ZoomToActual"

)

(Butn.2668
	Disabled:	1
	Help:	"Zoom to Selected//Zooms to the extent of the selected layout graphics"
	HelpTopic:	"Zoom_to_Selected"
	Update:	"Graphic.HasSelectionUpdate"
	Icon:	2669
	Click:	"Layout.ZoomSelected"
)

(AVIcon.2669
	Name:	"ZoomToSelected"
	Res:	"Icons.ZoomToSelected"

)

(Butn.2670
	Help:	"Zoom In//Zooms in on the center of the display"
	HelpTopic:	"Zoom_In"
	Icon:	2671
	Click:	"Layout.ZoomIn"
)

(AVIcon.2671
	Name:	"ZoomIn"
	Res:	"Icons.ZoomIn"

)

(Butn.2672
	Help:	"Zoom Out//Zooms out from the center of the display"
	HelpTopic:	"Zoom_Out"
	Icon:	2673
	Click:	"Layout.ZoomOut"
)

(AVIcon.2673
	Name:	"ZoomOut"
	Res:	"Icons.ZoomOut"

)

(Space.2674
)

(Butn.2675
	Help:	"Neatline//Places a neatline around your graphics or inside your margins"
	HelpTopic:	"Layout_Neatline"
	Update:	"Graphic.Neatline ShowUpdate"
	Icon:	2676
	Click:	"Graphic.Neatline Show"
)

(AVIcon.2676
	Name:	"Neatline"
	Res:	"Icons.Neatline"

)

(Space.2677
)

(Butn.2678
	Help:	"Print//Prints the layout"
	HelpTopic:	"Print"
	Icon:	2679
	Click:	"Doc.Print"
)

(AVIcon.2679
	Name:	"Print"
	Res:	"Icons.Print"

)

(Space.2680
)

(Butn.2681
	Help:	"Help//Gets help about the next button, tool, or menu choice you click"
	HelpTopic:	"Help_button"
	Icon:	2682
	Click:	"Help.Tool"
)

(AVIcon.2682
	Name:	"HelpTool"
	Res:	"Icons.HelpTool"

)

(PopupSet.2683
	Child:	2684
)

(Popup.2684
	Child:	2685
	Child:	2686
	Child:	2687
	Child:	2688
	Child:	2689
	Child:	2690
	Child:	2691
	Child:	2692
	Child:	2693
	Child:	2694
	Label:	"Menu"
)

(Choice.2685
	Disabled:	1
	Help:	"Selects all layout graphics"
	HelpTopic:	"Select_All"
	Update:	"Layout.HasGraphicsUpdate"
	Label:	"Select All"
	Click:	"Graphic.SelectAll"
	Shortcut:	"Keys.None"
)

(Space.2686
)

(Choice.2687
	Disabled:	1
	Help:	"Undo the last edit"
	Update:	"Layout.UndoUpdate"
	Label:	"Undo"
	Click:	"Layout.Undo"
	Shortcut:	"Keys.None"
)

(Space.2688
)

(Choice.2689
	Disabled:	1
	Help:	"Moves selected graphics in front of other graphics"
	HelpTopic:	"Bring_to_Front"
	Update:	"Graphic.HasSelectionUpdate"
	Label:	"Bring to Front"
	Click:	"Graphic.ToFront"
	Shortcut:	"Keys.None"
)

(Choice.2690
	Disabled:	1
	Help:	"Moves selected graphics behind other graphics"
	HelpTopic:	"Send_to_Back"
	Update:	"Graphic.HasSelectionUpdate"
	Label:	"Send to Back"
	Click:	"Graphic.ToBack"
	Shortcut:	"Keys.None"
)

(Space.2691
)

(Choice.2692
	Disabled:	1
	Help:	"Simplifies the selected graphic by converting it to a set of shapes"
	HelpTopic:	"Simplify"
	Update:	"Graphic.HasSelectionUpdate"
	Label:	"Simplify"
	Click:	"Graphic.Simplify"
	Shortcut:	"Keys.None"
)

(Space.2693
)

(Choice.2694
	Disabled:	1
	Help:	"Refreshes view frames"
	Update:	"Frame.RefreshUpdate"
	Label:	"Refresh View Frames"
	Click:	"Frame.Refresh"
	Shortcut:	"Keys.None"
)

(ToolBar.2695
	Child:	2696
	Child:	2698
	Child:	2700
	Child:	2702
	Child:	2704
	Child:	2706
	Child:	2719
	Child:	2732
)

(Tool.2696
	Help:	"Pointer//Selects frames or graphics on the layout by pointing or dragging"
	HelpTopic:	"Pointer_tool"
	Icon:	2697
	Cursor:	"Cursors.Select"
	Apply:	"Layout.Select"
	Click:	"Layout.SelectTool"
)

(AVIcon.2697
	Name:	"Select"
	Res:	"Icons.Select"

)

(Tool.2698
	Help:	"Vertex_Edit//Adds, moves, and deletes vertices of line and polygon graphics"
	HelpTopic:	"Vertex_Edit_Tool"
	Icon:	2699
	Cursor:	"Cursors.SelectEdit"
	Apply:	"Layout.SelectToEdit"
	Click:	"Layout.SelectToEditTool"
)

(AVIcon.2699
	Name:	"SelectEdit"
	Res:	"Icons.SelectEdit"

)

(Tool.2700
	Help:	"Zoom In//Zooms in at a point you click or zooms in on a rectangle you drag"
	HelpTopic:	"Zoom_In_tool"
	Icon:	2701
	Cursor:	"Cursors.ZoomIn"
	Apply:	"Layout.ZoomInTool"
)

(AVIcon.2701
	Name:	"ZoomInTool"
	Res:	"Icons.ZoomInTool"

)

(Tool.2702
	Help:	"Zoom Out//Zooms out from a point you click or zooms out to include a rectangle you drag"
	HelpTopic:	"Zoom_Out_tool"
	Icon:	2703
	Cursor:	"Cursors.ZoomOut"
	Apply:	"Layout.ZoomOutTool"
)

(AVIcon.2703
	Name:	"ZoomOutTool"
	Res:	"Icons.ZoomOutTool"

)

(Tool.2704
	Help:	"Pan//Drags the display in the direction you move the cursor"
	HelpTopic:	"Pan_tool"
	Icon:	2705
	Cursor:	"Cursors.Pan"
	Apply:	"Layout.Pan"
)

(AVIcon.2705
	Name:	"Pan"
	Res:	"Icons.Pan"

)

(ToolMenu.2706
	Help:	"Text//Creates text on the display"
	HelpTopic:	"Text_tool"
	Update:	"Layout.TextToolUpdate"
	Icon:	2707
	Cursor:	"Cursors.Text"
	Apply:	"Layout.Text"
	Click:	"SymWin.DisplayFontPanel"
	Child:	2708
	Child:	2709
	Child:	2711
	Child:	2713
	Child:	2715
	Child:	2717
)

(AVIcon.2707
	Name:	"Text"
	Res:	"Icons.Text"

)

(Tool.2708
	Help:	"Text//Creates text on the display"
	HelpTopic:	"Text_tool"
	Update:	"Layout.TextToolUpdate"
	Icon:	2707
	Cursor:	"Cursors.Text"
	Apply:	"Layout.Text"
	Click:	"SymWin.DisplayFontPanel"
)

(Tool.2709
	Help:	"Callout Text//Draws text with a box and leader around it"
	HelpTopic:	"Text_tool"
	Update:	"Layout.TextToolUpdate"
	Icon:	2710
	Cursor:	"Cursors.Bullseye"
	Apply:	"View.CalloutTextTool"
)

(AVIcon.2710
	Name:	"CallOutText1"
	Res:	"Icons.CallOutText1"

)

(Tool.2711
	Help:	"Bullet Leader Text//Draws text with a bullet and leader"
	HelpTopic:	"Text_tool"
	Update:	"Layout.TextToolUpdate"
	Icon:	2712
	Cursor:	"Cursors.Bullseye"
	Apply:	"View.BulletLeaderTextTool"
)

(AVIcon.2712
	Name:	"CallOutText2"
	Res:	"Icons.CallOutText2"

)

(Tool.2713
	Help:	"Banner Text//Creates text with a box and shadow around it"
	HelpTopic:	"Text_tool"
	Update:	"Layout.TextToolUpdate"
	Icon:	2714
	Cursor:	"Cursors.Bullseye"
	Apply:	"View.ShadowBoxTextTool"
)

(AVIcon.2714
	Name:	"CallOutText3"
	Res:	"Icons.CallOutText3"

)

(Tool.2715
	Help:	"Drop-Shadow Text//Creates text where each letter has a drop-shadow"
	HelpTopic:	"Text_tool"
	Update:	"Layout.TextToolUpdate"
	Icon:	2716
	Cursor:	"Cursors.Bullseye"
	Apply:	"View.CreateDropShadowText"
)

(AVIcon.2716
	Name:	"DropShadowText"
	Res:	"Icons.DropShadowText"

)

(Tool.2717
	Help:	"SplineText//Adds text aligned to a spline baseline"
	HelpTopic:	"Text_tool"
	Update:	"Layout.TextToolUpdate"
	Icon:	2718
	Cursor:	"Cursors.Bullseye"
	Apply:	"View.SplineText"
)

(AVIcon.2718
	Name:	"TextAligned"
	Res:	"Icons.TextAligned"

)

(ToolMenu.2719
	Help:	"Draw Point//Creates a point on the display"
	HelpTopic:	"Draw_tool"
	Icon:	2720
	Cursor:	"Cursors.CrossHair"
	Apply:	"Layout.Point"
	Click:	"SymWin.DisplayMarkerPanel"
	Child:	2721
	Child:	2722
	Child:	2724
	Child:	2726
	Child:	2728
	Child:	2730
)

(AVIcon.2720
	Name:	"Point"
	Res:	"Icons.Point"

)

(Tool.2721
	Help:	"Draw Point//Creates a point on the display"
	HelpTopic:	"Draw_tool"
	Icon:	2720
	Cursor:	"Cursors.CrossHair"
	Apply:	"Layout.Point"
	Click:	"SymWin.DisplayMarkerPanel"
)

(Tool.2722
	Help:	"Draw Straight Line//Creates a line on the display"
	HelpTopic:	"Draw_tool"
	Icon:	2723
	Cursor:	"Cursors.CrossHair"
	Apply:	"Layout.Line"
	Click:	"SymWin.DisplayPenPanel"
)

(AVIcon.2723
	Name:	"SelectLine"
	Res:	"Icons.SelectLine"

)

(Tool.2724
	Help:	"Draw Line//Creates a line with three or more points on the display"
	HelpTopic:	"Draw_tool"
	Icon:	2725
	Cursor:	"Cursors.CrossHair"
	Apply:	"Layout.PolyLine"
	Click:	"SymWin.DisplayPenPanel"
)

(AVIcon.2725
	Name:	"Lines"
	Res:	"Icons.Lines"

)

(Tool.2726
	Help:	"Draw Rectangle//Creates a rectangle on the display"
	HelpTopic:	"Draw_tool"
	Icon:	2727
	Cursor:	"Cursors.CrossHair"
	Apply:	"Layout.Rect"
	Click:	"SymWin.DisplayFillPanel"
)

(AVIcon.2727
	Name:	"Rect"
	Res:	"Icons.Rect"

)

(Tool.2728
	Help:	"Draw Circle//Creates a circle on the display"
	HelpTopic:	"Draw_tool"
	Icon:	2729
	Cursor:	"Cursors.CrossHair"
	Apply:	"Layout.Circle"
	Click:	"SymWin.DisplayFillPanel"
)

(AVIcon.2729
	Name:	"Disk"
	Res:	"Icons.Disk"

)

(Tool.2730
	Help:	"Draw Polygon//Creates a polygon on the display"
	HelpTopic:	"Draw_tool"
	Icon:	2731
	Cursor:	"Cursors.CrossHair"
	Apply:	"Layout.Poly"
	Click:	"SymWin.DisplayFillPanel"
)

(AVIcon.2731
	Name:	"Poly"
	Res:	"Icons.Poly"

)

(ToolMenu.2732
	Help:	"View Frame//Creates a view frame on the display"
	HelpTopic:	"Frame_tool"
	Icon:	2733
	Cursor:	"Cursors.CrossHair"
	Apply:	"Layout.FrameView"
	Child:	2734
	Child:	2735
	Child:	2737
	Child:	2739
	Child:	2741
	Child:	2743
	Child:	2745
)

(AVIcon.2733
	Name:	"FrameView"
	Res:	"Icons.FrameView"

)

(Tool.2734
	Help:	"View Frame//Creates a view frame on the display"
	HelpTopic:	"Frame_tool"
	Icon:	2733
	Cursor:	"Cursors.CrossHair"
	Apply:	"Layout.FrameView"
)

(Tool.2735
	Help:	"Legend Frame//Creates a legend frame on the display"
	HelpTopic:	"Frame_tool"
	Icon:	2736
	Cursor:	"Cursors.CrossHair"
	Apply:	"Layout.FrameLegend"
)

(AVIcon.2736
	Name:	"FrameLegend"
	Res:	"Icons.FrameLegend"

)

(Tool.2737
	Help:	"Scale Bar Frame//Creates a scale bar frame on the display"
	HelpTopic:	"Frame_tool"
	Icon:	2738
	Cursor:	"Cursors.CrossHair"
	Apply:	"Layout.FrameScalebar"
)

(AVIcon.2738
	Name:	"FrameScalebar"
	Res:	"Icons.FrameScalebar"

)

(Tool.2739
	Help:	"North Arrow//Creates a north arrow on the display"
	HelpTopic:	"Frame_tool"
	Icon:	2740
	Cursor:	"Cursors.CrossHair"
	Apply:	"Layout.NorthArrow"
)

(AVIcon.2740
	Name:	"NorthArrow"
	Res:	"Icons.NorthArrow"

)

(Tool.2741
	Help:	"Chart Frame//Creates a chart frame on the display"
	HelpTopic:	"Frame_tool"
	Icon:	2742
	Cursor:	"Cursors.CrossHair"
	Apply:	"Layout.FrameChart"
)

(AVIcon.2742
	Name:	"FrameChart"
	Res:	"Icons.FrameChart"

)

(Tool.2743
	Help:	"Table Frame//Creates a table frame on the display"
	HelpTopic:	"Frame_tool"
	Icon:	2744
	Cursor:	"Cursors.CrossHair"
	Apply:	"Layout.FrameTable"
)

(AVIcon.2744
	Name:	"FrameTable"
	Res:	"Icons.FrameTable"

)

(Tool.2745
	Help:	"Picture Frame//Creates a picture frame on the display"
	HelpTopic:	"Frame_tool"
	Icon:	2746
	Cursor:	"Cursors.CrossHair"
	Apply:	"Layout.FramePicture"
)

(AVIcon.2746
	Name:	"FrameLegend"
	Res:	"Icons.FrameLegend"

)

(Tool.2747
	Help:	"Scale Bar Frame//Creates a scale bar frame on the display"
	HelpTopic:	"Frame_tool"
	Icon:	2748
	Cursor:	"Cursors.CrossHair"
	Apply:	"Layout.FrameScalebar"
)

(AVIcon.2748
	Name:	"FrameScalebar"
	Res:	"Icons.FrameScalebar"

)

(DocGUI.2749
	Name:	"Project"
	Type:	"Project"
	Modified:	1
	MenuBar:	2750
	ButnBar:	2791
	Popups:	2806
	ToolBar:	2807
	Icon:	2808
)

(MenuBar.2750
	Child:	2751
	Child:	2765
	Child:	2777
	Child:	2786
)

(PMenu.2751
	InternalName:	"File"
	Child:	2752
	Child:	2753
	Child:	2754
	Child:	2755
	Child:	2756
	Child:	2757
	Child:	2759
	Child:	2760
	Child:	2761
	Child:	2762
	Child:	2763
	Child:	2764
	Label:	"&Файл"
)

(Choice.2752
	Help:	"Создает новый проект"
	HelpTopic:	"New_Project"
	Label:	"&Новый проект"
	Click:	"Project.New"
	Shortcut:	"Keys.Ctrl+N"
)

(Choice.2753
	Help:	"Открывает существующий проект"
	HelpTopic:	"Open_Project"
	Label:	"&Открыть проект..."
	Click:	"Project.Open"
	Shortcut:	"Keys.None"
)

(Choice.2754
	Help:	"Закрывает окно проекта"
	HelpTopic:	"Close_Project"
	Label:	"&Закрыть проект"
	Click:	"Project.Close"
	Shortcut:	"Keys.None"
)

(Space.2755
)

(Choice.2756
	Help:	"Сохраняет текущий проект"
	HelpTopic:	"Save_Project"
	Label:	"&Сохранить проект"
	Click:	"Project.Save"
	Shortcut:	"Keys.Ctrl+S"
)

(Choice.2757
	Help:	"Сохраняет текущий проект с новым именем"
	HelpTopic:	"Save_Project_As"
	Label:	"Сохранить проект &как..."
	Click:	"Project.SaveAs"
	Shortcut:	"Keys.None"
)

(Space.2759
)

(Choice.2760
	Help:	"Вызывает диалоговое окно модулей"
	HelpTopic:	"Extensions"
	Label:	"&Модули..."
	Click:	"Appl.GetExtensionWin"
	Shortcut:	"Keys.None"
)

(Space.2761
)

(Choice.2762
	Help:	"Показывает окно параметров кодовой страницы"
	HelpTopic:	"Code_Page_Profile"
	Label:	"П&араметры кодовой страницы..."
	Click:	"ShowCodepage"
	Shortcut:	"Keys.None"
)

(Space.2763
)

(Choice.2764
	Help:	"Выход из ArcView"
	HelpTopic:	"Exit"
	Label:	"В&ыход"
	Click:	"Project.Exit"
	Shortcut:	"Keys.None"
)

(PMenu.2765
	InternalName:	"Project"
	Child:	2766
	Child:	2767
	Child:	2768
	Child:	2769
	Child:	2770
	Child:	2771
	Child:	2772
	Child:	2773
	Child:	2774
	Child:	2775
	Child:	2776
	Label:	"&Проект"
)

(Choice.2766
	Help:	"Показывает диалоговое окно для редактирования свойств проекта"
	HelpTopic:	"Project_Properties"
	Label:	"&Свойства..."
	Click:	"Project.Properties"
	Shortcut:	"Keys.None"
)

(Choice.2767
	Help:	"Адаптирует активный проект"
	HelpTopic:	"Customize"
	Update:	"Project.CustomizeUpdate"
	Label:	"&Адаптировать..."
	Click:	"Project.Customize"
	Shortcut:	"Keys.None"
)

(Space.2768
)

(Choice.2769
	Help:	"Переименовывает выбранную компоненту проекта"
	HelpTopic:	"Rename"
	Update:	"Project.RenameUpdate"
	Label:	"&Rename 'Ae.FindInScript'..."
	Click:	"Project.Rename"
	Shortcut:	"Keys.Ctrl+R"
)

(Choice.2770
	Help:	"Удаляет выбранную компоненту из проекта"
	HelpTopic:	"Delete_Component"
	Update:	"Project.DeleteUpdate"
	Label:	"&Delete 'Ae.FindInScript'..."
	Click:	"Project.Delete"
	Shortcut:	"Keys.Del"
)

(Space.2771
)

(Choice.2772
	Help:	"Добавляет таблицу к проекту"
	HelpTopic:	"Add_Table"
	Update:	"Project.AddTableUpdate"
	Label:	"&Добавить таблицу..."
	Click:	"Project.AddTable"
	Shortcut:	"Keys.None"
)

(Choice.2773
	Help:	"Создает новую компоненту проекта из внешнего источника"
	HelpTopic:	"Import"
	Update:	"Project.ImportUpdate"
	Label:	"&Импортировать..."
	Click:	"Project.Import"
	Shortcut:	"Keys.None"
)

(Choice.2774
	Help:	"Открывает диспетчер для связи с SQL-сервером"
	HelpTopic:	"SQL_Connect"
	Update:	"Project.HasSQL"
	Label:	"С&вязь с SQL-сервером..."
	Click:	"Project.SQLConnect"
	Shortcut:	"Keys.None"
)

(Space.2775
)

(Choice.2776
	Help:	"Отображает кодовую страницу активного документа"
	HelpTopic:	"Code_Page"
	Label:	"Кодо&вая страница..."
	Click:	"Doc.ShowCodepage"
	Shortcut:	"Keys.None"
)

(PMenu.2777
	InternalName:	"Window"
	Child:	2778
	Child:	2779
	Child:	2780
	Child:	2781
	Child:	2782
	Child:	2783
	Child:	2785
	Label:	"&Окно"
)

(Choice.2778
	Help:	"Упорядочивает окна в виде неперекрывающихся экранов"
	HelpTopic:	"Tile"
	Label:	"&Мозаика"
	Click:	"Project.Tile"
	Shortcut:	"Keys.None"
)

(Choice.2779
	Help:	"Упорядочивает окна"
	HelpTopic:	"Cascade"
	Label:	"&Каскад"
	Click:	"Project.Cascade"
	Shortcut:	"Keys.None"
)

(Choice.2780
	Help:	"Упорядочивает значки окон"
	HelpTopic:	"Arrange_Icons"
	Label:	"&Упорядочить значки"
	Click:	"Project.ArrangeIcons"
	Shortcut:	"Keys.None"
)

(Space.2781
)

(Choice.2782
	Help:	"Показывает окно символов"
	HelpTopic:	"Show_Symbol_Window"
	Label:	"Показать окно символов..."
	Click:	"Project.ShowHideSymWin"
	Shortcut:	"Keys.Ctrl+P"
)

(Space.2783
	ObjectTag:	2784
	Update:	"WindowMenuUpdate"
)

(AVStr.2784
	S:	"57.apr"
)

(Choice.2785
	Help:	"Activates 57.apr"
	Label:	"&1 57.apr"
	Click:	"WindowActivate"
	Shortcut:	"Keys.None"
)

(PMenu.2786
	InternalName:	"Help"
	Child:	2787
	Child:	2788
	Child:	2789
	Child:	2790
	Label:	"&Справка"
)

(Choice.2787
	Help:	"Вызывает диалог для просмотра и поиска справок ArcView"
	HelpTopic:	"Help_on_Help_Topics"
	Label:	"&Разделы справки..."
	Click:	"Project.HelpTopics"
	Shortcut:	"Keys.None"
)

(Choice.2788
	Help:	"Предоставляет инструкции о том, как получить справку из ArcView"
	HelpTopic:	"Help_on_How_to_Get_Help"
	Label:	"&Как получить справку..."
	Click:	"Project.HelpHelp"
	Shortcut:	"Keys.None"
)

(Space.2789
)

(Choice.2790
	Help:	"Предоставляет информацию об ArcView"
	HelpTopic:	"About"
	Label:	"О &программе ArcView..."
	Click:	"Project.About"
	Shortcut:	"Keys.None"
)

(ButnBar.2791
	Update:	"Project.UpdateButtons"
	Child:	2792
	Child:	2794
	Child:	2795
	Child:	2797
	Child:	2798
	Child:	2800
	Child:	2801
	Child:	2803
	Child:	2804
)

(Butn.2792
	Help:	"Сохранить проект//Сохраняет текущий проект"
	HelpTopic:	"Save_Project"
	Icon:	2793
	Click:	"Project.Save"
)

(AVIcon.2793
	Name:	"Save"
	Res:	"Icons.Save"

)

(Space.2794
)

(Butn.2795
	Help:	"Справка//Показывает справку о кнопке, инструменте или пункте меню, на который будет переведен курсор"
	HelpTopic:	"Help_button"
	Icon:	2796
	Click:	"Help.Tool"
)

(AVIcon.2796
	Name:	"HelpTool"
	Res:	"Icons.HelpTool"

)

(Space.2797
)

(Butn.2798
	Icon:	2799
	Click:	"Ae.Make"
)

(AVIcon.2799
	Name:	"M"
	Res:	"Icons.M"

)

(Space.2800
)

(Butn.2801
	Icon:	2802
	Click:	"Ae.RunProverka"
)

(AVIcon.2802
	Name:	"P"
	Res:	"Icons.P"

)

(Space.2803
)

(Butn.2804
	Icon:	2805
	Click:	"Ae.FindInScript"
)

(AVIcon.2805
	Name:	"Find"
	Res:	"Icons.Find"

)

(PopupSet.2806
)

(ToolBar.2807
)

(AVIcon.2808
	Name:	"Icon"
	Res:	"Project.Icon"

)

(DocGUI.2827
	Name:	"Script"
	Type:	"SEd"
	Modified:	1
	Visible:	1
	MenuBar:	2828
	ButnBar:	2894
	Popups:	2935
	ToolBar:	2936
	NewScript:	"Script.New"
	OpenScript:	"Doc.Open"
	ActionScript:	"Script.Action"
	NewUpdateScript:	"Doc.NewUpdate"
	OpenUpdateScript:	"Doc.OpenUpdate"
	ActionUpdateScript:	"Script.ActionUpdate"
	Title:	"Тексты программ"
	Icon:	2937
)

(MenuBar.2828
	Child:	2829
	Child:	2844
	Child:	2860
	Child:	2879
	Child:	2889
)

(PMenu.2829
	InternalName:	"File"
	Child:	2830
	Child:	2831
	Child:	2832
	Child:	2833
	Child:	2834
	Child:	2835
	Child:	2836
	Child:	2837
	Child:	2838
	Child:	2839
	Child:	2840
	Child:	2841
	Child:	2842
	Child:	2843
	Label:	"&Файл"
)

(Choice.2830
	Help:	"Закрывает активный компонент"
	HelpTopic:	"Close"
	Label:	"&Закрыть"
	Click:	"Project.CloseDoc"
	Shortcut:	"Keys.None"
)

(Choice.2831
	Help:	"Закрывает все компоненты"
	HelpTopic:	"Close_All"
	Label:	"Закрыть &все"
	Click:	"Project.CloseAll"
	Shortcut:	"Keys.None"
)

(Space.2832
)

(Choice.2833
	Help:	"Сохраняет текущий проект"
	HelpTopic:	"Save_Project"
	Label:	"&Сохранить проект"
	Click:	"Project.Save"
	Shortcut:	"Keys.Ctrl+S"
)

(Choice.2834
	Help:	"Сохраняет текущий проект с новым именем"
	HelpTopic:	"Save_Project_As"
	Label:	"Сохранить проект как..."
	Click:	"Project.SaveAs"
	Shortcut:	"Keys.None"
)

(Space.2835
)

(Choice.2836
	Help:	"Вызывает диалоговое окно модулей"
	HelpTopic:	"Extensions"
	Label:	"Модули..."
	Click:	"Appl.GetExtensionWin"
	Shortcut:	"Keys.None"
)

(Space.2837
)

(Choice.2838
	Help:	"Печатает текст программы"
	HelpTopic:	"Print"
	Label:	"&Печать..."
	Click:	"Doc.Print"
	Shortcut:	"Keys.None"
)

(Choice.2839
	Help:	"Редактирует параметры принтера и опции печати"
	HelpTopic:	"Print_Setup"
	Update:	"PrintSetupUpdate"
	Label:	"&Параметры печати..."
	Click:	"Project.PrintSetup"
	Shortcut:	"Keys.None"
)

(Space.2840
)

(Choice.2841
	Help:	"Показывает окно параметров кодовой страницы"
	HelpTopic:	"Code_Page_Profile"
	Label:	"П&араметры кодовой страницы..."
	Click:	"ShowCodepage"
	Shortcut:	"Keys.None"
)

(Space.2842
)

(Choice.2843
	Help:	"Выход из ArcView"
	HelpTopic:	"Exit"
	Label:	"В&ыход"
	Click:	"Project.Exit"
	Shortcut:	"Keys.None"
)

(PMenu.2844
	InternalName:	"Edit"
	Child:	2845
	Child:	2846
	Child:	2847
	Child:	2848
	Child:	2849
	Child:	2850
	Child:	2851
	Child:	2852
	Child:	2853
	Child:	2854
	Child:	2855
	Child:	2856
	Child:	2857
	Child:	2858
	Child:	2859
	Label:	"&Редактировать"
)

(Choice.2845
	Help:	"Отменяет последнее изменение"
	HelpTopic:	"Undo__Script_"
	Label:	"&Отменить"
	Click:	"Script.Undo"
	Shortcut:	"Keys.Ctrl+Z"
)

(Space.2846
)

(Choice.2847
	Help:	"Находит выбранную или указанную строку"
	HelpTopic:	"Script_Find"
	Label:	"&Найти..."
	Click:	"Script.Find"
	Shortcut:	"Keys.None"
)

(Choice.2848
	Help:	"Находит следующее вхождение строки"
	HelpTopic:	"Script_FindNext"
	Update:	"Script.FindNextUpdate"
	Label:	"Найти &следующее"
	Click:	"Script.FindNext"
	Shortcut:	"Keys.F3"
)

(Choice.2849
	Help:	"Заменяет выбранную или указанную строку"
	HelpTopic:	"Script_Replace"
	Label:	"&Заменить..."
	Click:	"Script.Replace"
	Shortcut:	"Keys.None"
)

(Space.2850
)

(Choice.2851
	Help:	"Вырезает выбранные элементы и помещает их в буфер обмена"
	HelpTopic:	"Cut"
	Update:	"Script.HasSelUpdate"
	Label:	"В&ырезать"
	Click:	"Script.Cut"
	Shortcut:	"Keys.Ctrl+X"
)

(Choice.2852
	Help:	"Копирует выбранные элементы и помещает их в буфер обмена"
	HelpTopic:	"Copy"
	Update:	"Script.HasSelUpdate"
	Label:	"&Копировать"
	Click:	"Script.Copy"
	Shortcut:	"Keys.Ctrl+C"
)

(Choice.2853
	Help:	"Вставляет содержимое буфера обмена"
	HelpTopic:	"Paste"
	Label:	"В&ставить"
	Click:	"Script.Paste"
	Shortcut:	"Keys.Ctrl+V"
)

(Space.2854
)

(Choice.2855
	Help:	"Выбирает весь текст в редакторе программ"
	HelpTopic:	"Select_All_in_a_script"
	Label:	"Вы&брать все"
	Click:	"Script.SelectAll"
	Shortcut:	"Keys.None"
)

(Choice.2856
	Help:	"Удаляет текст, начиная с курсора и кончая левым полем"
	HelpTopic:	"Delete_Left"
	Label:	"&Удалить слева"
	Click:	"Script.KillLine"
	Shortcut:	"Keys.Ctrl+U"
)

(Space.2857
)

(Choice.2858
	Help:	"Переводит выбранный текст в комментарий"
	HelpTopic:	"Comment"
	Update:	"Script.HasSelUpdate"
	Label:	"Ко&мментарий"
	Click:	"Script.Comment"
	Shortcut:	"Keys.None"
)

(Choice.2859
	Help:	"Переводит выбранный комментарий в текст"
	HelpTopic:	"Remove_Comment"
	Update:	"Script.HasSelUpdate"
	Label:	"У&далить комментарий"
	Click:	"Script.Uncomment"
	Shortcut:	"Keys.None"
)

(PMenu.2860
	InternalName:	"Script"
	Child:	2861
	Child:	2862
	Child:	2863
	Child:	2864
	Child:	2865
	Child:	2866
	Child:	2867
	Child:	2868
	Child:	2869
	Child:	2870
	Child:	2871
	Child:	2872
	Child:	2873
	Child:	2874
	Child:	2875
	Child:	2876
	Child:	2877
	Child:	2878
	Label:	"&Текст программы"
)

(Choice.2861
	Help:	"Открывает диалоговое окно для редактирования свойств программы"
	HelpTopic:	"Script_Properties"
	Label:	"&Свойства..."
	Click:	"Script.Properties"
	Shortcut:	"Keys.F5"
)

(Space.2862
)

(Choice.2863
	Disabled:	1
	Help:	"Компилирует программу"
	HelpTopic:	"Compile"
	Update:	"Script.CompileUpdate"
	Label:	"Компилирова&ть"
	Click:	"Script.Compile"
	Shortcut:	"Keys.None"
)

(Choice.2864
	Help:	"Выполняет по шагам откомпилированную программу "
	HelpTopic:	"Step"
	Update:	"Script.RunUpdate"
	Label:	"&Шаг"
	Click:	"Script.Step"
	Shortcut:	"Keys.F8"
)

(Choice.2865
	Help:	"Выполняет откомпилированную программу"
	HelpTopic:	"Run"
	Update:	"Script.RunUpdate"
	Label:	"&Выполнить"
	Click:	"Script.Run"
	Shortcut:	"Keys.F5"
)

(Space.2866
)

(Choice.2867
	Help:	"Включает или выключает точку останова в текущей позиции курсора"
	HelpTopic:	"Toggle_Breakpoint"
	Update:	"Script.RunUpdate"
	Label:	"В&ключить/выключить точку останова"
	Click:	"Script.ToggleBreak"
	Shortcut:	"Keys.None"
)

(Choice.2868
	Help:	"Очищает все точки останова"
	HelpTopic:	"Clear_All_Breakpoints"
	Update:	"Script.RunUpdate"
	Label:	"&Очистить все точки останова"
	Click:	"Script.ClearAllBreaks"
	Shortcut:	"Keys.None"
)

(Choice.2869
	Help:	"Показывает текущее значение локальных и глобальных переменных"
	HelpTopic:	"Examine_Variables"
	Update:	"Script.RunUpdate"
	Label:	"&Проверить переменные..."
	Click:	"Script.ShowVariables"
	Shortcut:	"Keys.Ctrl+E"
)

(Space.2870
)

(Choice.2871
	Help:	"Вставляет исходный код системной программы"
	HelpTopic:	"Load_System_Script"
	Label:	"&Загрузить системную программу..."
	Click:	"Script.SystemLoad"
	Shortcut:	"Keys.None"
)

(Choice.2872
	Help:	"Вставляет содержимое текстового файла"
	HelpTopic:	"Load_Text_File"
	Label:	"З&агрузить текстовый файл..."
	Click:	"Script.FileLoad"
	Shortcut:	"Keys.None"
)

(Choice.2873
	Help:	"Записывает полный текст программы или выбранную часть в текстовый файл"
	HelpTopic:	"Write_Text_File"
	Label:	"Со&хранить в текстовый файл..."
	Click:	"Script.FileWrite"
	Shortcut:	"Keys.None"
)

(Space.2874
)

(Choice.2875
	Help:	"Вставляет текст программы в проект и удаляет его окно"
	HelpTopic:	"Embed_Script"
	Update:	"Script.RunUpdate"
	Label:	"Вставит&ь текст программы"
	Click:	"Script.Embed"
	Shortcut:	"Keys.None"
)

(Choice.2876
	Disabled:	1
	Help:	"Удаляет указанный текст программы из включенных текстов программ и помещает его в SEd"
	HelpTopic:	"Script_Unembed"
	Update:	"Script.UnembedUpdate"
	Label:	"&Удалить текст программы..."
	Click:	"Script.Unembed"
	Shortcut:	"Keys.None"
)

(Space.2877
)

(Choice.2878
	Help:	"Отображает кодовую страницу активного документа"
	HelpTopic:	"Code_Page"
	Label:	"Кодо&вая страница..."
	Click:	"Doc.ShowCodepage"
	Shortcut:	"Keys.None"
)

(PMenu.2879
	InternalName:	"Window"
	Child:	2880
	Child:	2881
	Child:	2882
	Child:	2883
	Child:	2884
	Child:	2885
	Child:	2887
	Child:	2888
	Label:	"&Окно"
)

(Choice.2880
	Help:	"Упорядочивает окна в виде неперекрывающихся экранов"
	HelpTopic:	"Tile"
	Label:	"&Мозаика"
	Click:	"Project.Tile"
	Shortcut:	"Keys.None"
)

(Choice.2881
	Help:	"Упорядочивает окна"
	HelpTopic:	"Cascade"
	Label:	"&Каскад"
	Click:	"Project.Cascade"
	Shortcut:	"Keys.None"
)

(Choice.2882
	Help:	"Упорядочивает значки окон"
	HelpTopic:	"Arrange_Icons"
	Label:	"&Упорядочить значки"
	Click:	"Project.ArrangeIcons"
	Shortcut:	"Keys.None"
)

(Space.2883
)

(Choice.2884
	Help:	"Показывает окно символов"
	HelpTopic:	"Show_Symbol_Window"
	Label:	"Показать окно символов..."
	Click:	"Project.ShowHideSymWin"
	Shortcut:	"Keys.Ctrl+P"
)

(Space.2885
	ObjectTag:	2886
	Update:	"WindowMenuUpdate"
)

(AVStr.2886
	S:	"57.apr Ae.Make"
)

(Choice.2887
	Help:	"Activates 57.apr"
	Label:	"&1 57.apr"
	Click:	"WindowActivate"
	Shortcut:	"Keys.None"
)

(Choice.2888
	Help:	"Activates Ae.Make"
	Label:	"&2 Ae.Make"
	Click:	"WindowActivate"
	Shortcut:	"Keys.None"
)

(PMenu.2889
	InternalName:	"Help"
	Child:	2890
	Child:	2891
	Child:	2892
	Child:	2893
	Label:	"&Справка"
)

(Choice.2890
	Help:	"Вызывает диалог для просмотра и поиска справок ArcView"
	HelpTopic:	"Help_on_Help_Topics"
	Label:	"&Темы справки..."
	Click:	"Project.HelpTopics"
	Shortcut:	"Keys.None"
)

(Choice.2891
	Help:	"Предоставляет инструкции о том, как получить справку из ArcView"
	HelpTopic:	"Help_on_How_to_Get_Help"
	Label:	"&Как получить справку"
	Click:	"Project.HelpHelp"
	Shortcut:	"Keys.None"
)

(Space.2892
)

(Choice.2893
	Help:	"Предоставляет информацию об ArcView"
	HelpTopic:	"About"
	Label:	"О &программе ArcView..."
	Click:	"Project.About"
	Shortcut:	"Keys.None"
)

(ButnBar.2894
	Child:	2895
	Child:	2897
	Child:	2898
	Child:	2900
	Child:	2902
	Child:	2904
	Child:	2905
	Child:	2907
	Child:	2908
	Child:	2910
	Child:	2912
	Child:	2913
	Child:	2915
	Child:	2917
	Child:	2919
	Child:	2921
	Child:	2923
	Child:	2924
	Child:	2926
	Child:	2928
	Child:	2930
	Child:	2931
	Child:	2933
)

(Butn.2895
	Help:	"Сохранить проект//Сохраняет текущий проект"
	HelpTopic:	"Save_Project"
	Icon:	2896
	Click:	"Project.Save"
)

(AVIcon.2896
	Name:	"Save"
	Res:	"Icons.Save"

)

(Space.2897
)

(Butn.2898
	Help:	"Вырезать//Вырезает выбранные элементы и помещает их в буфер обмена"
	HelpTopic:	"Cut"
	Update:	"Script.HasSelUpdate"
	Icon:	2899
	Click:	"Script.Cut"
)

(AVIcon.2899
	Name:	"Cut"
	Res:	"Icons.Cut"

)

(Butn.2900
	Help:	"Копировать//Копирует выбранные элементы и помещает их в буфер обмена"
	HelpTopic:	"Copy"
	Update:	"Script.HasSelUpdate"
	Icon:	2901
	Click:	"Script.Copy"
)

(AVIcon.2901
	Name:	"Copy"
	Res:	"Icons.Copy"

)

(Butn.2902
	Help:	"Вставить//Вставляет содержимое буфера обмена"
	HelpTopic:	"Paste"
	Icon:	2903
	Click:	"Script.Paste"
)

(AVIcon.2903
	Name:	"Paste"
	Res:	"Icons.Paste"

)

(Space.2904
)

(Butn.2905
	Help:	"Отменить//Отменяет последнее изменение текста программы"
	HelpTopic:	"Undo__Script_"
	Icon:	2906
	Click:	"Script.Undo"
)

(AVIcon.2906
	Name:	"Undo"
	Res:	"Icons.Undo"

)

(Space.2907
)

(Butn.2908
	Help:	"Сдвинуть строки влево//Сдвигает выбранные строки или текущую строку на два пробела влево"
	HelpTopic:	"Shift_lines_left_or_right"
	Icon:	2909
	Click:	"Script.ShiftLeft"
)

(AVIcon.2909
	Name:	"ShiftLeft"
	Res:	"Icons.ShiftLeft"

)

(Butn.2910
	Help:	"Сдвинуть строки вправо//Сдвигает выбранные строки или текущую строку на два пробела вправо"
	HelpTopic:	"Shift_lines_left_or_right"
	Icon:	2911
	Click:	"Script.ShiftRight"
)

(AVIcon.2911
	Name:	"ShiftRight"
	Res:	"Icons.ShiftRight"

)

(Space.2912
)

(Butn.2913
	Disabled:	1
	Help:	"Компилировать//Компилирует программу"
	HelpTopic:	"Compile"
	Update:	"Script.CompileUpdate"
	Icon:	2914
	Click:	"Script.Compile"
)

(AVIcon.2914
	Name:	"Check"
	Res:	"Icons.Check"

)

(Butn.2915
	Help:	"Выполнить//Выполняет откомпилированную программу"
	HelpTopic:	"Run"
	Update:	"Script.RunUpdate"
	Icon:	2916
	Click:	"Script.Run"
)

(AVIcon.2916
	Name:	"Run"
	Res:	"Icons.Run"

)

(Butn.2917
	Help:	"По шагам//Выполняет по шагам откомпилированную программу "
	HelpTopic:	"Step"
	Update:	"Script.RunUpdate"
	Icon:	2918
	Click:	"Script.Step"
)

(AVIcon.2918
	Name:	"Footprints"
	Res:	"Icons.Footprints"

)

(Butn.2919
	Help:	"Переключить точки останова//Включает или выключает точку останова в текущей позиции курсора"
	HelpTopic:	"Toggle_Breakpoint"
	Update:	"Script.RunUpdate"
	Icon:	2920
	Click:	"Script.ToggleBreak"
)

(AVIcon.2920
	Name:	"Hand"
	Res:	"Icons.Hand"

)

(Butn.2921
	Help:	"Проверить переменные//Показывает текущее значение локальных и глобальных переменных"
	HelpTopic:	"Examine_Variables"
	Update:	"Script.RunUpdate"
	Icon:	2922
	Click:	"Script.ShowVariables"
)

(AVIcon.2922
	Name:	"Examine"
	Res:	"Icons.Examine"

)

(Space.2923
)

(Butn.2924
	Help:	"Загрузить текст системной программы//Вставляет исходный код системной программы"
	HelpTopic:	"Load_System_Script"
	Icon:	2925
	Click:	"Script.SystemLoad"
)

(AVIcon.2925
	Name:	"LoadScript"
	Res:	"Icons.LoadScript"

)

(Butn.2926
	Help:	"Загрузить текстовый файл//Вставляет содержимое текстового файла"
	HelpTopic:	"Load_Text_File"
	Icon:	2927
	Click:	"Script.FileLoad"
)

(AVIcon.2927
	Name:	"Open"
	Res:	"Icons.Open"

)

(Butn.2928
	Help:	"Записать в текстовый файл//Записывает полный текст программы или выбранную часть в текстовый файл"
	HelpTopic:	"Write_Text_File"
	Icon:	2929
	Click:	"Script.FileWrite"
)

(AVIcon.2929
	Name:	"Write"
	Res:	"Icons.Write"

)

(Space.2930
)

(Butn.2931
	Help:	"Справка о текстах программ//Ищет справку для выбранного элемента"
	HelpTopic:	"Getting_help_about_script_components"
	Icon:	2932
	Click:	"Script.Help"
)

(AVIcon.2932
	Name:	"Help"
	Res:	"Icons.Help"

)

(Butn.2933
	Help:	"Справка//Показывает справку о кнопке, инструменте или пункте меню, на который будет переведен курсор"
	HelpTopic:	"Help_button"
	Icon:	2934
	Click:	"Help.Tool"
)

(AVIcon.2934
	Name:	"HelpTool"
	Res:	"Icons.HelpTool"

)

(PopupSet.2935
)

(ToolBar.2936
)

(AVIcon.2937
	Name:	"Icon"
	Res:	"SEd.Icon"

)

(DocGUI.2938
	Name:	"Chart"
	Type:	"Chart"
	Modified:	1
	MenuBar:	2939
	ButnBar:	2987
	Popups:	3016
	ToolBar:	3017
	NewScript:	"Chart.New"
	OpenScript:	"Doc.Open"
	ActionScript:	"Doc.Action"
	NewUpdateScript:	"Chart.NewUpdate"
	OpenUpdateScript:	"Doc.OpenUpdate"
	ActionUpdateScript:	"Doc.ActionUpdate"
	Title:	"Charts"
	Icon:	3028
)

(MenuBar.2939
	Child:	2940
	Child:	2955
	Child:	2957
	Child:	2964
	Child:	2975
	Child:	2982
)

(PMenu.2940
	InternalName:	"File"
	Child:	2941
	Child:	2942
	Child:	2943
	Child:	2944
	Child:	2945
	Child:	2946
	Child:	2947
	Child:	2948
	Child:	2949
	Child:	2950
	Child:	2951
	Child:	2952
	Child:	2953
	Child:	2954
	Label:	"&File"
)

(Choice.2941
	Help:	"Closes the active component"
	HelpTopic:	"Close"
	Label:	"&Close"
	Click:	"Project.CloseDoc"
	Shortcut:	"Keys.None"
)

(Choice.2942
	Help:	"Closes all components"
	HelpTopic:	"Close_All"
	Label:	"Close &All"
	Click:	"Project.CloseAll"
	Shortcut:	"Keys.None"
)

(Space.2943
)

(Choice.2944
	Help:	"Saves the current project"
	HelpTopic:	"Save_Project"
	Label:	"&Save Project"
	Click:	"Project.Save"
	Shortcut:	"Keys.Ctrl+S"
)

(Choice.2945
	Help:	"Saves the current project with a new name"
	HelpTopic:	"Save_Project_As"
	Label:	"Save Project As..."
	Click:	"Project.SaveAs"
	Shortcut:	"Keys.None"
)

(Space.2946
)

(Choice.2947
	Help:	"Displays the Extensions Dialog"
	HelpTopic:	"Extensions"
	Label:	"Extensions..."
	Click:	"Appl.GetExtensionWin"
	Shortcut:	"Keys.None"
)

(Space.2948
)

(Choice.2949
	Help:	"Prints the chart"
	HelpTopic:	"Print"
	Label:	"&Print..."
	Click:	"Doc.Print"
	Shortcut:	"Keys.None"
)

(Choice.2950
	Help:	"Edits the printer and the printing options"
	HelpTopic:	"Print_Setup"
	Update:	"PrintSetupUpdate"
	Label:	"P&rint Setup..."
	Click:	"Project.PrintSetup"
	Shortcut:	"Keys.None"
)

(Space.2951
)

(Choice.2952
	Help:	"Display the dialog box of the code page profile"
	HelpTopic:	"Code_Page_Profile"
	Label:	"C&ode Page Profile..."
	Click:	"ShowCodepage"
	Shortcut:	"Keys.None"
)

(Space.2953
)

(Choice.2954
	Help:	"Exits ArcView"
	HelpTopic:	"Exit"
	Label:	"E&xit"
	Click:	"Project.Exit"
	Shortcut:	"Keys.None"
)

(PMenu.2955
	InternalName:	"Edit"
	Child:	2956
	Label:	"&Edit"
)

(Choice.2956
	Disabled:	1
	Help:	"Undoes the last erase"
	HelpTopic:	"Undo_Erase"
	Update:	"Chart.UndoUpdate"
	Label:	"&Undo Erase"
	Click:	"Chart.Undo"
	Shortcut:	"Keys.None"
)

(PMenu.2957
	InternalName:	"Gallery"
	Child:	2958
	Child:	2959
	Child:	2960
	Child:	2961
	Child:	2962
	Child:	2963
	Label:	"&Gallery"
)

(Choice.2958
	Help:	"Displays the Area chart gallery"
	HelpTopic:	"Area_Chart_Gallery"
	Label:	"&Area..."
	Click:	"Chart.AreaGallery"
	Shortcut:	"Keys.None"
)

(Choice.2959
	Help:	"Displays the Bar chart gallery"
	HelpTopic:	"Bar_Chart_Gallery"
	Label:	"&Bar..."
	Click:	"Chart.BarGallery"
	Shortcut:	"Keys.None"
)

(Choice.2960
	Help:	"Displays the Column chart gallery"
	HelpTopic:	"Column_Chart_Gallery"
	Label:	"&Column..."
	Click:	"Chart.ColumnGallery"
	Shortcut:	"Keys.None"
)

(Choice.2961
	Help:	"Displays the Line chart gallery"
	HelpTopic:	"Line_Chart_Gallery"
	Label:	"&Line..."
	Click:	"Chart.LineGallery"
	Shortcut:	"Keys.None"
)

(Choice.2962
	Help:	"Displays the Pie chart gallery"
	HelpTopic:	"Pie_Chart_Gallery"
	Label:	"&Pie..."
	Click:	"Chart.PieGallery"
	Shortcut:	"Keys.None"
)

(Choice.2963
	Disabled:	1
	Help:	"Displays the XY Scatter chart gallery"
	HelpTopic:	"Scatter_Chart_Gallery"
	Update:	"Chart.TwoColumnUpdate"
	Label:	"XY &Scatter..."
	Click:	"Chart.ScatterGallery"
	Shortcut:	"Keys.None"
)

(PMenu.2964
	InternalName:	"Chart"
	Child:	2965
	Child:	2966
	Child:	2967
	Child:	2968
	Child:	2969
	Child:	2970
	Child:	2971
	Child:	2972
	Child:	2973
	Child:	2974
	Label:	"&Chart"
)

(Choice.2965
	Help:	"Displays the dialog box to edit properties of the chart"
	HelpTopic:	"Chart_Properties"
	Label:	"&Properties..."
	Click:	"Chart.Properties"
	Shortcut:	"Keys.None"
)

(Space.2966
)

(Choice.2967
	Disabled:	1
	Help:	"Toggles series from records / series from fields"
	HelpTopic:	"Series_From_Records_Fields"
	Update:	"Chart.ToggleUpdateMenu"
	Label:	"&Series in rows/columns"
	Click:	"Chart.Toggle"
	Shortcut:	"Keys.None"
)

(Space.2968
)

(Choice.2969
	Help:	"Finds the row in the table using the text you enter"
	HelpTopic:	"Find"
	Label:	"&Find..."
	Click:	"Chart.Find"
	Shortcut:	"Keys.Ctrl+F"
)

(Space.2970
)

(Choice.2971
	Help:	"Shows or hides the chart's title"
	HelpTopic:	"Show_Hide_Chart_Title"
	Update:	"Chart.ToggleTitleUpdate"
	Label:	"Show/Hide &Title"
	Click:	"Chart.ToggleTitle"
	Shortcut:	"Keys.None"
)

(Choice.2972
	Help:	"Shows or hides the chart's legend"
	HelpTopic:	"Show_Hide_Chart_Legend"
	Update:	"Chart.ToggleLegendUpdate"
	Label:	"Show/Hide &Legend"
	Click:	"Chart.ToggleLegend"
	Shortcut:	"Keys.None"
)

(Choice.2973
	Help:	"Shows or hides the chart's X Axis"
	HelpTopic:	"Show_Hide_Chart_X_Axis"
	Update:	"Chart.ToggleXAxisUpdate"
	Label:	"Show/Hide &X Axis"
	Click:	"Chart.ToggleXAxis"
	Shortcut:	"Keys.None"
)

(Choice.2974
	Help:	"Shows or hides the chart's Y Axis"
	HelpTopic:	"Show_Hide_Chart_Y_Axis"
	Update:	"Chart.ToggleYAxisUpdate"
	Label:	"Show/Hide &Y Axis"
	Click:	"Chart.ToggleYAxis"
	Shortcut:	"Keys.None"
)

(PMenu.2975
	InternalName:	"Window"
	Child:	2976
	Child:	2977
	Child:	2978
	Child:	2979
	Child:	2980
	Child:	2981
	Label:	"&Window"
)

(Choice.2976
	Help:	"Arranges windows as non-overlapping tiles"
	HelpTopic:	"Tile"
	Label:	"&Tile"
	Click:	"Project.Tile"
	Shortcut:	"Keys.None"
)

(Choice.2977
	Help:	"Arranges windows"
	HelpTopic:	"Cascade"
	Label:	"&Cascade"
	Click:	"Project.Cascade"
	Shortcut:	"Keys.None"
)

(Choice.2978
	Help:	"Arranges iconified windows"
	HelpTopic:	"Arrange_Icons"
	Label:	"&Arrange Icons"
	Click:	"Project.ArrangeIcons"
	Shortcut:	"Keys.None"
)

(Space.2979
)

(Choice.2980
	Help:	"Shows the symbol window"
	HelpTopic:	"Show_Symbol_Window"
	Label:	"Show Symbol Window..."
	Click:	"Project.ShowHideSymWin"
	Shortcut:	"Keys.Ctrl+P"
)

(Space.2981
	Update:	"WindowMenuUpdate"
)

(PMenu.2982
	InternalName:	"Help"
	Child:	2983
	Child:	2984
	Child:	2985
	Child:	2986
	Label:	"&Help"
)

(Choice.2983
	Help:	"Displays the dialog for browsing and searching ArcView's help system"
	HelpTopic:	"Help_on_Help_Topics"
	Label:	"Help &Topics..."
	Click:	"Project.HelpTopics"
	Shortcut:	"Keys.None"
)

(Choice.2984
	Help:	"Provides instructions for how to obtain help from ArcView"
	HelpTopic:	"Help_on_How_to_Get_Help"
	Label:	"&How to Get Help..."
	Click:	"Project.HelpHelp"
	Shortcut:	"Keys.None"
)

(Space.2985
)

(Choice.2986
	Help:	"Provides information about ArcView"
	HelpTopic:	"About"
	Label:	"&About ArcView..."
	Click:	"Project.About"
	Shortcut:	"Keys.None"
)

(ButnBar.2987
	Child:	2988
	Child:	2990
	Child:	2991
	Child:	2993
	Child:	2994
	Child:	2996
	Child:	2998
	Child:	3000
	Child:	3002
	Child:	3004
	Child:	3006
	Child:	3007
	Child:	3009
	Child:	3011
	Child:	3013
	Child:	3014
)

(Butn.2988
	Help:	"Save Project//Saves the current project"
	HelpTopic:	"Save_Project"
	Icon:	2989
	Click:	"Project.Save"
)

(AVIcon.2989
	Name:	"Save"
	Res:	"Icons.Save"

)

(Space.2990
)

(Butn.2991
	Disabled:	1
	Help:	"Undo Erase//Undoes the last erase"
	HelpTopic:	"Undo_Erase"
	Update:	"Chart.UndoUpdate"
	Icon:	2992
	Click:	"Chart.Undo"
)

(AVIcon.2992
	Name:	"Undo"
	Res:	"Icons.Undo"

)

(Space.2993
)

(Butn.2994
	Help:	"Area Chart Gallery//Displays the Area chart gallery"
	HelpTopic:	"Area_Chart_Gallery"
	Icon:	2995
	Click:	"Chart.AreaGallery"
)

(AVIcon.2995
	Name:	"Area"
	Res:	"Icons.Area"

)

(Butn.2996
	Help:	"Bar Chart Gallery//Displays the Bar chart gallery"
	HelpTopic:	"Bar_Chart_Gallery"
	Icon:	2997
	Click:	"Chart.BarGallery"
)

(AVIcon.2997
	Name:	"Icon2"
	Res:	"Icons.Icon2"

)

(Butn.2998
	Help:	"Column Chart Gallery//Displays the Column chart gallery"
	HelpTopic:	"Column_Chart_Gallery"
	Icon:	2999
	Click:	"Chart.ColumnGallery"
)

(AVIcon.2999
	Name:	"Icon3"
	Res:	"Icons.Icon3"

)

(Butn.3000
	Help:	"Line Chart Gallery//Displays the Line chart gallery"
	HelpTopic:	"Line_Chart_Gallery"
	Icon:	3001
	Click:	"Chart.LineGallery"
)

(AVIcon.3001
	Name:	"Icon12"
	Res:	"Icons.Icon12"

)

(Butn.3002
	Help:	"Pie Chart Gallery//Displays the Pie chart gallery"
	HelpTopic:	"Pie_Chart_Gallery"
	Icon:	3003
	Click:	"Chart.PieGallery"
)

(AVIcon.3003
	Name:	"Pie"
	Res:	"Icons.Pie"

)

(Butn.3004
	Disabled:	1
	Help:	"XY Scatter Chart Gallery//Displays the XY Scatter chart gallery"
	HelpTopic:	"Scatter_Chart_Gallery"
	Update:	"Chart.TwoColumnUpdate"
	Icon:	3005
	Click:	"Chart.ScatterGallery"
)

(AVIcon.3005
	Name:	"Icon5"
	Res:	"Icons.Icon5"

)

(Space.3006
)

(Butn.3007
	Help:	"Chart Properties//Displays the dialog box to edit properties of the chart"
	HelpTopic:	"Chart_Properties"
	Icon:	3008
	Click:	"Chart.Properties"
)

(AVIcon.3008
	Name:	"Props"
	Res:	"Icons.Props"

)

(Butn.3009
	Disabled:	1
	Help:	"Series from Records/Fields//Toggles series from records / series from fields"
	HelpTopic:	"Series_From_Records_Fields"
	Update:	"Chart.ToggleUpdate"
	Icon:	3010
	Click:	"Chart.Toggle"
)

(AVIcon.3010
	Name:	"SeriesRowCol"
	Res:	"Icons.SeriesRowCol"

)

(Butn.3011
	Help:	"Find//Finds the row in the table using the text you enter"
	HelpTopic:	"Find"
	Icon:	3012
	Click:	"Chart.Find"
)

(AVIcon.3012
	Name:	"Find"
	Res:	"Icons.Find"

)

(Space.3013
)

(Butn.3014
	Help:	"Help//Gets help about the next button, tool, or menu choice you click"
	HelpTopic:	"Help_button"
	Icon:	3015
	Click:	"Help.Tool"
)

(AVIcon.3015
	Name:	"HelpTool"
	Res:	"Icons.HelpTool"

)

(PopupSet.3016
)

(ToolBar.3017
	Child:	3018
	Child:	3020
	Child:	3022
	Child:	3024
	Child:	3026
)

(Tool.3018
	Help:	"Identify//Provides information about a record"
	HelpTopic:	"Identify_tool"
	Tag:	"Identify"
	Icon:	3019
	Cursor:	"Cursors.ID"
	Apply:	"Chart.Identify"
)

(AVIcon.3019
	Name:	"ID"
	Res:	"Icons.ID"

)

(Tool.3020
	Help:	"Erase//Erases data markers from chart and unselects records from table"
	HelpTopic:	"Erase_tool"
	Tag:	"Erase"
	Icon:	3021
	Cursor:	"Cursors.Default"
	Apply:	"Chart.Erase"
)

(AVIcon.3021
	Name:	"Erase"
	Res:	"Icons.Erase"

)

(Tool.3022
	Disabled:	1
	Help:	"Erase with Polygon//Erases data markers within polygon from chart and unselects records from table"
	HelpTopic:	"Erase_with_Polygon_tool"
	Tag:	"ErasePoly"
	Update:	"Chart.IsScatterUpdate"
	Icon:	3023
	Cursor:	"Cursors.Default"
	Apply:	"Chart.ErasePoly"
)

(AVIcon.3023
	Name:	"EraseInPolygon"
	Res:	"Icons.EraseInPolygon"

)

(Tool.3024
	Help:	"Chart Element Properties//EDIT: changes chart element properties"
	HelpTopic:	"Chart_Element_Properties_tool"
	Tag:	"Edit"
	Icon:	3025
	Cursor:	"Cursors.Default"
	Apply:	"Chart.PropTool"
)

(AVIcon.3025
	Name:	"ChartPropertiesTool"
	Res:	"Icons.ChartPropertiesTool"

)

(Tool.3026
	Help:	"Chart Color//PAINT: changes chart element color"
	HelpTopic:	"Chart_Color_tool"
	Tag:	"Paint"
	Icon:	3027
	Cursor:	"Cursors.Default"
	Apply:	"Chart.PaintTool"
	Click:	"Chart.ShowSymWin"
)

(AVIcon.3027
	Name:	"ColorWheelRgb"
	Res:	"Icons.ColorWheelRgb"

)

(AVIcon.3028
	Name:	"Icon"
	Res:	"ChartDoc.Icon"

)

(DocGUI.3029
	Name:	"AVExtAdvEditView"
	DocBaseName:	"AVExtAdvEditViewDoc"
	Type:	"View"
	Modified:	1
	MenuBar:	3030
	ButnBar:	3139
	Popups:	3177
	ToolBar:	3197
	NewScript:	"AVExtAdvEditor.ProjDocAct"
	OpenScript:	"AVExtAdvEditor.ProjDocAct"
	ActionScript:	"AVExtAdvEditor.ProjDocAct"
	NewUpdateScript:	"AVExtAdvEditor.ProjDocUpd"
	OpenUpdateScript:	"AVExtAdvEditor.ProjDocUpd"
	ActionUpdateScript:	"AVExtAdvEditor.ProjDocUpd"
	Title:	"Editor"
	Icon:	3249
)

(MenuBar.3030
	Child:	3031
	Child:	3053
	Child:	3079
	Child:	3103
	Child:	3117
	Child:	3125
	Child:	3132
)

(PMenu.3031
	Child:	3032
	Child:	3033
	Child:	3034
	Child:	3035
	Child:	3036
	Child:	3037
	Child:	3038
	Child:	3039
	Child:	3040
	Child:	3041
	Child:	3042
	Child:	3043
	Child:	3044
	Child:	3045
	Child:	3046
	Child:	3047
	Child:	3048
	Child:	3049
	Child:	3050
	Child:	3051
	Child:	3052
	Label:	"Advanced Editor"
)

(Choice.3032
	Label:	"Snapping ..."
	Click:	"AVExtAdvEditor.DSnapOpen"
	Shortcut:	"Keys.Ctrl+S"
)

(Choice.3033
	Label:	"Snapping Offset Distance"
	Click:	"AVExtAdvEditor.SnapOffOpen"
	Shortcut:	"Keys.Ctrl+O"
)

(Space.3034
	Invisible:	1
)

(Choice.3035
	Invisible:	1
	Label:	"Trace Offset Distance"
	Shortcut:	"Keys.None"
)

(Space.3036
)

(Choice.3037
	Label:	"Target ..."
	Click:	"AVExtAdvEditor.DTOCOpen"
	Shortcut:	"Keys.Ctrl+W"
)

(Space.3038
)

(Choice.3039
	Label:	"Task ..."
	Click:	"AVExtAdvEditor.DTaskOpen"
	Shortcut:	"Keys.Ctrl+E"
)

(Space.3040
)

(Choice.3041
	Label:	"Attributes..."
	Click:	"AVExtAdvEditor.AttributShow"
	Shortcut:	"Keys.Ctrl+L"
)

(Space.3042
)

(Choice.3043
	Label:	"Set Selectable Themes ..."
	Click:	"AVExtAdvEditor.DSelectableOpen"
	Shortcut:	"Keys.Ctrl+G"
)

(Space.3044
)

(Choice.3045
	Disabled:	1
	Update:	"AVExtAdvEditor.RestoreSketchUpd"
	Label:	"Restore Sketch"
	Click:	"AVExtAdvEditor.RestoreSketch"
	Shortcut:	"Keys.Ctrl+R"
)

(Space.3046
)

(Choice.3047
	Disabled:	1
	Update:	"AVExtAdvEditor.RestoreSketchSaveUpd"
	Label:	"Save Sketch To File (ODB)"
	Click:	"AVExtAdvEditor.RestoreSketchSave"
	Shortcut:	"Keys.None"
)

(Choice.3048
	Label:	"Load Sketch From File (ODB)"
	Click:	"AVExtAdvEditor.RestoreSketchLoad"
	Shortcut:	"Keys.None"
)

(Space.3049
)

(Choice.3050
	Help:	"Stop Editing"
	Label:	"Stop Editing"
	Click:	"AVExtAdvEditor.EditEnd"
	Shortcut:	"Keys.None"
)

(Space.3051
)

(Choice.3052
	Help:	"Provides information about Advanced Editor"
	Label:	"About Advanced Editor..."
	Click:	"AVExtAdvEditor.StHelpAboutAE"
	Shortcut:	"Keys.None"
)

(PMenu.3053
	InternalName:	"Edit"
	Child:	3054
	Child:	3055
	Child:	3056
	Child:	3057
	Child:	3058
	Child:	3059
	Child:	3060
	Child:	3061
	Child:	3062
	Child:	3063
	Child:	3064
	Child:	3065
	Child:	3066
	Child:	3067
	Child:	3068
	Child:	3069
	Child:	3070
	Child:	3071
	Child:	3072
	Child:	3073
	Child:	3074
	Child:	3075
	Child:	3076
	Child:	3077
	Child:	3078
	Label:	"&Edit"
)

(Choice.3054
	Disabled:	1
	Help:	"Undo the last edit to features in a target theme"
	HelpTopic:	"Undo_Feature_Edit_on_a_view"
	Update:	"AVExtAdvEditor.StUndoEditUpd"
	Label:	"&Undo Feature Edit"
	Click:	"AVExtAdvEditor.StUndoEdit"
	Shortcut:	"Keys.Ctrl+Z"
)

(Choice.3055
	Disabled:	1
	Help:	"Redo the last edit operation on a target theme that was undone"
	HelpTopic:	"Redo_Feature_Edit_on_a_view"
	Update:	"AVExtAdvEditor.StRedoEditUpd"
	Label:	"&Redo Feature Edit"
	Click:	"AVExtAdvEditor.StRedoEdit"
	Shortcut:	"Keys.Ctrl+Y"
)

(Space.3056
)

(Choice.3057
	Disabled:	1
	Help:	"Cuts the selected features of a target theme to the clipboard"
	HelpTopic:	"Cut_Graphics"
	Update:	"AVExtAdvEditor.StCutUpd"
	Label:	"Cu&t Features"
	Click:	"AVExtAdvEditor.StCut"
	Shortcut:	"Keys.Ctrl+X"
)

(Choice.3058
	Disabled:	1
	Help:	"Copies the selected features of a target theme to the clipboard"
	HelpTopic:	"Copy_Graphics"
	Update:	"AVExtAdvEditor.StCopyUpd"
	Label:	"&Copy Features"
	Click:	"AVExtAdvEditor.StCopy"
	Shortcut:	"Keys.Ctrl+C"
)

(Choice.3059
	Disabled:	1
	Help:	"Removes the selected features from the view"
	HelpTopic:	"Delete_Graphics"
	Update:	"AVExtAdvEditor.StDeleteUpd"
	Label:	"&Delete Features"
	Click:	"AVExtAdvEditor.StDelete"
	Shortcut:	"Keys.Del"
)

(Space.3060
)

(Choice.3061
	Disabled:	1
	Help:	"Inserts the contents of the clipboard into a target theme"
	HelpTopic:	"Paste"
	Update:	"AVExtAdvEditor.StPasteUpd"
	Label:	"&Paste"
	Click:	"AVExtAdvEditor.StPaste"
	Shortcut:	"Keys.Ctrl+V"
)

(Space.3062
)

(Choice.3063
	Disabled:	1
	Help:	"Combines the selected polygons of a target theme"
	HelpTopic:	"Combine_Features"
	Update:	"AVExtAdvEditor.StCombineUpd"
	Label:	"Com&bine Features"
	Click:	"AVExtAdvEditor.StCombine"
	Shortcut:	"Keys.None"
)

(Choice.3064
	Disabled:	1
	Help:	"Unions the selected features to create a new feature of a target theme"
	HelpTopic:	"Union_Features"
	Update:	"AVExtAdvEditor.StUnionUpd"
	Label:	"U&nion Features"
	Click:	"AVExtAdvEditor.StUnion"
	Shortcut:	"Keys.None"
)

(Choice.3065
	Disabled:	1
	Help:	"Subtracts one selected polygon from the other selected polygon of a target theme"
	HelpTopic:	"Subtract_Features"
	Update:	"AVExtAdvEditor.StSubtractUpd"
	Label:	"&Subtract Features"
	Click:	"AVExtAdvEditor.StSubtract"
	Shortcut:	"Keys.None"
)

(Choice.3066
	Disabled:	1
	Help:	"Creates a new polygon from the area  of overlap between the selected polygons of a target theme"
	HelpTopic:	"Intersect_Features"
	Update:	"AVExtAdvEditor.StIntersectUpd"
	Label:	"&Intersect Features"
	Click:	"AVExtAdvEditor.StIntersect"
	Shortcut:	"Keys.None"
)

(Space.3067
)

(Choice.3068
	Update:	"AVExtAdvEditor.StCopyFromUpd"
	Label:	"Copy From ..."
	Click:	"AVExtAdvEditor.StCopyFrom"
	Shortcut:	"Keys.None"
)

(Space.3069
)

(Choice.3070
	Help:	"Move"
	Update:	"AVExtAdvEditor.NUpd"
	Label:	"Move"
	Click:	"AVExtAdvEditor.NMoveOpen"
	Shortcut:	"Keys.None"
)

(Choice.3071
	Help:	"MoveTo"
	Update:	"AVExtAdvEditor.NUpd"
	Label:	"MoveTo"
	Click:	"AVExtAdvEditor.NMoveToOpen"
	Shortcut:	"Keys.None"
)

(Choice.3072
	HelpTopic:	"Rotate"
	Update:	"AVExtAdvEditor.NUpd"
	Label:	"Rotate"
	Click:	"AVExtAdvEditor.RotateOpen"
	Shortcut:	"Keys.None"
)

(Choice.3073
	Help:	"Scale"
	Update:	"AVExtAdvEditor.NUpd"
	Label:	"Scale"
	Click:	"AVExtAdvEditor.NScaleOpen"
	Shortcut:	"Keys.None"
)

(Space.3074
)

(Choice.3075
	Help:	"Flip Horizontally"
	Update:	"AVExtAdvEditor.NUpd"
	Label:	"Flip Horizontally"
	Click:	"AVExtAdvEditor.NFlipH"
	Shortcut:	"Keys.None"
)

(Choice.3076
	Help:	"Flip Vertically"
	Update:	"AVExtAdvEditor.NUpd"
	Label:	"Flip Vertically"
	Click:	"AVExtAdvEditor.NFlipV"
	Shortcut:	"Keys.None"
)

(Space.3077
)

(Choice.3078
	Help:	"Convert all selected multipart features in all themes that are editing"
	Update:	"AVExtAdvEditor.StConvertMultiUpd"
	Label:	"Convert MultiPart"
	Click:	"AVExtAdvEditor.StConvertMulti"
	Shortcut:	"Keys.None"
)

(PMenu.3079
	InternalName:	"View"
	Child:	3080
	Child:	3081
	Child:	3082
	Child:	3083
	Child:	3084
	Child:	3085
	Child:	3086
	Child:	3087
	Child:	3088
	Child:	3089
	Child:	3090
	Child:	3091
	Child:	3092
	Child:	3093
	Child:	3094
	Child:	3095
	Child:	3096
	Child:	3097
	Child:	3098
	Child:	3099
	Child:	3100
	Child:	3101
	Child:	3102
	Label:	"&View"
)

(Choice.3080
	Help:	"Displays the dialog box to edit properties of the view"
	HelpTopic:	"View_Properties"
	Update:	"AVExtAdvEditor.StViewPropUpd"
	Label:	"&Properties..."
	Click:	"AVExtAdvEditor.StViewProp"
	Shortcut:	"Keys.None"
)

(Space.3081
)

(Choice.3082
	Label:	"Hide/Show TOC"
	Click:	"AVExtAdvEditor.TOCShow"
	Shortcut:	"Keys.None"
)

(Space.3083
)

(Choice.3084
	Help:	"Inserts themes into the view"
	HelpTopic:	"Add_Theme"
	Label:	"&Add Theme..."
	Click:	"AVExtAdvEditor.StAddTh"
	Shortcut:	"Keys.Ctrl+T"
)

(Choice.3085
	Disabled:	1
	Help:	"Displays a dialog box to create an XY or dynamic segmentation event-based theme "
	HelpTopic:	"Add_Event_Theme"
	Update:	"AVExtAdvEditor.StAddEventThUpd"
	Label:	"Add &Event Theme..."
	Click:	"AVExtAdvEditor.StAddEventTh"
	Shortcut:	"Keys.None"
)

(Choice.3086
	Help:	"Creates a new theme"
	HelpTopic:	"New_Theme"
	Label:	"&New Theme..."
	Click:	"AVExtAdvEditor.StNewTh"
	Shortcut:	"Keys.None"
)

(Space.3087
)

(Choice.3088
	Help:	"Removes the active themes from the view"
	HelpTopic:	"Delete_Themes"
	Update:	"AVExtAdvEditor.StDelThUpd"
	Label:	"Delete Themes"
	Click:	"AVExtAdvEditor.StDelTh"
	Shortcut:	"Keys.None"
)

(Space.3089
)

(Choice.3090
	Help:	"Makes all themes visible"
	HelpTopic:	"Themes_On_Themes_Off"
	Update:	"AVExtAdvEditor.StHasThUpd"
	Label:	"&Themes On"
	Click:	"AVExtAdvEditor.StThOn"
	Shortcut:	"Keys.None"
)

(Choice.3091
	Help:	"Makes all themes invisible"
	HelpTopic:	"Themes_On_Themes_Off"
	Update:	"AVExtAdvEditor.StHasThUpd"
	Label:	"T&hemes Off"
	Click:	"AVExtAdvEditor.StThOff"
	Shortcut:	"Keys.None"
)

(Space.3092
)

(Choice.3093
	Help:	"Zooms to the extent of all themes"
	HelpTopic:	"Zoom_to_Full_Extent"
	Update:	"AVExtAdvEditor.StAHasDataUpd"
	Label:	"Full E&xtent"
	Click:	"AVExtAdvEditor.StBFullExtent"
	Shortcut:	"Keys.None"
)

(Choice.3094
	Help:	"Zooms in on the center of the display"
	HelpTopic:	"Zoom_In"
	Update:	"AVExtAdvEditor.StAHasDataUpd"
	Label:	"Zoom &In"
	Click:	"AVExtAdvEditor.StBZoomIn"
	Shortcut:	"Keys.F2"
)

(Choice.3095
	Help:	"Zooms out from the center of the display"
	HelpTopic:	"Zoom_Out"
	Update:	"AVExtAdvEditor.StAHasDataUpd"
	Label:	"Zoom &Out"
	Click:	"AVExtAdvEditor.StBZoomOut"
	Shortcut:	"Keys.F3"
)

(Choice.3096
	Disabled:	1
	Help:	"Zooms to the extent of active themes"
	HelpTopic:	"Zoom_to_Active_Theme"
	Update:	"AVExtAdvEditor.StBActiveThemesUpd"
	Label:	"&Zoom To Themes"
	Click:	"AVExtAdvEditor.StBZoomThemes"
	Shortcut:	"Keys.None"
)

(Choice.3097
	Disabled:	1
	Help:	"Zooms to the extent of the selected features"
	HelpTopic:	"Zoom_to_Selected"
	Update:	"AVExtAdvEditor.StBSelectableThemesUpd"
	Label:	"Zoom To &Selected"
	Click:	"AVExtAdvEditor.StBZoomToSelected"
	Shortcut:	"Keys.None"
)

(Choice.3098
	Help:	"Goes back to the previous extent you were viewing"
	HelpTopic:	"Zoom_Previous"
	Update:	"AVExtAdvEditor.StBUndoZoomUpd"
	Label:	"Zoom Pre&vious"
	Click:	"AVExtAdvEditor.StBUndoZoom"
	Shortcut:	"Keys.None"
)

(Choice.3099
	Help:	"Zooms to the extent of sketch"
	Update:	"AVExtAdvEditor.StBZoomSketchUpd"
	Label:	"Zoom To Sketch"
	Click:	"AVExtAdvEditor.StBZoomSketch"
	Shortcut:	"Keys.Ctrl+F2"
)

(Choice.3100
	Update:	"AVExtAdvEditor.StBPanSketchUpd"
	Label:	"Pan To Sketch"
	Click:	"AVExtAdvEditor.StBPanSketch"
	Shortcut:	"Keys.Ctrl+F3"
)

(Space.3101
)

(Choice.3102
	Disabled:	1
	Help:	"Finds features in the active themes using the text you enter"
	HelpTopic:	"Find"
	Update:	"AVExtAdvEditor.StTabThUpd"
	Label:	"&Find..."
	Click:	"AVExtAdvEditor.StFind"
	Shortcut:	"Keys.Ctrl+F"
)

(PMenu.3103
	InternalName:	"Theme"
	Child:	3104
	Child:	3105
	Child:	3106
	Child:	3107
	Child:	3108
	Child:	3109
	Child:	3110
	Child:	3111
	Child:	3112
	Child:	3113
	Child:	3114
	Child:	3115
	Child:	3116
	Label:	"&Theme"
)

(Choice.3104
	Disabled:	1
	Help:	"Displays the dialog box to edit properties of the active theme"
	HelpTopic:	"Theme_Properties"
	Update:	"AVExtAdvEditor.StBActiveThemesUpd"
	Label:	"&Properties..."
	Click:	"AVExtAdvEditor.StThProp"
	Shortcut:	"Keys.None"
)

(Space.3105
)

(Choice.3106
	Disabled:	1
	Help:	"Starts or stops editing of shapefile"
	HelpTopic:	"Start_Stop_Editing_in_a_view"
	Update:	"AVExtAdvEditor.StToogleEditUpd"
	Label:	"Start &Editing"
	Click:	"AVExtAdvEditor.StToogleEdit"
	Shortcut:	"Keys.None"
)

(Choice.3107
	Disabled:	1
	Help:	"Save edits to the source shapefile"
	HelpTopic:	"Save_edits_theme"
	Update:	"AVExtAdvEditor.StSaveEditUpd"
	Label:	"Save Ed&its"
	Click:	"AVExtAdvEditor.StSaveEdit"
	Shortcut:	"Keys.None"
)

(Choice.3108
	Disabled:	1
	Help:	"Saves edits to a new shapefile"
	HelpTopic:	"Save_edits_as_theme"
	Update:	"AVExtAdvEditor.StSaveEditUpd"
	Label:	"Save E&dits As..."
	Click:	"AVExtAdvEditor.StSaveEditAs"
	Shortcut:	"Keys.None"
)

(Choice.3109
	Disabled:	1
	Help:	"Converts a theme to a shapefile"
	HelpTopic:	"Convert_to_Shapefile"
	Update:	"AVExtAdvEditor.StExportUpd"
	Label:	"Convert to &Shapefile..."
	Click:	"AVExtAdvEditor.StExport"
	Shortcut:	"Keys.None"
)

(Space.3110
)

(Choice.3111
	Disabled:	1
	Help:	"Displays the legends of the active themes"
	HelpTopic:	"Edit_Legend"
	Update:	"AVExtAdvEditor.StBActiveThemesUpd"
	Label:	"Edit &Legend..."
	Click:	"AVExtAdvEditor.StLegend"
	Shortcut:	"Keys.None"
)

(Choice.3112
	Disabled:	1
	Help:	"Shows or hides the active themes' legends"
	HelpTopic:	"Hide_show_Legend"
	Update:	"AVExtAdvEditor.StBActiveThemesUpd"
	Label:	"&Hide/Show Legend"
	Click:	"AVExtAdvEditor.StToogleLeg"
	Shortcut:	"Keys.None"
)

(Space.3113
)

(Choice.3114
	Disabled:	1
	Help:	"Opens the tables of the active themes"
	HelpTopic:	"Open_Theme_Table"
	Update:	"AVExtAdvEditor.StTabThUpd"
	Label:	"&Table..."
	Click:	"AVExtAdvEditor.StShowTab"
	Shortcut:	"Keys.None"
)

(Choice.3115
	Disabled:	1
	Help:	"Displays the Query Builder to select features with a logical expression"
	HelpTopic:	"Query_Builder"
	Update:	"AVExtAdvEditor.StBAttrThUpd"
	Label:	"&Query..."
	Click:	"AVExtAdvEditor.StQuery"
	Shortcut:	"Keys.Ctrl+Q"
)

(Choice.3116
	Disabled:	1
	Help:	"Unselects the selected features of all active themes"
	HelpTopic:	"Clear_Selected_Features"
	Update:	"AVExtAdvEditor.StBAttrThUpd"
	Label:	"Clear Selected &Features"
	Click:	"AVExtAdvEditor.StClearSel"
	Shortcut:	"Keys.None"
)

(PMenu.3117
	Child:	3118
	Child:	3119
	Child:	3120
	Child:	3121
	Child:	3122
	Child:	3123
	Child:	3124
	Label:	"Options"
)

(Choice.3118
	Label:	"Tools"
	Click:	"AVExtAdvEditor.OptionsOpen"
	Shortcut:	"Keys.None"
)

(Space.3119
)

(Choice.3120
	Label:	"Drawing"
	Click:	"AVExtAdvEditor.OptionsDrOpen"
	Shortcut:	"Keys.None"
)

(Space.3121
)

(Choice.3122
	Label:	"Pan"
	Click:	"AVExtAdvEditor.OptionsPanOpen"
	Shortcut:	"Keys.None"
)

(Space.3123
)

(Choice.3124
	Label:	"General"
	Click:	"AVExtAdvEditor.OptionsGenOpen"
	Shortcut:	"Keys.None"
)

(PMenu.3125
	InternalName:	"Window"
	Child:	3126
	Child:	3127
	Child:	3128
	Child:	3129
	Child:	3131
	Label:	"&Window"
)

(Choice.3126
	Help:	"Arranges windows as non-overlapping tiles"
	HelpTopic:	"Tile"
	Label:	"&Tile"
	Click:	"AVExtAdvEditor.StWinTile"
	Shortcut:	"Keys.None"
)

(Choice.3127
	Help:	"Arranges windows"
	HelpTopic:	"Cascade"
	Label:	"&Cascade"
	Click:	"AVExtAdvEditor.StWinCasc"
	Shortcut:	"Keys.None"
)

(Choice.3128
	Help:	"Arranges iconified windows"
	HelpTopic:	"Arrange_Icons"
	Label:	"&Arrange Icons"
	Click:	"AVExtAdvEditor.StWinArr"
	Shortcut:	"Keys.None"
)

(Space.3129
	ObjectTag:	3130
	Update:	"AVExtAdvEditor.StWinUpd"
)

(AVStr.3130
	S:	"35.apr AVExtAdvEditor.StDelTh AVExtAdvEditor.StDelThUpd AVExtAdvEditor.ViewStart Editing View1 View1"
)

(Choice.3131
	Label:	"Item"
	Shortcut:	"Keys.None"
)

(PMenu.3132
	InternalName:	"Help"
	Child:	3133
	Child:	3134
	Child:	3135
	Child:	3136
	Child:	3137
	Child:	3138
	Label:	"&Help"
)

(Choice.3133
	Help:	"Displays the dialog for browsing and searching ArcView's help system"
	HelpTopic:	"Help_on_Help_Topics"
	Label:	"Help &Topics..."
	Click:	"AVExtAdvEditor.StHelpHelpTop"
	Shortcut:	"Keys.None"
)

(Choice.3134
	Help:	"Provides instructions for how to obtain help from ArcView"
	HelpTopic:	"Help_on_How_to_Get_Help"
	Label:	"&How to Get Help..."
	Click:	"AVExtAdvEditor.StHelpHelp"
	Shortcut:	"Keys.None"
)

(Choice.3135
	Invisible:	1
	Help:	"Displays the Advanced Editor HTML Help Topics"
	Label:	"Advanced Editor Help Topics..."
	Click:	"AVExtAdvEditor.StHelpHelpAE"
	Shortcut:	"Keys.None"
)

(Space.3136
)

(Choice.3137
	Help:	"Provides information about Advanced Editor"
	Label:	"About Advanced Editor..."
	Click:	"AVExtAdvEditor.StHelpAboutAE"
	Shortcut:	"Keys.None"
)

(Choice.3138
	Help:	"Provides information about ArcView"
	HelpTopic:	"About"
	Label:	"&About ArcView..."
	Click:	"AVExtAdvEditor.StHelpAbout"
	Shortcut:	"Keys.None"
)

(ButnBar.3139
	Child:	3140
	Child:	3142
	Child:	3144
	Child:	3145
	Child:	3147
	Child:	3148
	Child:	3150
	Child:	3152
	Child:	3154
	Child:	3155
	Child:	3157
	Child:	3159
	Child:	3160
	Child:	3162
	Child:	3164
	Child:	3166
	Child:	3168
	Child:	3170
	Child:	3172
	Child:	3173
	Child:	3175
)

(Butn.3140
	Help:	"Open \"Target\"//Open \"Target\""
	Update:	"AVExtAdvEditor.DTOCUpd"
	Icon:	3141
	Click:	"AVExtAdvEditor.DTOCOpen"
)

(AVIcon.3141
	Name:	"advedittocop.gif"
	Data:	4e442049 6d616765 0001000c 000c0000 
	Data:	00900101 01010101 01010101 01010101 
	Data:	03030101 03030303 01010101 03030303 
	Data:	03010103 01010101 03030303 03030301 
	Data:	01010101 01010101 01030303 01010101 
	Data:	01010101 01010101 01010101 01010101 
	Data:	01010101 01010101 03030303 03030101 
	Data:	01010101 01010303 01010303 01010101 
	Data:	03010101 03030303 01010101 03030303 
	Data:	03030303 01010101 01010101 01010101 
	Data:	01010000 001000ff ffff00ff 0a0a0000 
	Data:	000002c0 c0c00002 0008000a 00200002 
	Data:	00000000 00000000 0000
)

(Butn.3142
	Help:	"Open \"Task\"//Open \"Task\""
	Update:	"AVExtAdvEditor.SelectEditUpd"
	Icon:	3143
	Click:	"AVExtAdvEditor.DTaskOpen"
)

(AVIcon.3143
	Name:	"advedittk.gif"
	Data:	4e442049 6d616765 00010010 00100000 
	Data:	01000303 03030303 03030303 03030303 
	Data:	03030303 03030101 01010101 01010303 
	Data:	03030303 03030303 03030303 03030101 
	Data:	03030303 01010303 03030303 03030303 
	Data:	03030303 03030303 03030303 03030303 
	Data:	01030303 03030303 01010103 01010103 
	Data:	03030303 03010101 03030101 03030303 
	Data:	03030301 03030303 03030303 03030303 
	Data:	03030303 03030303 03030303 03030303 
	Data:	03010303 03030303 03030303 03030301 
	Data:	01030303 03030303 01010303 03010103 
	Data:	03030303 03030301 01010101 01010303 
	Data:	03030303 03030101 01010101 01030303 
	Data:	03030303 03010103 03030101 03030303 
	Data:	03030301 01030303 03030303 03030303 
	Data:	03030103 03030303 03030303 03030303 
	Data:	03030000 001000ff ffff0005 34fd0000 
	Data:	000002c0 c0c00002 0008000a 00200002 
	Data:	00000000 00000000 0000
)

(Space.3144
)

(Butn.3145
	Help:	"Open  \"Attributes\"//Open  \"Attributes\""
	Icon:	3146
	Click:	"AVExtAdvEditor.AttributShow"
)

(AVIcon.3146
	Name:	"adveditattr.gif"
	Data:	4e442049 6d616765 0001000f 000d0000 
	Data:	00c30202 02020202 02020202 02020202 
	Data:	04010000 00000000 00000000 00000103 
	Data:	01000000 00000000 00000000 00010304 
	Data:	03030303 03030303 03030303 03030100 
	Data:	00000000 00000000 00000001 03010000 
	Data:	00000000 00000000 00000103 01000000 
	Data:	00000000 00000000 00010302 02020202 
	Data:	02020202 02020202 02030100 00030303 
	Data:	00000303 03000001 03010000 03030300 
	Data:	00030303 00000103 01000003 03030000 
	Data:	03030300 00010301 00000303 03000003 
	Data:	03030000 01030101 01010101 01010101 
	Data:	01010101 03000000 2000ffff ff008482 
	Data:	84000000 84000000 0002c0c0 c0000000 
	Data:	00000000 00000000 00000200 08000a00 
	Data:	20000200 00000000 00000000 00
)

(Space.3147
)

(Butn.3148
	Disabled:	1
	Help:	"Theme Properties//Displays the dialog box to edit properties of the active theme"
	HelpTopic:	"Theme_Properties"
	Update:	"AVExtAdvEditor.StBActiveThemesUpd"
	Icon:	3149
	Click:	"AVExtAdvEditor.StThProp"
)

(AVIcon.3149
	Name:	"adveditstt15.gif"
	Data:	4e442049 6d616765 00010014 00110000 
	Data:	01540303 03030303 03030303 03030303 
	Data:	03030303 03030302 01000202 01000100 
	Data:	01000100 02030303 03030302 01000100 
	Data:	01000100 01000100 02030303 03030302 
	Data:	02020202 02020002 00000000 00020202 
	Data:	02020302 01000100 01000100 01000100 
	Data:	02030303 03030303 03030303 03030302 
	Data:	00000000 00020202 02020302 01000102 
	Data:	00020002 00020002 02020202 02020302 
	Data:	01020202 01020202 02020200 02030303 
	Data:	03030302 01020202 01020202 02020200 
	Data:	02030303 03030303 03030303 03030303 
	Data:	02020202 02020202 02020303 03030303 
	Data:	03030200 00000000 00020202 02020302 
	Data:	00010001 02000200 02000000 00020202 
	Data:	02020302 00010200 02010201 02010201 
	Data:	02030303 03030302 00010001 00010001 
	Data:	00010001 02030303 03030302 00020202 
	Data:	00020202 02020201 02030303 03030302 
	Data:	00020202 00020202 02020201 02030303 
	Data:	03030302 00010001 00010001 00010001 
	Data:	02030303 03030000 001000ff ffff00ad 
	Data:	aaad0000 000002c0 c0c00002 0008000a 
	Data:	00200002 00000000 00000000 0000
)

(Butn.3150
	Disabled:	1
	Help:	"Edit Legend//Displays the legends of the active themes"
	HelpTopic:	"Edit_Legend"
	Update:	"AVExtAdvEditor.StBActiveThemesUpd"
	Icon:	3151
	Click:	"AVExtAdvEditor.StLegend"
)

(AVIcon.3151
	Name:	"adveditstb1.gif"
	Data:	4e442049 6d616765 00010014 00110000 
	Data:	01540202 02030303 03030303 03030303 
	Data:	03030303 03030303 03020202 02000203 
	Data:	03030303 03030303 03030303 03030303 
	Data:	03010001 03030202 02000203 03030202 
	Data:	02030303 03030303 03030303 03030303 
	Data:	03030303 03010001 03030200 00000203 
	Data:	03030303 03030303 03030303 03030303 
	Data:	03030303 03030303 03030303 02020000 
	Data:	02030303 03030303 03030303 03030303 
	Data:	03010303 02020200 02030303 03030303 
	Data:	03030303 03030301 00010303 02020200 
	Data:	02030303 03030202 02030303 03030303 
	Data:	03030303 03030303 03030302 03030302 
	Data:	02020202 02020202 02020202 03030302 
	Data:	00020202 03030303 03030303 03030303 
	Data:	03030303 03020202 00020303 03030303 
	Data:	03030303 03030303 03030202 02020202 
	Data:	03030303 03030303 03030303 01000103 
	Data:	03020000 00020303 03030303 03030303 
	Data:	03030100 01030302 00020202 03030303 
	Data:	03030303 03030303 01000103 03020202 
	Data:	00020303 03030000 001000ff ffff00ad 
	Data:	aaad0000 000002c0 c0c00002 0008000a 
	Data:	00200002 00000000 00000000 0000
)

(Butn.3152
	Disabled:	1
	Help:	"Open Theme Table//Opens the tables of the active themes"
	HelpTopic:	"Open_Theme_Table"
	Update:	"AVExtAdvEditor.StTabThUpd"
	Icon:	3153
	Click:	"AVExtAdvEditor.StShowTab"
)

(AVIcon.3153
	Name:	"adveditstb2.gif"
	Data:	4e442049 6d616765 00010014 00110000 
	Data:	01540202 02020202 02020202 02020202 
	Data:	02020202 02020202 01000001 00000100 
	Data:	00010000 01000001 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 01000000 00000000 01010101 
	Data:	02020202 01000001 00000100 00010000 
	Data:	01000001 02020202 02020202 01000000 
	Data:	00000000 01010202 02020202 01000001 
	Data:	00000100 00010000 01000001 02020202 
	Data:	01000001 00000100 00010000 01000001 
	Data:	02020202 02020202 01000000 00000000 
	Data:	00000001 02020202 02020202 01010101 
	Data:	01010101 01020202 02020202 02020202 
	Data:	01000000 00000000 01000102 02020202 
	Data:	01010101 01010101 01010101 01000001 
	Data:	02020202 01010101 01010101 01010101 
	Data:	01000001 02020202 01010101 01010101 
	Data:	01010101 01000001 02020202 01010101 
	Data:	01010101 01010101 01000001 02020202 
	Data:	01010101 01010101 01010101 01000001 
	Data:	02020202 02020202 01010101 01010101 
	Data:	01010102 02020000 001000ff ffff0000 
	Data:	000002c0 c0c00000 00000002 0008000a 
	Data:	00200002 00000000 00000000 0000
)

(Space.3154
)

(Butn.3155
	Disabled:	1
	Help:	"Find//Finds features in the active themes using the text you enter"
	HelpTopic:	"Find"
	Update:	"AVExtAdvEditor.StTabThUpd"
	Icon:	3156
	Click:	"AVExtAdvEditor.StFind"
)

(AVIcon.3156
	Name:	"adveditstb3.gif"
	Data:	4e442049 6d616765 00010014 00110000 
	Data:	01540202 02020201 01010202 02010101 
	Data:	02020202 02020202 02010001 01010001 
	Data:	00010001 01010202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020100 01010102 01010001 01020202 
	Data:	02020202 01000101 01010202 02010001 
	Data:	01010102 02020202 02020201 01010202 
	Data:	02010101 02020202 02020202 02010001 
	Data:	01010101 01010001 01010202 02020202 
	Data:	01010101 01010102 01010101 01010202 
	Data:	02020202 01000101 01010202 02010001 
	Data:	01010102 02020202 02020201 00010202 
	Data:	02010001 02020202 02020202 02020100 
	Data:	01010202 02010001 01020202 02020202 
	Data:	02010101 01010102 01010101 01010202 
	Data:	02020202 02010001 01010101 01010001 
	Data:	01010202 02020202 02010001 01010101 
	Data:	01010001 01010202 02020202 01000101 
	Data:	01010202 02010001 01010102 02020202 
	Data:	01000101 01010202 02010001 01010102 
	Data:	02020202 01010101 01010202 02010101 
	Data:	01010102 02020000 001000ff ffff0000 
	Data:	000002c0 c0c00000 00000002 0008000a 
	Data:	00200002 00000000 00000000 0000
)

(Butn.3157
	Disabled:	1
	Help:	"Query Builder//Displays the Query Builder to select features with a logical expression"
	HelpTopic:	"Query_Builder"
	Update:	"AVExtAdvEditor.StBAttrThUpd"
	Icon:	3158
	Click:	"AVExtAdvEditor.StQuery"
)

(AVIcon.3158
	Name:	"adveditstb4.gif"
	Data:	4e442049 6d616765 00010014 00110000 
	Data:	01540202 02020202 02020202 02020202 
	Data:	01010102 02020202 01010102 02020101 
	Data:	00010102 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020101 01010102 02020202 02010202 
	Data:	02020202 02020202 02020202 02020101 
	Data:	00010102 02020202 02020201 01010101 
	Data:	02020201 02020201 02020202 01010101 
	Data:	01010101 01020202 02020202 02020202 
	Data:	02020202 02020202 01010001 01020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	01010001 02020202 02020202 02020101 
	Data:	01010201 02020201 02020202 02020101 
	Data:	01010102 02020202 02020102 02020202 
	Data:	02020101 01010101 02020202 02010202 
	Data:	02020202 01010102 02010100 01010202 
	Data:	02010202 02020202 02020202 02020201 
	Data:	01000101 02020202 02020202 02020202 
	Data:	02020202 02010100 01010202 02020202 
	Data:	02020202 02020202 02020201 01000101 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02010100 02020000 001000ff ffff0000 
	Data:	000002c0 c0c00000 00000002 0008000a 
	Data:	00200002 00000000 00000000 0000
)

(Space.3159
)

(Butn.3160
	Help:	"Zoom to Full Extent//Zooms to the extent of all themes"
	HelpTopic:	"Zoom_to_Full_Extent"
	Update:	"AVExtAdvEditor.StAHasDataUpd"
	Icon:	3161
	Click:	"AVExtAdvEditor.StBFullExtent"
)

(AVIcon.3161
	Name:	"adveditstb5.gif"
	Data:	4e442049 6d616765 00010014 00110000 
	Data:	01540202 02020202 02020202 02020202 
	Data:	02020202 02020202 01000000 00000100 
	Data:	00000000 01000001 00010101 01010101 
	Data:	01010101 01010102 02020202 02020202 
	Data:	02020202 02010101 00000000 00000000 
	Data:	01020201 00000000 00000000 00000001 
	Data:	00000102 02020202 02020202 02010101 
	Data:	02020202 02020202 02020202 02020100 
	Data:	01010101 01000000 00000100 00010101 
	Data:	01010101 01010101 01010100 00010000 
	Data:	01020202 01000000 00000000 00000000 
	Data:	01020202 02020202 02020202 02010101 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02010101 02010101 01010101 01010202 
	Data:	02020201 01010101 01010000 00000001 
	Data:	00010202 02010000 00010101 00000000 
	Data:	00010000 01020201 00000000 00000000 
	Data:	00000001 00000100 00010202 01000000 
	Data:	00000000 00000000 01000001 02020101 
	Data:	01010101 01010101 01010100 00010202 
	Data:	02020201 00000000 00000000 00000001 
	Data:	02020202 02020000 001000ff ffff0000 
	Data:	000002c0 c0c00000 00000002 0008000a 
	Data:	00200002 00000000 00000000 0000
)

(Butn.3162
	Disabled:	1
	Help:	"Zoom to Active Theme(s)//Zooms to the extent of active themes"
	HelpTopic:	"Zoom_to_Active_Theme"
	Update:	"AVExtAdvEditor.StBActiveThemesUpd"
	Icon:	3163
	Click:	"AVExtAdvEditor.StBZoomThemes"
)

(AVIcon.3163
	Name:	"adveditstb6.gif"
	Data:	4e442049 6d616765 00010014 00110000 
	Data:	01540303 03030303 03030303 03030303 
	Data:	03030303 03030303 02000000 00000200 
	Data:	00000000 02010102 00020202 02020202 
	Data:	02020202 02020203 03030303 03030303 
	Data:	03030303 03020202 00000000 00000000 
	Data:	02030302 01010101 01010101 01010102 
	Data:	00000203 03030303 03030303 03020202 
	Data:	03030303 03030303 03030303 03030200 
	Data:	02020202 02000000 00000201 01020202 
	Data:	02020202 02020202 02020201 01020000 
	Data:	02030303 02000000 00000000 00000000 
	Data:	02030303 03030303 03030303 03020202 
	Data:	03030303 03030303 03030303 03030303 
	Data:	03020202 03020202 02020202 02020303 
	Data:	03030302 02020202 02020000 00000002 
	Data:	01020303 03020000 00020202 00000000 
	Data:	00020101 02030302 00000000 00000000 
	Data:	00000002 01010200 00020303 02010101 
	Data:	01010101 01010101 02000002 03030202 
	Data:	02020202 02020202 02020200 00020303 
	Data:	03030302 00000000 00000000 00000002 
	Data:	03030303 03030000 001000ff ffff00ad 
	Data:	aaad0000 000002c0 c0c00002 0008000a 
	Data:	00200002 00000000 00000000 0000
)

(Butn.3164
	Disabled:	1
	Help:	"Zoom to Selected//Zooms to the extent of the selected features"
	HelpTopic:	"Zoom_to_Selected"
	Update:	"AVExtAdvEditor.StBSelectableThemesUpd"
	Icon:	3165
	Click:	"AVExtAdvEditor.StBZoomToSelected"
)

(AVIcon.3165
	Name:	"adveditstb7.gif"
	Data:	4e442049 6d616765 00010014 00110000 
	Data:	01540202 02020202 01010000 00010102 
	Data:	02020101 01020100 01000000 00010001 
	Data:	00010000 00000000 01020202 02020202 
	Data:	02020100 01000102 02020202 02020202 
	Data:	01000000 00000000 00000101 01010102 
	Data:	02020202 02020100 01000001 00000000 
	Data:	01000102 02020202 02020100 00000001 
	Data:	00000101 01010101 01020100 00000000 
	Data:	00000001 00000101 01010101 01020202 
	Data:	01000100 00010001 00010000 00000100 
	Data:	01020202 02020202 01000100 00000100 
	Data:	01020202 02020202 02020201 00000100 
	Data:	01000101 02010101 01010202 02010000 
	Data:	00000000 00000101 01010101 02020201 
	Data:	00000000 00000000 00000101 01010101 
	Data:	02020201 00000000 00000101 01000000 
	Data:	00000000 00010201 00010000 01010100 
	Data:	01010100 00000001 00010202 02010001 
	Data:	00000101 01000000 00010001 02020202 
	Data:	02020201 00010000 00000001 00010202 
	Data:	02020202 02020202 02010001 00010001 
	Data:	02020202 02020000 001000ff ffff0000 
	Data:	000002c0 c0c00000 00000002 0008000a 
	Data:	00200002 00000000 00000000 0000
)

(Butn.3166
	Help:	"Zoom In//Zooms in on the center of the display"
	HelpTopic:	"Zoom_In"
	Update:	"AVExtAdvEditor.StAHasDataUpd"
	Icon:	3167
	Click:	"AVExtAdvEditor.StBZoomIn"
)

(AVIcon.3167
	Name:	"adveditstb8.gif"
	Data:	4e442049 6d616765 00010014 00110000 
	Data:	01540202 01010202 02020202 02020202 
	Data:	02020101 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020201 01010102 02010101 01020202 
	Data:	02020202 02020101 01010102 02010101 
	Data:	01010202 02020202 02010101 02020102 
	Data:	02010202 01010102 02020202 02010101 
	Data:	01010102 02010101 01010102 02020202 
	Data:	02020201 01010102 02010101 01020202 
	Data:	02020202 01010102 02020102 02010202 
	Data:	02010101 02020202 01010102 02020102 
	Data:	02010202 02010101 02020202 02020101 
	Data:	01010102 02010101 01010202 02020202 
	Data:	02020201 01010102 02010101 01020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02010101 01010102 
	Data:	02010101 01010102 02020202 02020201 
	Data:	01010102 02010101 01020202 02020202 
	Data:	02010101 02020102 02010202 01010102 
	Data:	02020202 01010202 02020202 02020202 
	Data:	02020101 02020000 001000ff ffff0000 
	Data:	000002c0 c0c00000 00000002 0008000a 
	Data:	00200002 00000000 00000000 0000
)

(Butn.3168
	Help:	"Zoom Out//Zooms out from the center of the display"
	HelpTopic:	"Zoom_Out"
	Update:	"AVExtAdvEditor.StAHasDataUpd"
	Icon:	3169
	Click:	"AVExtAdvEditor.StBZoomOut"
)

(AVIcon.3169
	Name:	"adveditstb9.gif"
	Data:	4e442049 6d616765 00010014 00110000 
	Data:	01540202 01010101 01010202 02020101 
	Data:	01010101 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	01020201 01010202 02020101 01020201 
	Data:	02020202 01010101 01020202 02020201 
	Data:	01010101 02020202 01010101 02020202 
	Data:	02020202 01010101 02020202 02020202 
	Data:	02010102 02010102 02020202 02020202 
	Data:	01020202 01010102 02010101 02020201 
	Data:	02020202 01010101 02020202 02020202 
	Data:	01010101 02020202 01010101 02020202 
	Data:	02020202 01010101 02020202 01010101 
	Data:	01020202 02020201 01010101 02020202 
	Data:	01020202 01010102 02010101 02020201 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02010102 
	Data:	02010102 02020202 02020202 01020201 
	Data:	01010202 02020101 01020201 02020202 
	Data:	01010101 02020202 02020202 01010101 
	Data:	02020202 01010101 01010202 02020101 
	Data:	01010101 02020000 001000ff ffff0000 
	Data:	000002c0 c0c00000 00000002 0008000a 
	Data:	00200002 00000000 00000000 0000
)

(Butn.3170
	Help:	"Zoom to Previous Extent//Goes back to the previous extent you were viewing"
	HelpTopic:	"Zoom_Previous"
	Update:	"AVExtAdvEditor.StBUndoZoomUpd"
	Icon:	3171
	Click:	"AVExtAdvEditor.StBUndoZoom"
)

(AVIcon.3171
	Name:	"adveditstb10.gif"
	Data:	4e442049 6d616765 00010014 00110000 
	Data:	01540202 02020202 01010000 00010102 
	Data:	02020202 02020100 01000000 01010101 
	Data:	01010101 01000000 01020202 02020202 
	Data:	02020100 01000102 02020202 02020202 
	Data:	01000000 00000101 00000000 00000102 
	Data:	02020202 02020100 01000000 00000000 
	Data:	01000102 02020202 02020100 00000001 
	Data:	00000000 01020202 02020100 00000000 
	Data:	01010101 01010101 01000000 01020202 
	Data:	01000100 00000101 00000000 00000100 
	Data:	01020202 02020202 01000100 00000100 
	Data:	01020202 02020202 02020201 00000100 
	Data:	01000001 02020202 02020202 02010000 
	Data:	00000001 00000000 00010202 02020201 
	Data:	00000000 00010101 00000000 00000001 
	Data:	02020201 00000001 01010101 01010101 
	Data:	01000000 00010201 00010000 00010101 
	Data:	00000000 00000001 00010202 02010001 
	Data:	00000001 00000000 00010001 02020202 
	Data:	02020201 00010000 00000001 00010202 
	Data:	02020202 02020202 02010001 00010001 
	Data:	02020202 02020000 001000ff ffff0000 
	Data:	000002c0 c0c00000 00000002 0008000a 
	Data:	00200002 00000000 00000000 0000
)

(Space.3172
)

(Butn.3173
	Disabled:	1
	Help:	"Clear Selected Features//Unselects the selected features of all active themes"
	HelpTopic:	"Clear_Selected_Features"
	Update:	"AVExtAdvEditor.StBAttrThUpd"
	Icon:	3174
	Click:	"AVExtAdvEditor.StClearSel"
)

(AVIcon.3174
	Name:	"adveditstb11.gif"
	Data:	4e442049 6d616765 00010014 00110000 
	Data:	01540202 01010101 01010101 01010101 
	Data:	01010102 02020202 01000101 00000000 
	Data:	00000000 00000101 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	01000101 00000000 00000000 00000101 
	Data:	02020202 01000101 00000000 00000000 
	Data:	00000101 02020202 01000000 00000000 
	Data:	00000000 00000101 02020202 01000000 
	Data:	00000000 00000000 00000101 02020202 
	Data:	01000000 00000000 00000000 00000101 
	Data:	02020202 01010101 01010101 01010101 
	Data:	01010101 02020202 01000000 00000000 
	Data:	00000000 00000101 02020202 01000101 
	Data:	00000000 00000000 00000101 02020202 
	Data:	01000000 00000000 00000000 00000101 
	Data:	02020202 01000101 00000000 00000000 
	Data:	00000101 02020202 01000000 00000000 
	Data:	00000000 00000101 02020202 01000101 
	Data:	00000000 00000000 00000101 02020202 
	Data:	01000000 00000000 00000000 00000101 
	Data:	02020202 02010101 01010101 01010101 
	Data:	01010101 02020000 001000ff ffff0000 
	Data:	000002c0 c0c00000 00000002 0008000a 
	Data:	00200002 00000000 00000000 0000
)

(Butn.3175
	Help:	"Show - Hide TOC//Show - Hide TOC"
	Icon:	3176
	Click:	"AVExtAdvEditor.TOCShow"
)

(AVIcon.3176
	Name:	"advedittoc.gif"
	Data:	4e442049 6d616765 00010013 00100000 
	Data:	01300505 05050505 05050505 05050505 
	Data:	05050505 05050101 01010101 01050404 
	Data:	04050404 04050405 05020202 02020202 
	Data:	05050505 05050505 05050505 03030303 
	Data:	03030305 04050404 04050404 04050502 
	Data:	02020202 02020504 05040404 05040404 
	Data:	05050101 01010101 01050505 05050505 
	Data:	05050505 05050505 05050505 05050505 
	Data:	05050505 05050505 03030303 03030305 
	Data:	05050505 05050505 05050502 02020202 
	Data:	02020505 05050505 05050505 05050202 
	Data:	02020202 02050404 04050404 04050405 
	Data:	05050505 05050505 05050505 05050505 
	Data:	05050505 01010101 01010105 04050404 
	Data:	04050404 04050501 01010101 01010505 
	Data:	05050505 05050505 05050303 03030303 
	Data:	03050505 05050505 05050505 05030303 
	Data:	03030303 05040404 05040404 05040505 
	Data:	05050505 05050505 05050505 05050505 
	Data:	05050000 002000ff ffff00f4 0d0d0027 
	Data:	0afd0004 e1520000 000002c0 c0c00000 
	Data:	00000000 00000002 0008000a 00200002 
	Data:	00000000 00000000 0000
)

(PopupSet.3177
	Child:	3178
)

(Popup.3178
	Child:	3179
	Child:	3180
	Child:	3181
	Child:	3182
	Child:	3183
	Child:	3184
	Child:	3185
	Child:	3186
	Child:	3187
	Child:	3188
	Child:	3189
	Child:	3190
	Child:	3191
	Child:	3192
	Child:	3193
	Child:	3194
	Child:	3195
	Child:	3196
	Label:	"AVExtAdvEditor"
)

(Choice.3179
	Help:	"Angle..."
	Update:	"AVExtAdvEditor.PopUPAllUpd"
	Label:	"Angle..."
	Click:	"AVExtAdvEditor.AngleOpen"
	Shortcut:	"Keys.None"
)

(Choice.3180
	Help:	"Deflection ..."
	Update:	"AVExtAdvEditor.PopUPAllUpd"
	Label:	"Deflection ..."
	Click:	"AVExtAdvEditor.DeflectionOpen"
	Shortcut:	"Keys.None"
)

(Choice.3181
	Help:	"Length ..."
	Update:	"AVExtAdvEditor.PopUPAllUpd"
	Label:	"Length ..."
	Click:	"AVExtAdvEditor.LengthOpen"
	Shortcut:	"Keys.None"
)

(Choice.3182
	Update:	"AVExtAdvEditor.PopUPAllUpd"
	Label:	"Reset"
	Click:	"AVExtAdvEditor.PopUpReset"
	Shortcut:	"Keys.None"
)

(Space.3183
)

(Choice.3184
	Help:	"Absolute X, Y ..."
	Label:	"Absolute X, Y ..."
	Click:	"AVExtAdvEditor.AbsolutOpen"
	Shortcut:	"Keys.None"
)

(Choice.3185
	Help:	"Delta X, Y ..."
	Update:	"AVExtAdvEditor.PopUPAllUpd"
	Label:	"Delta X, Y ..."
	Click:	"AVExtAdvEditor.DeltaOpen"
	Shortcut:	"Keys.None"
)

(Choice.3186
	Help:	"Angle/Length ..."
	Update:	"AVExtAdvEditor.PopUPAllUpd"
	Label:	"Angle/Length ..."
	Click:	"AVExtAdvEditor.AnLenOpen"
	Shortcut:	"Keys.None"
)

(Space.3187
)

(Choice.3188
	Disabled:	1
	Help:	"Snap to StartPoint of Last Part"
	Update:	"AVExtAdvEditor.PopUPDelPartUpd"
	Label:	"Snap to StartPoint of Last Part"
	Click:	"AVExtAdvEditor.PopUPSnapPart"
	Shortcut:	"Keys.None"
)

(Choice.3189
	Help:	"Snap to StartPoint of Sketch"
	Update:	"AVExtAdvEditor.PopUPDelUpd"
	Label:	"Snap to StartPoint of Sketch"
	Click:	"AVExtAdvEditor.PopUPSnap"
	Shortcut:	"Keys.None"
)

(Space.3190
)

(Choice.3191
	Help:	"Delete Last Point"
	Update:	"AVExtAdvEditor.PopUPDelUpd"
	Label:	"Delete Last Point"
	Click:	"AVExtAdvEditor.PopUPDelPoint"
	Shortcut:	"Keys.None"
)

(Choice.3192
	Disabled:	1
	Help:	"Delete Last Part"
	Update:	"AVExtAdvEditor.PopUPDelPartUpd"
	Label:	"Delete Last Part"
	Click:	"AVExtAdvEditor.PopUPDelPart"
	Shortcut:	"Keys.None"
)

(Choice.3193
	Help:	"Delete Sketch"
	Update:	"AVExtAdvEditor.PopUPDelUpd"
	Label:	"Delete Sketch"
	Click:	"AVExtAdvEditor.PopUPDelSketch"
	Shortcut:	"Keys.None"
)

(Space.3194
)

(Choice.3195
	Help:	"Finish Part"
	Update:	"AVExtAdvEditor.PopUPFinPartUpd"
	Label:	"Finish Part"
	Click:	"AVExtAdvEditor.PopUPFinPart"
	Shortcut:	"Keys.None"
)

(Choice.3196
	Help:	"Finish Sketch"
	Update:	"AVExtAdvEditor.PopUPFinSketchUpd"
	Label:	"Finish Sketch"
	Click:	"AVExtAdvEditor.PopUPFinSketch"
	Shortcut:	"Keys.None"
)

(ToolBar.3197
	Child:	3198
	Child:	3200
	Child:	3202
	Child:	3204
	Child:	3206
	Child:	3225
	Child:	3227
	Child:	3229
	Child:	3231
	Child:	3233
	Child:	3235
	Child:	3237
	Child:	3239
	Child:	3246
	Child:	3248
	Child:	3250
	Child:	3252
	Child:	3254
	Child:	3255
	Child:	3257
	Child:	3259
)

(Tool.3198
	Help:	"Identify//Provides information about a feature"
	HelpTopic:	"Identify_tool"
	Update:	"AVExtAdvEditor.StTIdentifyUpd"
	Icon:	3199
	Cursor:	"Cursors.ID"
	Apply:	"AVExtAdvEditor.StTIdentify"
)

(AVIcon.3199
	Name:	"adveditstt1.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0202 02020202 02010101 01020202 
	Data:	02020202 02020101 01010101 00000101 
	Data:	01010101 02020202 02010101 01010101 
	Data:	01010101 01020202 02020202 02010101 
	Data:	01010101 01020202 02020202 02020101 
	Data:	01010000 01010101 02020202 02020101 
	Data:	01010101 00000101 01010101 02020202 
	Data:	02010101 01000000 00010101 01020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020201 01010101 01010102 
	Data:	02020202 02020201 01010101 00000101 
	Data:	01010102 02020202 01010101 01000000 
	Data:	01010101 01010202 02020101 01010101 
	Data:	00000101 01010101 02020202 02010101 
	Data:	01010000 01010101 01020202 02020202 
	Data:	01010101 01010101 01010202 02020202 
	Data:	02020202 02010101 01020202 02020202 
	Data:	00000010 00ffffff 00000000 02c0c0c0 
	Data:	00000000 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(Tool.3200
	Help:	"Measure//Measures distance"
	HelpTopic:	"Measure_tool"
	Update:	"AVExtAdvEditor.StAHasDataUpd"
	Icon:	3201
	Cursor:	"Cursors.Measure"
	Apply:	"AVExtAdvEditor.StTMeasure"
)

(AVIcon.3201
	Name:	"adveditstt2.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0202 02020202 02010101 02020202 
	Data:	02020202 02020201 02020202 02020202 
	Data:	02010202 02020202 02010202 02020102 
	Data:	02020201 02020202 02010000 00000000 
	Data:	00000000 00000001 02020202 02020202 
	Data:	02020202 01020202 02020202 02010101 
	Data:	01010102 02020101 01010101 02020201 
	Data:	01010101 01010101 01010101 01010202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 01020202 01020202 
	Data:	02020202 02020202 02020202 02010202 
	Data:	02020202 02020202 01010202 02020102 
	Data:	02020201 01020202 02020101 02020202 
	Data:	01020202 02010102 02020202 02020202 
	Data:	02020202 02020202 02020202 02010001 
	Data:	00010001 00010001 00010001 02020201 
	Data:	01010101 01010101 01010101 01010202 
	Data:	00000010 00ffffff 00000000 02c0c0c0 
	Data:	00000000 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(Tool.3202
	Help:	"Select Feature//Selects features"
	Icon:	3203
	Cursor:	"Cursors.Default"
	Apply:	"AVExtAdvEditor.ToolSelectNotEdit"
)

(AVIcon.3203
	Name:	"adveditstt16.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0202 02020202 01020202 02020202 
	Data:	02020202 02020202 02020102 02020202 
	Data:	02020201 02020202 01010100 00000101 
	Data:	01020101 01010202 02020202 02020102 
	Data:	02020202 02020201 02020202 02020202 
	Data:	01020202 02020202 02020202 02020202 
	Data:	02020102 02020202 02020201 02020202 
	Data:	02020202 01020202 02020202 02010202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 01020202 02020202 
	Data:	02020202 02020202 02020002 02020202 
	Data:	02020202 02020202 02020202 00020202 
	Data:	02020202 02010202 02020202 02020102 
	Data:	02020202 02020201 02020202 02020202 
	Data:	02020202 02020202 02010202 02020202 
	Data:	02020102 02020202 02020201 02020202 
	Data:	02020202 01010101 01010101 01010202 
	Data:	00000010 00ffffff 00000000 02c0c0c0 
	Data:	00000000 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(Tool.3204
	Disabled:	1
	Invisible:	1
	Icon:	3205
	Cursor:	"Cursors.Default"
)

(AVIcon.3205
	Name:	"Empty"
	Res:	"AVIcon.Empty"

)

(ToolMenu.3206
	Disabled:	1
	Help:	"Draw Point//Creates a point on the display"
	HelpTopic:	"Draw_tool"
	Update:	"AVExtAdvEditor.StTPointUpd"
	Icon:	3207
	Cursor:	"Cursors.CrossHair"
	Apply:	"AVExtAdvEditor.StTPoint"
	Child:	3208
	Child:	3209
	Child:	3211
	Child:	3213
	Child:	3215
	Child:	3217
	Child:	3219
	Child:	3221
	Child:	3223
)

(AVIcon.3207
	Name:	"adveditstt3.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 01010202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020201 01010102 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020101 
	Data:	02020202 02020202 02020202 02020201 
	Data:	01010102 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	00000010 00ffffff 00000000 02c0c0c0 
	Data:	00000000 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(Tool.3208
	Disabled:	1
	Help:	"Draw Point//Creates a point on the display"
	HelpTopic:	"Draw_tool"
	Update:	"AVExtAdvEditor.StTPointUpd"
	Icon:	3207
	Cursor:	"Cursors.CrossHair"
	Apply:	"AVExtAdvEditor.StTPoint"
)

(Tool.3209
	Disabled:	1
	Help:	"Draw Straight Line//Creates a line on the display"
	HelpTopic:	"Draw_tool"
	Update:	"AVExtAdvEditor.StTPolyLineUpd"
	Icon:	3210
	Cursor:	"Cursors.CrossHair"
	Apply:	"AVExtAdvEditor.StTLine"
)

(AVIcon.3210
	Name:	"adveditstt4.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020101 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 01020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020101 02020202 02020202 
	Data:	02010202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020101 02020202 02020202 02020202 
	Data:	01010202 02020202 02020202 02020101 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	00000010 00ffffff 00000000 02c0c0c0 
	Data:	00000000 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(Tool.3211
	Disabled:	1
	Help:	"Draw Line//Creates a line with two or more points on the display"
	HelpTopic:	"Draw_tool"
	Update:	"AVExtAdvEditor.StTPolyLineUpd"
	Icon:	3212
	Cursor:	"Cursors.CrossHair"
	Apply:	"AVExtAdvEditor.StTPolyLine"
)

(AVIcon.3212
	Name:	"adveditstt5.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0202 02020202 02020101 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	01010202 02020202 02020101 02020202 
	Data:	02020202 02020202 02020202 02020201 
	Data:	01010102 02020202 02020201 01010202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 01010202 02020202 02020202 
	Data:	02020202 02020202 02020202 02010102 
	Data:	02020202 02010202 02020202 02020202 
	Data:	02020202 02020101 01010202 02020202 
	Data:	02020202 02020101 02020202 02020202 
	Data:	02020202 02020202 02020202 01010202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020101 02020202 02020202 02020202 
	Data:	02020202 02020202 01010202 02020202 
	Data:	02020202 02020201 01010102 02020202 
	Data:	02020101 01020202 02020202 02020202 
	Data:	00000010 00ffffff 00000000 02c0c0c0 
	Data:	00000000 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(Tool.3213
	Disabled:	1
	Help:	"Draw Rectangle//Creates a rectangle on the display"
	HelpTopic:	"Draw_tool"
	Update:	"AVExtAdvEditor.StTPolyUpd"
	Icon:	3214
	Cursor:	"Cursors.CrossHair"
	Apply:	"AVExtAdvEditor.StTRect"
)

(AVIcon.3214
	Name:	"adveditstt6.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0202 02020202 02020202 02020202 
	Data:	02020202 02010000 00000000 00000000 
	Data:	00000000 01020201 00000000 00000000 
	Data:	00000000 00000102 02020202 02020202 
	Data:	02020202 02020202 02020201 01010101 
	Data:	01010101 01010101 01010102 02010000 
	Data:	00000000 00000000 00000000 01020201 
	Data:	00000000 00000000 00000000 00000102 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02010000 00000000 00000000 
	Data:	00000000 01020201 00000000 00000000 
	Data:	00000000 00000102 02010000 00000000 
	Data:	00000000 00000000 01020201 00000000 
	Data:	00000000 00000000 00000102 02010101 
	Data:	01010101 01010101 01010101 01020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	00000010 00ffffff 00000000 02c0c0c0 
	Data:	00000000 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(Tool.3215
	Disabled:	1
	Help:	"Draw Circle//Creates a circle on the display"
	HelpTopic:	"Draw_tool"
	Update:	"AVExtAdvEditor.StTPolyUpd"
	Icon:	3216
	Cursor:	"Cursors.CrossHair"
	Apply:	"AVExtAdvEditor.StTCircle"
)

(AVIcon.3216
	Name:	"adveditstt7.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0202 02020202 02020202 02020202 
	Data:	02020202 02020201 00000000 00000000 
	Data:	00000102 02020202 02020100 00000000 
	Data:	00000001 02020202 02020202 02010100 
	Data:	00000001 01020202 02020202 02020202 
	Data:	02010101 01020202 02020202 02020201 
	Data:	00000000 00000000 00000102 02020202 
	Data:	02020100 00000000 00000001 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02010100 00000001 
	Data:	01020202 02020202 02020100 00000000 
	Data:	00000001 02020202 02020201 00000000 
	Data:	00000000 00000102 02020202 02010000 
	Data:	00000000 00000000 01020202 02020202 
	Data:	01000000 00000000 00010202 02020202 
	Data:	02020202 02010101 01020202 02020202 
	Data:	00000010 00ffffff 00000000 02c0c0c0 
	Data:	00000000 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(Tool.3217
	Disabled:	1
	Help:	"Draw Polygon//Creates a polygon on the display"
	HelpTopic:	"Draw_tool"
	Update:	"AVExtAdvEditor.StTPolyUpd"
	Icon:	3218
	Cursor:	"Cursors.CrossHair"
	Apply:	"AVExtAdvEditor.StTPoly"
)

(AVIcon.3218
	Name:	"adveditstt8.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0202 02020202 02020202 02020202 
	Data:	02020202 02020201 00000000 00000001 
	Data:	02020202 02020202 02020201 00000000 
	Data:	00000102 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02010101 01010101 01020202 02020201 
	Data:	00000000 00000102 02020202 02020202 
	Data:	02010000 00000000 00000001 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020100 00000000 
	Data:	00010202 02020202 02020100 00000000 
	Data:	00010202 02020202 02020201 00000000 
	Data:	00000102 02020202 02020202 02010000 
	Data:	00000000 00000102 02020202 02020201 
	Data:	01010101 01010101 01010102 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	00000010 00ffffff 00000000 02c0c0c0 
	Data:	00000000 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(Tool.3219
	Disabled:	1
	Help:	"Draw Line to Split Feature//Creates a line to split line features"
	HelpTopic:	"Draw_tool"
	Update:	"AVExtAdvEditor.StTPolyLineUpd"
	Icon:	3220
	Cursor:	"Cursors.CrossHair"
	Apply:	"AVExtAdvEditor.StTSplit"
)

(AVIcon.3220
	Name:	"adveditstt9.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0202 02020202 02020101 02020202 
	Data:	02020202 02020202 01010202 02020202 
	Data:	01010202 02020202 02020101 02020202 
	Data:	02020101 02020202 02020202 02020201 
	Data:	01010102 02020202 02020201 01010202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020201 00000102 02020202 02020202 
	Data:	02020202 02020202 02020202 02010102 
	Data:	02020202 02010202 02020202 02020202 
	Data:	02020202 02020101 01010202 02020202 
	Data:	02020202 02020101 02020202 02020202 
	Data:	02020101 02020202 02020202 01010101 
	Data:	01010202 02020202 02020202 02020101 
	Data:	01010101 02020202 02020202 01010202 
	Data:	02020202 02020202 01010202 02020202 
	Data:	02020202 02020201 01010102 02020202 
	Data:	02020101 01020202 02020202 02020202 
	Data:	00000010 00ffffff 00000000 02c0c0c0 
	Data:	00000000 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(Tool.3221
	Disabled:	1
	Help:	"Draw Line to Split Polygon//Creates a line to split polygon features"
	HelpTopic:	"Draw_tool"
	Update:	"AVExtAdvEditor.StTPolyUpd"
	Icon:	3222
	Cursor:	"Cursors.CrossHair"
	Apply:	"AVExtAdvEditor.StTSplit"
)

(AVIcon.3222
	Name:	"adveditstt10.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0303 03030303 03020303 03030303 
	Data:	03030303 03030302 01030102 00000002 
	Data:	03030303 03030303 03030302 01020000 
	Data:	00000203 03030303 03030303 03030302 
	Data:	03030303 03030303 03030303 03030303 
	Data:	03020202 02020202 02030303 03030302 
	Data:	01030102 00000203 03030303 03030303 
	Data:	03020103 01020000 00000002 03030303 
	Data:	03030303 03030302 03030303 03030303 
	Data:	03030303 03030303 03020303 03030303 
	Data:	03030303 03030303 03030202 00000000 
	Data:	00020303 03030303 03030201 03020000 
	Data:	00020303 03030303 03030302 03010302 
	Data:	00000203 03030303 03030303 03020301 
	Data:	03020000 00000203 03030303 03030302 
	Data:	02020202 02020202 02020203 03030303 
	Data:	03030303 03020303 03030303 03030303 
	Data:	00000010 00ffffff 008c8a8c 00000000 
	Data:	02c0c0c0 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(Tool.3223
	Disabled:	1
	Help:	"Draw Line to Append Polygon//Appends a new polygon adjacent to other polygons"
	HelpTopic:	"Draw_tool"
	Update:	"AVExtAdvEditor.StTPolyUpd"
	Icon:	3224
	Cursor:	"Cursors.CrossHair"
	Apply:	"AVExtAdvEditor.StTAutoComplete"
)

(AVIcon.3224
	Name:	"adveditstt11.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0303 03030303 03030303 03030303 
	Data:	03030303 03020301 03020000 00000000 
	Data:	02030303 03030303 02010301 03020000 
	Data:	00000002 03030303 03030303 02020203 
	Data:	03030303 03030303 03030303 03030202 
	Data:	02020002 02020202 02020303 03020301 
	Data:	03020000 00000002 03030303 03030302 
	Data:	03010202 02000000 00000000 02030303 
	Data:	03030303 03030303 03030303 03030303 
	Data:	03030303 03030303 03020202 03030303 
	Data:	03030303 03030302 01030102 02020000 
	Data:	00000203 03030302 01030103 02000000 
	Data:	00000203 03030303 03020103 01020000 
	Data:	00000002 03030303 03030302 01030102 
	Data:	00000000 00000002 03030303 03020202 
	Data:	02000202 02020202 02020202 03030303 
	Data:	03030303 03030303 03030303 03030303 
	Data:	00000010 00ffffff 008c8a8c 00000000 
	Data:	02c0c0c0 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(Tool.3225
	Disabled:	1
	Invisible:	1
	Icon:	3226
	Cursor:	"Cursors.Default"
)

(AVIcon.3226
	Name:	"Empty"
	Res:	"AVIcon.Empty"

)

(Tool.3227
	InternalName:	"AEIn"
	Help:	"Zoom In//Zooms in at a point you click or zooms in on a rectangle you drag"
	HelpTopic:	"Zoom_In_tool"
	Update:	"AVExtAdvEditor.StAHasDataUpd"
	Icon:	3228
	Cursor:	"Cursors.ZoomIn"
	Apply:	"AVExtAdvEditor.StTZoomInTool"
)

(AVIcon.3228
	Name:	"adveditstt12.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0202 02020202 01010101 02020202 
	Data:	02020202 02010000 00000001 01000000 
	Data:	00000102 02020202 01000000 00010100 
	Data:	00000001 02020202 02020202 01010000 
	Data:	00000101 02010102 02020202 02010000 
	Data:	00000000 00000102 02020202 02010000 
	Data:	00010101 01010100 00000102 02020202 
	Data:	01000000 00000000 00000001 02020202 
	Data:	02020202 02020202 02020202 02020101 
	Data:	01020202 02020101 00000000 01010202 
	Data:	02020202 02020100 00000000 00000000 
	Data:	00010202 02020201 00000000 00010100 
	Data:	00000000 01020202 02010000 00010101 
	Data:	01010100 00000102 02020202 01000000 
	Data:	00010100 00000001 02020202 02020201 
	Data:	00000000 00000000 01020202 02020202 
	Data:	02020202 01010101 02020201 01010202 
	Data:	00000010 00ffffff 00000000 02c0c0c0 
	Data:	00000000 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(Tool.3229
	InternalName:	"AEOut"
	Help:	"Zoom Out//Zooms out from a point you click or zooms out to include a rectangle you drag"
	HelpTopic:	"Zoom_Out_tool"
	Update:	"AVExtAdvEditor.StAHasDataUpd"
	Icon:	3230
	Cursor:	"Cursors.ZoomOut"
	Apply:	"AVExtAdvEditor.StTZoomOutTool"
)

(AVIcon.3230
	Name:	"adveditstt13.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0202 02020202 01010101 02020202 
	Data:	02020202 02010000 00000000 00000000 
	Data:	00000102 02020202 01000000 00000000 
	Data:	00000001 02020202 02020202 01010000 
	Data:	00000101 02010102 02020202 02010000 
	Data:	00000000 00000102 02020202 02010000 
	Data:	00010101 01010100 00000102 02020202 
	Data:	01000000 00000000 00000001 02020202 
	Data:	02020202 02020202 02020202 02020101 
	Data:	01020202 02020101 00000000 01010202 
	Data:	02020202 02020100 00000000 00000000 
	Data:	00010202 02020201 00000000 00000000 
	Data:	00000000 01020202 02010000 00010101 
	Data:	01010100 00000102 02020202 01000000 
	Data:	00000000 00000001 02020202 02020201 
	Data:	00000000 00000000 01020202 02020202 
	Data:	02020202 01010101 02020201 01010202 
	Data:	00000010 00ffffff 00000000 02c0c0c0 
	Data:	00000000 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(Tool.3231
	InternalName:	"AEPan"
	Help:	"Pan//Drags the display in the direction you move the cursor"
	HelpTopic:	"Pan_tool"
	Update:	"AVExtAdvEditor.StAHasDataUpd"
	Icon:	3232
	Cursor:	"Cursors.Pan"
	Apply:	"AVExtAdvEditor.StTPan"
)

(AVIcon.3232
	Name:	"adveditstt14.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0202 02020202 02020101 02020202 
	Data:	02020202 02010000 00010000 00000000 
	Data:	00000001 02020202 02020100 00010000 
	Data:	01000001 01000102 02020202 01000000 
	Data:	00000000 00000102 02020202 02010000 
	Data:	01010000 01000001 02020202 02020101 
	Data:	00010000 00000000 00010000 01020202 
	Data:	02010000 00000000 00000000 00010202 
	Data:	02020202 02020100 00000000 00010202 
	Data:	02020202 02020101 02010000 01010102 
	Data:	02020202 02020201 00000101 00000100 
	Data:	00010201 02020202 02020100 00010000 
	Data:	01000001 00000102 02010000 01010000 
	Data:	00000000 00000000 01020202 01000000 
	Data:	00000000 00000000 00010202 02020201 
	Data:	00000000 00000000 00000102 02020202 
	Data:	02020201 00000000 00000001 02020202 
	Data:	00000010 00ffffff 00000000 02c0c0c0 
	Data:	00000000 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(Tool.3233
	Disabled:	1
	Invisible:	1
	Icon:	3234
	Cursor:	"Cursors.Default"
)

(AVIcon.3234
	Name:	"Empty"
	Res:	"AVIcon.Empty"

)

(Tool.3235
	InternalName:	"AEPointer"
	Help:	"Pointer//Pointer"
	Icon:	3236
	Cursor:	"Cursors.Default"
	Apply:	"AVExtAdvEditor.ToolSelect"
	Click:	"AVExtAdvEditor.ToolMoveCenterClick"
)

(AVIcon.3236
	Name:	"advedittoolp.gif"
	Data:	4e442049 6d616765 00010011 00110000 
	Data:	01210303 03030303 03030303 03030303 
	Data:	03030303 03030302 02020202 02020203 
	Data:	03030303 03030303 03030303 03030303 
	Data:	03030303 03030303 03020202 02030303 
	Data:	03030303 03030303 03030202 03030202 
	Data:	02030303 03030303 03030302 02030303 
	Data:	03030303 03030303 03030303 02020202 
	Data:	02020303 03030303 03030303 03020202 
	Data:	02020203 03030303 03030303 03030303 
	Data:	03030302 02020303 03030303 03030302 
	Data:	03030303 03030303 03030303 03030303 
	Data:	02020203 03030303 03030303 03030303 
	Data:	03020202 02020303 03030303 03030303 
	Data:	03030202 02020202 02030303 03030303 
	Data:	03030302 02020202 02020202 03030303 
	Data:	03030303 02020202 02020103 03030303 
	Data:	03030303 03020303 03010202 01030303 
	Data:	03030303 03030303 03030301 02020303 
	Data:	03030300 00001000 ffffff00 84828400 
	Data:	00000002 c0c0c000 02000800 0a002000 
	Data:	02000000 00000000 000000
)

(Tool.3237
	InternalName:	"AEVertex"
	Disabled:	1
	Invisible:	1
	Help:	"Vertex Edit//Vertex Edit"
	Update:	"AVExtAdvEditor.VertexEditUpd"
	Icon:	3238
	Cursor:	"Cursors.Default"
	Apply:	"AVExtAdvEditor.VertexEditStart"
	Click:	"AVExtAdvEditor.VertexEditClick"
)

(AVIcon.3238
	Name:	"advedittoolv.gif"
	Data:	4e442049 6d616765 00010011 00110000 
	Data:	01210202 02020202 02020202 02020202 
	Data:	02020202 02020202 02010101 01010102 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020201 01020202 
	Data:	02020202 02020202 02020202 01010202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020101 
	Data:	01010202 02020202 02020202 02020201 
	Data:	01010101 01010102 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020102 02020202 02020202 02020202 
	Data:	02020201 01010202 02020202 02020202 
	Data:	02020202 01010101 01020202 02020202 
	Data:	02020202 02010101 01010101 02020202 
	Data:	02020202 02020101 01020202 02020202 
	Data:	02020202 02020201 02020202 02020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020200 00001000 ffffff00 00000002 
	Data:	c0c0c000 00000000 02000800 0a002000 
	Data:	02000000 00000000 000000
)

(ToolMenu.3239
	InternalName:	"AEMoveMenu"
	Help:	"Move//Move"
	Update:	"AVExtAdvEditor.NUpd"
	Icon:	3240
	Cursor:	"Cursors.Default"
	Apply:	"AVExtAdvEditor.ToolMoveStart"
	Click:	"AVExtAdvEditor.ToolMoveCenterClick"
	Child:	3241
	Child:	3242
	Child:	3244
)

(AVIcon.3240
	Name:	"adveditstt21.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0404 04040404 04040404 04040404 
	Data:	04040404 04040400 04040401 00000002 
	Data:	02000003 04040404 04000404 04030000 
	Data:	00000000 00030404 04040404 04040404 
	Data:	04040404 04040404 04040404 04040404 
	Data:	04040404 04040404 04040404 04040400 
	Data:	04040403 00000002 02000003 04040404 
	Data:	04000404 04030000 00000000 00030404 
	Data:	04040404 04040404 04040404 04040404 
	Data:	04040404 04040404 04040404 04040404 
	Data:	04040404 04040403 00030003 03030303 
	Data:	03030303 04040404 04030404 04030000 
	Data:	00020000 00030404 04040403 04020202 
	Data:	02020202 02020003 04040404 04030404 
	Data:	04030000 00020000 00030404 04040403 
	Data:	00030003 03030303 03030303 04040404 
	Data:	04040404 04040404 04040404 04040404 
	Data:	00000020 00ffffff 00848284 00000084 
	Data:	00000000 02c0c0c0 00000000 00000000 
	Data:	00000000 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(Tool.3241
	InternalName:	"AEMove"
	Help:	"Move//Move"
	Update:	"AVExtAdvEditor.NUpd"
	Icon:	3240
	Cursor:	"Cursors.Default"
	Apply:	"AVExtAdvEditor.ToolMoveStart"
	Click:	"AVExtAdvEditor.ToolMoveCenterClick"
)

(Tool.3242
	InternalName:	"AEScale"
	Help:	"Scale//Scale"
	Update:	"AVExtAdvEditor.NUpd"
	Icon:	3243
	Cursor:	"Cursors.Default"
	Apply:	"AVExtAdvEditor.ToolScaleStart"
	Click:	"AVExtAdvEditor.ToolMoveCenterClick"
)

(AVIcon.3243
	Name:	"adveditstt20.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0301 03030303 03030303 03030303 
	Data:	03010303 03030303 03030302 02020303 
	Data:	03030303 03030303 03010301 03030303 
	Data:	03010301 03030303 03030101 01010303 
	Data:	03030301 01010103 03030303 01010101 
	Data:	03030303 03010101 01030303 03030303 
	Data:	03030302 02020303 03030303 03030303 
	Data:	03010301 03030303 03010301 03030303 
	Data:	03010303 03030303 03030303 03030301 
	Data:	03030303 01010303 03030303 03030301 
	Data:	01030303 03030301 01030303 03030303 
	Data:	01010303 03030303 03030303 03030303 
	Data:	03030303 03030303 03030303 03030302 
	Data:	00020303 03030303 03030303 03030303 
	Data:	03030303 03030303 03030303 03030301 
	Data:	01030303 03030303 01010303 03030303 
	Data:	01010303 03030303 03030301 01030303 
	Data:	00000010 00ffffff 00000084 00000000 
	Data:	02c0c0c0 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(Tool.3244
	InternalName:	"AERotate"
	Help:	"Rotate//Rotate"
	Update:	"AVExtAdvEditor.NUpd"
	Icon:	3245
	Cursor:	"Cursors.Default"
	Apply:	"AVExtAdvEditor.ToolRotateStart"
	Click:	"AVExtAdvEditor.ToolMoveCenterClick"
)

(AVIcon.3245
	Name:	"adveditstt19.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0303 03030303 01010101 01030303 
	Data:	03030303 03010303 03030302 02020303 
	Data:	03030301 03030303 01030303 03030303 
	Data:	03030303 01030303 03030301 03030303 
	Data:	03030303 03010103 03030303 03010303 
	Data:	03030303 03030301 03030303 03010303 
	Data:	03030302 02020303 03030301 03030303 
	Data:	01030303 03030303 03030301 01030303 
	Data:	03030303 03030303 03030303 03030303 
	Data:	03030303 03030101 03030303 03010103 
	Data:	03030303 03030103 03030303 03030303 
	Data:	03030103 03030301 03030303 03030303 
	Data:	03030303 03010303 03010303 03030302 
	Data:	00020303 03030301 03030301 03030303 
	Data:	03030303 03030303 03010303 03030103 
	Data:	03030303 03030303 03010101 03030303 
	Data:	03030103 03030303 03030301 03030303 
	Data:	00000010 00ffffff 00000084 00000000 
	Data:	02c0c0c0 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(Tool.3246
	Disabled:	1
	Invisible:	1
	Icon:	3247
	Cursor:	"Cursors.Default"
)

(AVIcon.3247
	Name:	"Empty"
	Res:	"AVIcon.Empty"

)

(Tool.3248
	InternalName:	"AEPen"
	Disabled:	1
	Help:	"Sketch//Sketch"
	Update:	"AVExtAdvEditor.ToolPenUpd"
	Icon:	3249
	Cursor:	"Cursors.CrossHair"
	Apply:	"AVExtAdvEditor.ToolPenPolygonStart"
	Click:	"AVExtAdvEditor.ToolPenPolylineClick"
)

(AVIcon.3249
	Name:	"advedittools.gif"
	Data:	4e442049 6d616765 00010011 00110000 
	Data:	01210606 06060606 06060606 06060606 
	Data:	06060606 06060605 04050101 05030305 
	Data:	06060606 06060606 06060606 06060606 
	Data:	06060606 06060606 06060606 06050405 
	Data:	02020205 06060606 03000000 05030506 
	Data:	06060606 06060606 06060606 06060606 
	Data:	06050205 06060606 06060606 06060504 
	Data:	05010105 05020506 06060606 05050101 
	Data:	05030305 06060606 06060605 05030303 
	Data:	06060606 06060606 06060606 06060606 
	Data:	06060606 06060506 06060606 06060606 
	Data:	06060606 06050202 02050606 06060606 
	Data:	06060606 05040501 05020202 05060606 
	Data:	06060605 04050101 05030305 06060606 
	Data:	06060504 05010105 03030506 06060606 
	Data:	06060300 00050503 03050606 06060606 
	Data:	06060303 00000005 05060606 06060606 
	Data:	06060605 05030606 06060606 06060606 
	Data:	06060600 00002000 ffffff00 ffff0000 
	Data:	ff000000 84828400 84820000 00000002 
	Data:	c0c0c000 00000000 02000800 0a002000 
	Data:	02000000 00000000 000000
)

(Tool.3250
	InternalName:	"AEArc"
	Disabled:	1
	Help:	"Arc//Arc"
	Update:	"AVExtAdvEditor.ToolArcUpd"
	Icon:	3251
	Cursor:	"Cursors.CrossHair"
	Apply:	"AVExtAdvEditor.ToolArcPolygonStart"
	Click:	"AVExtAdvEditor.ToolArcPolylineClick"
)

(AVIcon.3251
	Name:	"advedittoola.gif"
	Data:	4e442049 6d616765 00010011 00110000 
	Data:	01210404 04040404 04040404 04040404 
	Data:	04040404 04040403 04040404 04040404 
	Data:	04040404 04040404 04040404 04040404 
	Data:	04040404 04040404 04040404 03030404 
	Data:	04040101 01040404 04030404 04040404 
	Data:	04040404 04040404 04040404 04040404 
	Data:	04040404 01010104 04040404 04030404 
	Data:	04040404 04040404 04040404 03040404 
	Data:	04040404 04040404 04040404 02020204 
	Data:	04040404 04040404 04040404 04040404 
	Data:	04040404 04040404 04040404 04040404 
	Data:	04040404 04030303 03010101 04040404 
	Data:	04040403 04040404 04040404 04040404 
	Data:	04040304 04040404 04040404 04040404 
	Data:	04040304 04040404 04040404 04040404 
	Data:	04040403 04040404 04040404 04040404 
	Data:	04040402 02020404 04040404 04040404 
	Data:	04040404 02020204 04040404 04040404 
	Data:	04040400 00002000 ffffff00 ff000000 
	Data:	00820000 00000002 c0c0c000 00000000 
	Data:	00000000 00000000 02000800 0a002000 
	Data:	02000000 00000000 000000
)

(Tool.3252
	InternalName:	"AESemiArc"
	Disabled:	1
	Help:	"Semi Arc//Semi Arc"
	Update:	"AVExtAdvEditor.ToolSemiArcUpd"
	Icon:	3253
	Cursor:	"Cursors.CrossHair"
	Apply:	"AVExtAdvEditor.ToolSemiArcPolylineStart"
	Click:	"AVExtAdvEditor.ToolSemiArcPolylineClick"
)

(AVIcon.3253
	Name:	"advedittoolsa.gif"
	Data:	4e442049 6d616765 00010011 00110000 
	Data:	01210404 04040404 04040404 04040404 
	Data:	04040404 04040404 04040303 03010101 
	Data:	04040404 04040404 04040404 04040404 
	Data:	04040404 04040404 04040404 04040404 
	Data:	04040404 04040404 04030404 04040404 
	Data:	04040404 04040404 04040404 04040404 
	Data:	04040404 04040404 04040404 04040404 
	Data:	04040404 04040404 04040404 04030404 
	Data:	04040404 04040404 04040404 02020204 
	Data:	04040404 04040404 04040404 04040404 
	Data:	04040404 04040404 04040404 04040404 
	Data:	04040404 04040404 04040404 04040404 
	Data:	04040404 04040404 04040404 04040404 
	Data:	04040404 04040404 01010104 04040404 
	Data:	04040404 03030404 04010101 04040404 
	Data:	04040403 04040404 04040404 04040404 
	Data:	04040402 02020404 04040404 04040404 
	Data:	04040404 02020204 04040404 04040404 
	Data:	04040400 00002000 ffffff00 ff000000 
	Data:	00820000 00000002 c0c0c000 00000000 
	Data:	00000000 00000000 02000800 0a002000 
	Data:	02000000 00000000 000000
)

(Tool.3254
	InternalName:	"AECurve"
	Disabled:	1
	Invisible:	1
	Help:	"Curve Bezier//Curve Bezier"
	Update:	"AVExtAdvEditor.ToolCurveUpd"
	Icon:	2302
	Cursor:	"Cursors.CrossHair"
	Apply:	"AVExtAdvEditor.ToolCurvePolygonStart"
	Click:	"AVExtAdvEditor.ToolCurvePolylineClick"
)

(Tool.3255
	InternalName:	"AEStream"
	Disabled:	1
	Help:	"Stream//Stream"
	Update:	"AVExtAdvEditor.ToolStreamUpd"
	Icon:	3256
	Cursor:	"Cursors.CrossHair"
	Apply:	"AVExtAdvEditor.ToolStreamPolygonStart"
	Click:	"AVExtAdvEditor.ToolStreamPolylineClick"
)

(AVIcon.3256
	Name:	"advedittoolst.gif"
	Data:	4e442049 6d616765 00010011 00110000 
	Data:	01210202 02020202 02020202 02020202 
	Data:	02020202 02020202 02020201 02020102 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020202 02020202 01020202 01020102 
	Data:	02020202 02020202 02020202 02010202 
	Data:	01020102 02020202 02020201 02020202 
	Data:	02020202 02020202 02020201 02020102 
	Data:	02010202 02020202 02020202 02020201 
	Data:	02020201 02010202 02020202 02020202 
	Data:	02020202 02020101 02020202 02020202 
	Data:	02020202 02020202 02020202 02020201 
	Data:	02020202 01020202 02020202 02020202 
	Data:	01020201 02020102 02020202 02020202 
	Data:	02020101 02020201 02020202 02020202 
	Data:	02020202 02020102 02010201 02020202 
	Data:	02020202 02020102 02020102 01020202 
	Data:	02020202 02020202 02010101 01020202 
	Data:	02020202 02020202 02020202 02020202 
	Data:	02020200 00001000 ffffff00 00000002 
	Data:	c0c0c000 00000000 02000800 0a002000 
	Data:	02000000 00000000 000000
)

(Tool.3257
	Disabled:	1
	Invisible:	1
	Icon:	3258
	Cursor:	"Cursors.Default"
)

(AVIcon.3258
	Name:	"Empty"
	Res:	"AVIcon.Empty"

)

(ToolMenu.3259
	InternalName:	"AETraceMenu"
	Invisible:	1
	Help:	"Trace//Trace"
	Icon:	3260
	Cursor:	"Cursors.Default"
	Child:	3261
	Child:	3262
	Child:	3264
	Child:	3266
)

(AVIcon.3260
	Name:	"advedittoolt.gif"
	Data:	4e442049 6d616765 00010011 00110000 
	Data:	01210505 05050505 05050505 05050505 
	Data:	05050505 05050105 05050505 05050505 
	Data:	05050205 05050505 05050505 05050305 
	Data:	05050505 05050505 05050505 01050505 
	Data:	05050505 02050505 05050505 05050505 
	Data:	03050505 05050505 05050505 05050505 
	Data:	05050505 05050505 05050505 05010505 
	Data:	05050505 05050502 05050105 05050505 
	Data:	05050505 05050505 02050505 05050505 
	Data:	05050505 03030305 05050505 05050505 
	Data:	05050505 05050505 05050505 05050505 
	Data:	05050505 01020202 02020202 05050505 
	Data:	05050501 05050505 05050505 02050505 
	Data:	05050105 05050505 05050505 05020505 
	Data:	05010505 05050505 05050505 05050205 
	Data:	05010101 01010101 01010202 02020202 
	Data:	05050505 05050505 05050503 03050505 
	Data:	05050505 05050505 05050505 03030303 
	Data:	05050500 00002000 ffffff00 ff000000 
	Data:	84868400 00040000 00000002 c0c0c000 
	Data:	00000000 00000000 02000800 0a002000 
	Data:	02000000 00000000 000000
)

(Tool.3261
	InternalName:	"AETrace"
	Invisible:	1
	Help:	"Trace//Trace"
	Icon:	3260
	Cursor:	"Cursors.Default"
)

(Tool.3262
	InternalName:	"AEMeasure"
	Invisible:	1
	Help:	"Measures distance along feature//Measures distance along feature"
	Update:	"AVExtAdvEditor.ToolMeasureSelectedUpd"
	Icon:	3263
	Cursor:	"Cursors.CrossHair"
	Apply:	"AVExtAdvEditor.ToolMeasureSelectedStart"
	Click:	"AVExtAdvEditor.ToolMeasureSelectedClick"
)

(AVIcon.3263
	Name:	"advedittoolms.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0303 03030303 03010101 01010101 
	Data:	01030303 03030301 00000000 02000000 
	Data:	00010303 03030303 03010000 00000002 
	Data:	00010303 03030303 03020002 00020002 
	Data:	00020002 00020002 03030303 03030301 
	Data:	02000000 02000103 03030303 03030301 
	Data:	00000000 02000001 03030303 03030303 
	Data:	03030303 03030303 03030303 03030303 
	Data:	03020202 02020202 02020202 02020202 
	Data:	03030303 03030303 01020202 00000001 
	Data:	03030303 03030303 01000000 00000200 
	Data:	01030303 03030303 03010000 00000200 
	Data:	01030303 03030303 03030301 00000000 
	Data:	00000000 01030303 03030303 03010101 
	Data:	01010101 01010101 01030303 03020202 
	Data:	02020202 02020202 02020202 03030302 
	Data:	00000000 00000000 00000000 00020303 
	Data:	00000010 00ffffff 00097af8 00000000 
	Data:	02c0c0c0 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(Tool.3264
	InternalName:	"AESplit"
	Invisible:	1
	Help:	"Split//Split"
	Icon:	3265
	Cursor:	"Cursors.Default"
)

(AVIcon.3265
	Name:	"adveditstt17.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0303 03030303 03030303 03030303 
	Data:	03030303 03030303 03030303 01020303 
	Data:	03030303 03030303 03030303 03030303 
	Data:	03030303 03030203 03020303 03030303 
	Data:	03030303 03030303 03030303 03030303 
	Data:	03030303 03030303 03030303 03030303 
	Data:	03030303 03030303 02020303 03030303 
	Data:	03030202 03030301 03030303 03030303 
	Data:	03030303 03030303 03030303 03030303 
	Data:	03030303 03030303 03030303 03030303 
	Data:	03030303 03030303 03030303 03030303 
	Data:	03030303 03030303 03030303 03030303 
	Data:	03030303 02020303 03030303 03030301 
	Data:	03030202 03030303 03030303 03030303 
	Data:	02020103 03030303 03030303 03030202 
	Data:	03030303 03030303 03030303 03030303 
	Data:	03030303 03030303 03030303 03030303 
	Data:	00000010 00ffffff 00ff0000 00000000 
	Data:	02c0c0c0 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(Tool.3266
	InternalName:	"AESharedEdit"
	Invisible:	1
	Help:	"Shared Edit//Shared Edit"
	Icon:	3267
	Cursor:	"Cursors.Default"
)

(AVIcon.3267
	Name:	"adveditstt18.gif"
	Data:	4e442049 6d616765 00010012 000f0000 
	Data:	010e0303 03030303 03030303 03030303 
	Data:	02020203 03030303 03030101 01020202 
	Data:	02020303 03030303 03030303 03010302 
	Data:	03030303 03030303 03030302 03030302 
	Data:	03020202 03030303 03030303 03030202 
	Data:	01010102 02030303 03030303 03030303 
	Data:	03030301 03020202 03030303 03030303 
	Data:	03030302 01010102 02020202 02020303 
	Data:	03030203 03030302 03020303 03030303 
	Data:	03030303 02020303 01010103 03020202 
	Data:	03030303 03030303 03030101 01030303 
	Data:	03030303 03030303 03030303 03010302 
	Data:	02030303 03030303 03030303 03030301 
	Data:	03020202 02030303 03030303 03030303 
	Data:	01010102 02020202 02030303 03030303 
	Data:	02030302 03020202 02020202 02030303 
	Data:	03020303 03020302 02030303 03030303 
	Data:	00000010 00ffffff 00ff0000 00000000 
	Data:	02c0c0c0 00020008 000a0020 00020000 
	Data:	00000000 00000000 
)

(DocGUI.3268
	Name:	"AVExtAdvEditTheme"
	DocBaseName:	"AVExtAdvEditThemeDoc"
	Type:	"View"
	Modified:	1
	MenuBar:	3269
	ButnBar:	3272
	Popups:	3275
	ToolBar:	3278
	NewScript:	"AVExtAdvEditor.ProjDocAct"
	OpenScript:	"AVExtAdvEditor.ProjDocAct"
	ActionScript:	"AVExtAdvEditor.ProjDocAct"
	NewUpdateScript:	"AVExtAdvEditor.ProjDocUpd"
	OpenUpdateScript:	"AVExtAdvEditor.ProjDocUpd"
	ActionUpdateScript:	"AVExtAdvEditor.ProjDocUpd"
	Title:	"Editor"
	Icon:	3249
)

(MenuBar.3269
	Child:	3270
)

(PMenu.3270
	Child:	3271
	Label:	"Empty"
)

(Choice.3271
	Label:	"Empty"
	Shortcut:	"Keys.None"
)

(ButnBar.3272
	Child:	3273
)

(Butn.3273
	Icon:	3274
)

(AVIcon.3274
	Name:	"Empty"
	Res:	"AVIcon.Empty"

)

(PopupSet.3275
	Child:	3276
)

(Popup.3276
	Child:	3277
	Label:	"Empty"
)

(Choice.3277
	Label:	"Empty"
	Shortcut:	"Keys.None"
)

(ToolBar.3278
	Child:	3279
)

(Tool.3279
	Icon:	3280
	Cursor:	"Cursors.Default"
)

(AVIcon.3280
	Name:	"Empty"
	Res:	"AVIcon.Empty"

)

(FN.3398
	Path:	"$HOME"
)

(TClr.3399
	Red:	0xffff
	Green:	0xffff
)

(AVStr.3400
	S:	"View"
)

(AVStr.3401
	S:	"Table"
)

(AVStr.3402
	S:	"Layout"
)

(AVStr.3403
	S:	"Project"
)

(AVStr.3404
	S:	"Appl"
)

(AVStr.3405
	S:	"Script"
)

(AVStr.3406
	S:	"Chart"
)

(AVStr.3407
	S:	"AVExtAdvEditView"
)

(AVStr.3408
	S:	"AVExtAdvEditTheme"
)

(AVStr.3409
	S:	"DialogEditor"
)

